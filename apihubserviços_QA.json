{
    "swagger": "2.0",
    "host": "gpatio-gateway-qa.votorantim.com.br",
    "basePath": "/services",
    "schemes": [
        "https"
    ],
    "info": {
        "version": "2.1.0",
        "title": "APIs REST do Serviço de Carregamento do Gestão de Pátio / Hub de Serviços, v2"
    },
    "paths": {
        "/integracoes/email": {
            "post": {
                "tags": [
                    "Email"
                ],
                "summary": "Envio de Email",
                "operationId": "integration_sap_Email-EnviarEmail-POST-emailModel-version-v{version}/integracoes/email",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "emailModel",
                        "in": "body",
                        "description": "Objeto que contém as propriedades necessárias para envio de Email",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EmailModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mensagem criada com sucesso"
                    },
                    "500": {
                        "description": "Erro interno do servidor."
                    }
                }
            }
        },
        "/integracoes/appmotorista-hub/associacoes-motoristas-regioes": {
            "post": {
                "tags": [
                    "IntegracoesAppMotoristaHub"
                ],
                "summary": "Adiciona ao Hub de Serviços uma ou mais associações de Motoristas e Regiões criadas ou atualizadas no SAP",
                "operationId": "integration_sap_IntegracoesAppMotoristaHub-MotoristaRegiao_PostAsync-POST-dtos-version-v{version}/integracoes/appmotorista-hub/associacoes-motoristas-regioes",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dtos",
                        "in": "body",
                        "description": "Lista dos payloads com os dados das associações de Motoristas e Regiões realizadas no SAP",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MotoristaRegiaoPostDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Sucesso. Os novos registros foram criados."
                    },
                    "400": {
                        "description": "Os payloads de requisição não foram informados ou seu formato difere.",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/integracoes/hub-sap/portarias/{numeroPortaria}/status": {
            "get": {
                "tags": [
                    "IntegracoesHubSap"
                ],
                "summary": "Consulta o Status de uma Portaria no SAP",
                "operationId": "integration_sap_IntegracoesHubSap-StatusPortariaGetAsync-GET-numeroPortaria-version-v{version}/integracoes/hub-sap/portarias/{numeroPortaria}/status",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "numeroPortaria",
                        "in": "path",
                        "description": "Número da portaria \"",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retorna o código de status do SAP.",
                        "schema": {
                            "$ref": "#/definitions/StatusPortariaResponseDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/integracoes/pm-hub/confirmar-devolucao-nf": {
            "post": {
                "tags": [
                    "IntegracoesPortalMotoristaHub"
                ],
                "summary": "Endpoint para integração de confirmação de devolução de nota fiscal realizada pelo portal do motorista.",
                "operationId": "integration_sap_IntegracoesPortalMotoristaHub-ConfirmarDevolucaoNF-POST-dto-version-v{version}/integracoes/pm-hub/confirmar-devolucao-nf",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dto",
                        "in": "body",
                        "description": "Informação da nota fiscal",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EntregaNfPostDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Registrado com sucesso"
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/integracoes/sap-hub/associacoes-motoristas-regioes": {
            "post": {
                "tags": [
                    "IntegracoesSapHub"
                ],
                "summary": "Adiciona ao Hub de Serviços uma ou mais associações de Motoristas e Regiões criadas ou atualizadas no SAP",
                "operationId": "integration_sap_IntegracoesSapHub-MotoristaRegiao_PostAsync-POST-dtos-version-v{version}/integracoes/sap-hub/associacoes-motoristas-regioes",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dtos",
                        "in": "body",
                        "description": "Lista dos payloads com os dados das associações de Motoristas e Regiões realizadas no SAP",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MotoristaRegiaoPostDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Sucesso. Os novos registros foram criados."
                    },
                    "400": {
                        "description": "Os payloads de requisição não foram informados ou seu formato difere.",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/integracoes/sap-hub/clientes-cif-retira": {
            "post": {
                "tags": [
                    "IntegracoesSapHub"
                ],
                "summary": "Registra no Hub de Serviços um ou mais registros de CIF Retira criados ou atualizados no SAP",
                "operationId": "integration_sap_IntegracoesSapHub-ClienteCifRetira_PostAsync-POST-dtos-version-v{version}/integracoes/sap-hub/clientes-cif-retira",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dtos",
                        "in": "body",
                        "description": "Lista dos payloads com os dados dos registros de CIF Retira realizados no SAP",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CifRetiraPostDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Sucesso. Os novos registros foram criados."
                    },
                    "400": {
                        "description": "Os payloads de requisição não foram informados ou seu formato difere.",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/integracoes/sap-hub/clientes-cif-retira-permanente": {
            "post": {
                "tags": [
                    "IntegracoesSapHub"
                ],
                "summary": "Registra no Hub de Serviços um ou mais registros de CIF Retira Permanente criados ou atualizados no SAP",
                "operationId": "integration_sap_IntegracoesSapHub-CifRetiraPermanente_PostAsync-POST-dtos-version-v{version}/integracoes/sap-hub/clientes-cif-retira-permanente",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dtos",
                        "in": "body",
                        "description": "Lista dos payloads com os dados dos registros de CIF Retira Permanente realizados no SAP",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CifRetiraPermanentePostDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Sucesso. Os novos registros foram criados."
                    },
                    "400": {
                        "description": "Os payloads de requisição não foram informados ou seu formato difere.",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/integracoes/sap-hub/clientes-vip": {
            "post": {
                "tags": [
                    "IntegracoesSapHub"
                ],
                "summary": "Registra no Hub de Serviços um ou mais registros de Clientes VIP criados ou atualizados no SAP",
                "operationId": "integration_sap_IntegracoesSapHub-Cliente_PostAsync-POST-dtos-version-v{version}/integracoes/sap-hub/clientes-vip",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dtos",
                        "in": "body",
                        "description": "Lista dos payloads com os dados dos registros de Cliente VIP realizados no SAP",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ClientePostDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Sucesso. Os novos registros foram criados."
                    },
                    "400": {
                        "description": "Os payloads de requisição não foram informados ou seu formato difere.",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/integracoes/sap-hub/itinerarios": {
            "post": {
                "tags": [
                    "IntegracoesSapHub"
                ],
                "summary": "Registra no Hub de Serviços um ou mais registros de Itinerários criados ou atualizados no SAP",
                "operationId": "integration_sap_IntegracoesSapHub-Itinerario_PostAsync-POST-dtos-version-v{version}/integracoes/sap-hub/itinerarios",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dtos",
                        "in": "body",
                        "description": "Lista dos payloads com os dados dos registros de Itinerários realizados no SAP",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ItinerarioPostDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Sucesso. Os novos registros foram criados."
                    },
                    "400": {
                        "description": "Os payloads de requisição não foram informados ou seu formato difere.",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/integracoes/sap-hub/marcacoes/cancelamentos-portarias": {
            "post": {
                "tags": [
                    "IntegracoesSapHub"
                ],
                "summary": "Executa no Hub de Serviços um ou mais Cancelamentos de Portarias realizados no SAP",
                "operationId": "integration_sap_IntegracoesSapHub-Marcacao_CancelarPortaria_PostAsync-POST-dtos-version-v{version}/integracoes/sap-hub/marcacoes/cancelamentos-portarias",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dtos",
                        "in": "body",
                        "description": "Lista dos payloads com os dados dos Cancelamentos de Portarias realizados no SAP",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CancelarPortariaPostDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Sucesso. Os cancelamentos de portarias foram realizados."
                    },
                    "400": {
                        "description": "Os payloads de requisição não foram informados ou seu formato difere.",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/integracoes/sap-hub/marcacoes/retornos-associacoes": {
            "post": {
                "tags": [
                    "IntegracoesSapHub"
                ],
                "summary": "Registra no Hub de Serviços o retorno do SAP de uma ou mais solicitações de Associação de Marcação realizadas previamente pelo Hub de Serviços ao SAP",
                "operationId": "integration_sap_IntegracoesSapHub-Marcacao_RetornoAssociarMarcacao_PostAsync-POST-dtos-version-v{version}/integracoes/sap-hub/marcacoes/retornos-associacoes",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dtos",
                        "in": "body",
                        "description": "Lista dos payloads com os dados dos Retornos de Associações de Marcação realizadas no SAP",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RetornoAssociarMarcacaoPostDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Sucesso. Os retornos de associações de marcação foram registrados."
                    },
                    "400": {
                        "description": "Os payloads de requisição não foram informados ou seu formato difere.",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/integracoes/sap-hub/marcacoes/retornos-cancelamentos-associacoes": {
            "post": {
                "tags": [
                    "IntegracoesSapHub"
                ],
                "summary": "Registra no Hub de Serviços o Retorno do SAP de uma ou mais solicitações de Cancelamento de Associação de Marcação realizadas previamente pelo Hub de Serviços ao SAP",
                "operationId": "integration_sap_IntegracoesSapHub-Marcacao_RetornoCancelAssoc_PostAsync-POST-dtos-version-v{version}/integracoes/sap-hub/marcacoes/retornos-cancelamentos-associacoes",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dtos",
                        "in": "body",
                        "description": "Lista dos payloads com os dados dos Retornos de Cancelamento de Associações de Marcação realizadas no SAP",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/RetornoCancelarAssocPostDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Sucesso. Os retornos de cancelamentos de associações de marcação foram registrados."
                    },
                    "400": {
                        "description": "Os payloads de requisição não foram informados ou seu formato difere.",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/integracoes/sap-hub/marcacoes/atualizacoes-status-portarias": {
            "post": {
                "tags": [
                    "IntegracoesSapHub"
                ],
                "summary": "Registra no Hub de Serviços as Atualizações de um ou mais Status de Portaria ocorridas no SAP",
                "operationId": "integration_sap_IntegracoesSapHub-Marcacao_UpdateStatusPortariaAsync_PostAsync-POST-dtos-version-v{version}/integracoes/sap-hub/marcacoes/atualizacoes-status-portarias",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dtos",
                        "in": "body",
                        "description": "Lista dos payloads com os dados das Atualizações de Status de Portaria realizadas no SAP",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UpdateStatusPortariaCommPostDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Sucesso. As atualizações de status de portaria foram registrados."
                    },
                    "400": {
                        "description": "Os payloads de requisição não foram informados ou seu formato difere.",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/integracoes/sap-hub/motoristas": {
            "post": {
                "tags": [
                    "IntegracoesSapHub"
                ],
                "summary": "Registra no Hub de Serviços um ou mais registros de Motoristas criados ou atualizados no SAP",
                "operationId": "integration_sap_IntegracoesSapHub-Motorista_PostAsync-POST-dtos-version-v{version}/integracoes/sap-hub/motoristas",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dtos",
                        "in": "body",
                        "description": "Lista dos payloads com os dados dos registros de Motoristas realizados no SAP",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MotoristaPostDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Sucesso. Os novos registros foram criados."
                    },
                    "400": {
                        "description": "Os payloads de requisição não foram informados ou seu formato difere.",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/integracoes/sap-hub/paletes-produto": {
            "post": {
                "tags": [
                    "IntegracoesSapHub"
                ],
                "summary": "Registra no Hub de Serviços um ou mais registros de Paletização de Produtos criados ou atualizados no SAP",
                "operationId": "integration_sap_IntegracoesSapHub-PalletProduto_PostAsync-POST-dtos-version-v{version}/integracoes/sap-hub/paletes-produto",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dtos",
                        "in": "body",
                        "description": "Lista dos payloads com os dados dos registros de Paletrização de Produtos realizados no SAP",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PalletProdutoPostDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Sucesso. Os novos registros foram criados."
                    },
                    "400": {
                        "description": "Os payloads de requisição não foram informados ou seu formato difere.",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/integracoes/sap-hub/pedidos": {
            "post": {
                "tags": [
                    "IntegracoesSapHub"
                ],
                "summary": "Registra no Hub de Serviços um ou mais registros de Pedidos criados ou atualizados no SAP",
                "operationId": "integration_sap_IntegracoesSapHub-Pedido_PostAsync-POST-dtos-version-v{version}/integracoes/sap-hub/pedidos",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dtos",
                        "in": "body",
                        "description": "Lista dos payloads com os dados dos registros de Pedidos realizados no SAP",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PedidoPostDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Sucesso. Os novos registros foram criados."
                    },
                    "400": {
                        "description": "Os payloads de requisição não foram informados ou seu formato difere.",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/integracoes/sap-hub/pontos-carregamento": {
            "post": {
                "tags": [
                    "IntegracoesSapHub"
                ],
                "summary": "Registra no Hub de Serviços um ou mais registros de Pontos de Carregamento criados ou atualizados no SAP",
                "operationId": "integration_sap_IntegracoesSapHub-PontoCarregamento_PostAsync-POST-dtos-version-v{version}/integracoes/sap-hub/pontos-carregamento",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dtos",
                        "in": "body",
                        "description": "Lista dos payloads com os dados dos registros de Pontos de Carregamento realizados no SAP",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PontoCarregamentoPostDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Sucesso. Os novos registros foram criados."
                    },
                    "400": {
                        "description": "Os payloads de requisição não foram informados ou seu formato difere.",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/integracoes/sap-hub/produtos": {
            "post": {
                "tags": [
                    "IntegracoesSapHub"
                ],
                "summary": "Registra no Hub de Serviços um ou mais registros de Produtos criados ou atualizados no SAP",
                "operationId": "integration_sap_IntegracoesSapHub-Produto_PostAsync-POST-dtos-version-v{version}/integracoes/sap-hub/produtos",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dtos",
                        "in": "body",
                        "description": "Lista dos payloads com os dados dos registros de Produtos realizados no SAP",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProdutoPostDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Sucesso. Os novos registros foram criados."
                    },
                    "400": {
                        "description": "Os payloads de requisição não foram informados ou seu formato difere.",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/integracoes/sap-hub/regioes": {
            "post": {
                "tags": [
                    "IntegracoesSapHub"
                ],
                "summary": "Registra no Hub de Serviços um ou mais registros de Regiões criados ou atualizados no SAP",
                "operationId": "integration_sap_IntegracoesSapHub-Regiao_PostAsync-POST-dtos-version-v{version}/integracoes/sap-hub/regioes",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dtos",
                        "in": "body",
                        "description": "Lista dos payloads com os dados dos registros de Regiões realizados no SAP",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RegiaoPostDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Sucesso. Os novos registros foram criados."
                    },
                    "400": {
                        "description": "Os payloads de requisição não foram informados ou seu formato difere.",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/integracoes/sap-hub/tipos-veiculo": {
            "post": {
                "tags": [
                    "IntegracoesSapHub"
                ],
                "summary": "Registra no Hub de Serviços um ou mais registros de Tipos de Veículo criados ou atualizados no SAP",
                "operationId": "integration_sap_IntegracoesSapHub-TipoVeiculo_PostAsync-POST-dtos-version-v{version}/integracoes/sap-hub/tipos-veiculo",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dtos",
                        "in": "body",
                        "description": "Lista dos payloads com os dados dos registros de Tipos de Veículo realizados no SAP",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TipoVeiculoPostDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Sucesso. Os novos registros foram criados."
                    },
                    "400": {
                        "description": "Os payloads de requisição não foram informados ou seu formato difere.",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/integracoes/sap-hub/unidades-negocio": {
            "post": {
                "tags": [
                    "IntegracoesSapHub"
                ],
                "summary": "Registra no Hub de Serviços um ou mais registros de Unidades de Negócio criados ou atualizados no SAP",
                "operationId": "integration_sap_IntegracoesSapHub-UnidadeNegocio_PostAsync-POST-dtos-version-v{version}/integracoes/sap-hub/unidades-negocio",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dtos",
                        "in": "body",
                        "description": "Lista dos payloads com os dados dos registros de Unidades de Negócio realizados no SAP",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UnidadeNegocioPostDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Sucesso. Os novos registros foram criados."
                    },
                    "400": {
                        "description": "Os payloads de requisição não foram informados ou seu formato difere.",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/integracoes/sap-hub/veiculos": {
            "post": {
                "tags": [
                    "IntegracoesSapHub"
                ],
                "summary": "Registra no Hub de Serviços um ou mais registros de Veículos criados ou atualizados no SAP",
                "operationId": "integration_sap_IntegracoesSapHub-Veiculo_PostAsync-POST-dtos-version-v{version}/integracoes/sap-hub/veiculos",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dtos",
                        "in": "body",
                        "description": "Lista dos payloads com os dados dos registros de Veículos realizados no SAP",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/VeiculoPostDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Sucesso. Os novos registros foram criados."
                    },
                    "400": {
                        "description": "Os payloads de requisição não foram informados ou seu formato difere.",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/integracoes/sap-hub/ctrllogistico": {
            "post": {
                "tags": [
                    "IntegracoesSapHub"
                ],
                "operationId": "integration_sap_IntegracoesSapHub-Ctrllogistico_PostAsync-POST-dto-version-v{version}/integracoes/sap-hub/ctrllogistico",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CtrllogisticaPostDtoV2"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/integracoes/sap-hub/transportadoras": {
            "post": {
                "tags": [
                    "IntegracoesSapHub"
                ],
                "operationId": "integration_sap_IntegracoesSapHub-Transportadora_PostAsync-POST-dto-version-v{version}/integracoes/sap-hub/transportadoras",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TransportadoraPostDtoV2"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/integracoes/sap-hub/veiculos/dnit": {
            "post": {
                "tags": [
                    "IntegracoesSapHub"
                ],
                "operationId": "integration_sap_IntegracoesSapHub-DNITVeiculoPostAsync-POST-dto-version-v{version}/integracoes/sap-hub/veiculos/dnit",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/VeiculoDNITPostPayloadListSAP"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/integracoes/sap-hub/veiculos/dnit/composicao": {
            "post": {
                "tags": [
                    "IntegracoesSapHub"
                ],
                "operationId": "integration_sap_IntegracoesSapHub-DNITVeiculosComposicaoPostAsync-POST-dto-version-v{version}/integracoes/sap-hub/veiculos/dnit/composicao",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ComposicaoVeiculoDNITPostPayloadListSAP"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/integracoes/servicenow-hub/ticket-status": {
            "post": {
                "tags": [
                    "IntegracoesServiceNow"
                ],
                "operationId": "integration_sap_IntegracoesServiceNow-TicketStatus_PostAsync-POST-dto-version-v{version}/integracoes/servicenow-hub/ticket-status",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TicketStatusDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/integracoes/tms-hub/contratos": {
            "post": {
                "tags": [
                    "IntegracoesTmsHub"
                ],
                "summary": "Insere um novo contrato da REPOM no Hub, com suas respectivas NFs",
                "operationId": "integration_sap_IntegracoesTmsHub-ContratosPostAsync-POST-dto-version-v{version}/integracoes/tms-hub/contratos",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dto",
                        "in": "body",
                        "description": "Dados do contrato e das NFs",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContratoPostRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dados da solicitação de criação do contrato recebidos."
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/integracoes/tms-hub/contratos/{numeroContratoKMM}/status": {
            "put": {
                "tags": [
                    "IntegracoesTmsHub"
                ],
                "summary": "Altera o status de um contrato da REPOM",
                "operationId": "integration_sap_IntegracoesTmsHub-ContratosPutAsync-PUT-numeroContratoKMM-dto-version-v{version}/integracoes/tms-hub/contratos/{numeroContratoKMM}/status",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "numeroContratoKMM",
                        "in": "path",
                        "description": "Número do contrato da KMM cujo status devera ser alterado",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dto",
                        "in": "body",
                        "description": "Novo Status / Mensagem para o contrato",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ContratoPutRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dados da solicitação de alteração do status do contrato recebidos."
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/integracoes/tms-hub/contratos/{numeroContratoKMM}": {
            "delete": {
                "tags": [
                    "IntegracoesTmsHub"
                ],
                "summary": "Exclui um contrato da REPOM",
                "operationId": "integration_sap_IntegracoesTmsHub-ContratosDeleteAsync-DELETE-numeroContratoKMM-version-v{version}/integracoes/tms-hub/contratos/{numeroContratoKMM}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "numeroContratoKMM",
                        "in": "path",
                        "description": "Número do contrato da KMM que devrá ser excluído",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dados da solicitação de exclusão do contrato recebidos."
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/integracoes/sms": {
            "post": {
                "tags": [
                    "SMS"
                ],
                "summary": "Envio de SMS",
                "operationId": "integration_sap_SMS-EnviarSMS-POST-smsModel-version-v{version}/integracoes/sms",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "smsModel",
                        "in": "body",
                        "description": "Objeto que contém as propriedades necessárias para envio de SMS",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SMSModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mensagem criada com sucesso"
                    },
                    "500": {
                        "description": "Erro interno do servidor."
                    }
                }
            }
        },
        "/carregamentos/unidade-negocio/{unidadeNegocioId}/categoria/{categoria}/motorista/{motoristaId}/previsao-carregamento-motorista": {
            "get": {
                "tags": [
                    "Carregamentos"
                ],
                "summary": "Obtém o dados de carregamento do motorista",
                "operationId": "domain_carregamento_Carregamentos-GetPrevisaoCarregamentoMotorista-GET-motoristaId-unidadeNegocioId-categoria-version-v{version}/carregamentos/unidade-negocio/{unidadeNegocioId}/categoria/{categoria}/motorista/{motoristaId}/previsao-carregamento-motorista",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "motoristaId",
                        "in": "path",
                        "description": "ID do motorista.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "unidadeNegocioId",
                        "in": "path",
                        "description": "ID da unidade de negócio",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "categoria",
                        "in": "path",
                        "description": "Categoria de carregamento",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            0,
                            1
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações sobre carregamento do motorista",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Domain.Carregamento.Model.Painel.CarregamentoPainelItemDTO"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/tipos-carregamento/{id}": {
            "get": {
                "tags": [
                    "TiposCarregamento"
                ],
                "summary": "Obtém o tipo de carregamento por ID",
                "operationId": "domain_carregamento_TiposCarregamento-GetTipoCarregamentoById-GET-id-version-v{version}/tipos-carregamento/{id}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID do tipo de carregamento",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tipo de carregamento encontrado",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.TipoCarregamento.Http.Dto.TipoCarregamentoGetDto"
                        }
                    },
                    "404": {
                        "description": "Ponto tipo de carregamento não encontrado.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/tipos-carregamento/unidade-negocio/{unidadeNegocioId}/tipo/{tipo}": {
            "get": {
                "tags": [
                    "TiposCarregamento"
                ],
                "summary": "Obtém os tipos de carregamento da unidade por tipo",
                "operationId": "domain_carregamento_TiposCarregamento-GetTipoCarregamentoByUnidadeETipo-GET-unidadeNegocioId-tipo-version-v{version}/tipos-carregamento/unidade-negocio/{unidadeNegocioId}/tipo/{tipo}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "unidadeNegocioId",
                        "in": "path",
                        "description": "ID da unidade de negócio",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "tipo",
                        "in": "path",
                        "description": "Identificador do tipo de carregamento",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de tipos de carregamento",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.TipoCarregamento.Http.Dto.MotoristaParceiro.TipoCarregamentoMotoristaParceiroSimplifiedGetDto"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/marcacao-motivos-cancelamento": {
            "get": {
                "tags": [
                    "MarcacaoMotivosCancelamento"
                ],
                "summary": "Obtém os motivos de cancelamento",
                "operationId": "domain_mark_MarcacaoMotivosCancelamento-GetMotivosCarregamento-GET-version-v{version}/marcacao-motivos-cancelamento",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Lista com tipos de carregamento.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.v2.MarcacaoMotivosCancelamento.MarcacaoMotivoCancelamentoDTO"
                            }
                        }
                    }
                }
            }
        },
        "/marcacoes": {
            "post": {
                "tags": [
                    "Marcacoes"
                ],
                "summary": "Inclui uma marcação",
                "operationId": "domain_mark_Marcacoes-GetMarcacoes-POST-marcacao-version-v{version}/marcacoes",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "marcacao",
                        "in": "body",
                        "description": "Objeto marcação.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Marcacao.Http.Dto.Model.MarcacaoPostDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Marcacao.Http.Dto.Model.MarcacaoPostResponseDto"
                        }
                    },
                    "400": {
                        "description": "Dommínio/Modelo da Marcação inválido / Marcação já existe / Erro envio marcação (TRSNET) / Erro na comunização com (Unidade de Negócio OU Carregamento OU Veículo)",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "404": {
                        "description": "Erro na comunicação com Veículo, não encontrado ou inválido",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "200": {
                        "description": "Marcação criada."
                    }
                }
            }
        },
        "/marcacoes/{id}": {
            "get": {
                "tags": [
                    "Marcacoes"
                ],
                "summary": "Obtém uma marcação pelo  ID",
                "operationId": "domain_mark_Marcacoes-GetMarcacoesPorId-GET-id-version-v{version}/marcacoes/{id}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID da marcação",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Objeto Marcação encontrado.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Marcacao.Http.Dto.Model.MarcacaoGetDto"
                        }
                    },
                    "404": {
                        "description": "Marcação não foi encontrada.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/marcacoes/{id}/veiculos": {
            "get": {
                "tags": [
                    "Marcacoes"
                ],
                "summary": "Obtém os veículos de uma marcação pelo ID da marcação",
                "operationId": "domain_mark_Marcacoes-GetMarcacoesIdVeiculos-GET-id-version-v{version}/marcacoes/{id}/veiculos",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID da marcação",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de veículos vinculadas à marcação.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.Marcacao.Http.Dto.Model.Veiculo.MarcacaoVeiculoGetDto"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/marcacoes/{id}/roteiros": {
            "get": {
                "tags": [
                    "Marcacoes"
                ],
                "summary": "Obtém os roteiros de uma marcação pelo ID",
                "operationId": "domain_mark_Marcacoes-GetMarcacoesIdRoteiros-GET-id-version-v{version}/marcacoes/{id}/roteiros",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID da marcação",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Roteiro de marcação encontrado.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Marcacao.Http.Dto.Model.Roteiros.MarcacaoRoteiroGetDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "404": {
                        "description": "Roteiros de marcação não encontrados."
                    }
                }
            }
        },
        "/marcacoes/{id}/cancelar": {
            "post": {
                "tags": [
                    "Marcacoes"
                ],
                "summary": "Cancela uma marcação através do ID",
                "operationId": "domain_mark_Marcacoes-PostMarcacoesIdCancelar-POST-id-marcacao-version-v{version}/marcacoes/{id}/cancelar",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID da marcação",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "marcacao",
                        "in": "body",
                        "description": "Marcação a ser cancelada",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Marcacao.Http.Dto.Model.MarcacaoPostCancelarDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Marcação cancelada com sucesso."
                    },
                    "404": {
                        "description": "Marcação não foi encontrada / Motivo do cancelamento não informado.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/marcacoes/cte-indisponivel/{cte}": {
            "get": {
                "tags": [
                    "Marcacoes"
                ],
                "summary": "Verifica se CTE está indisponível",
                "operationId": "domain_mark_Marcacoes-GetMarcacoesChecarCteIndisponivel-GET-cte-version-v{version}/marcacoes/cte-indisponivel/{cte}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cte",
                        "in": "path",
                        "description": "Conhecimento de Transporte Eletrônico",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Flag indicando se CTE está indisponível.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/marcacoes/nfe-indisponivel/{nfe}": {
            "get": {
                "tags": [
                    "Marcacoes"
                ],
                "summary": "Verifica se NFE está indisponível",
                "operationId": "domain_mark_Marcacoes-GetMarcacoesChecarNfeIndisponivel-GET-nfe-version-v{version}/marcacoes/nfe-indisponivel/{nfe}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "nfe",
                        "in": "path",
                        "description": "Número da Nota Fiscal Eletrônica",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Flag indicando se NFE está indisponível.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/marcacoes/{id}/regioes": {
            "get": {
                "tags": [
                    "Marcacoes"
                ],
                "summary": "Obtém as regiões da marcação",
                "operationId": "domain_mark_Marcacoes-GetMarcacoesIdRegioes-GET-id-version-v{version}/marcacoes/{id}/regioes",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Marcação ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Regiões encontradas",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.Marcacao.Http.Dto.Model.Pedido.MarcacaoRegiaoGetDto"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Marcacoes"
                ],
                "summary": "Associar as regiões da marcação",
                "operationId": "domain_mark_Marcacoes-PostMarcacoesIdRegioes-POST-id-dto-version-v{version}/marcacoes/{id}/regioes",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Marcação ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "dto",
                        "in": "body",
                        "description": "Lista de Regiões",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Marcacao.Http.Dto.Model.Regiao.MarcacaoAssocRegiaoPostDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retorno Associar Marcação",
                        "schema": {
                            "$ref": "#/definitions/Integration.Domain.Marcacao.Command.Associar.Model.Regiao.MarcacaoAssociarRegiaoCommModel"
                        }
                    },
                    "404": {
                        "description": "Retorno Associar marcação não encontrada.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/marcacoes/{id}/pedidos": {
            "get": {
                "tags": [
                    "Marcacoes"
                ],
                "summary": "Obtém os pedidos da marcação",
                "operationId": "domain_mark_Marcacoes-GetMarcacoesIdPedidos-GET-id-version-v{version}/marcacoes/{id}/pedidos",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Marcação ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pedidos encontrados vinculados à marcação",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.Marcacao.Http.Dto.Model.Pedido.MarcacaoPedidoGetDto"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/marcacoes/{id}/items": {
            "get": {
                "tags": [
                    "Marcacoes"
                ],
                "summary": "Ontém os itens da marcação",
                "operationId": "domain_mark_Marcacoes-GetMarcacoesIdItems-GET-id-version-v{version}/marcacoes/{id}/items",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Marcação ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Itens encontrados vinculados à marcação",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.Marcacao.Http.Dto.Model.Item.MarcacaoItemGetDto"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/marcacoes/{id}/cancelar/motivo/{motivo}": {
            "post": {
                "tags": [
                    "Marcacoes"
                ],
                "summary": "Cancelar associação da marcação",
                "operationId": "domain_mark_Marcacoes-PostMarcacoesIdCancelarAssociacaoMotivo-POST-id-motivo-version-v{version}/marcacoes/{id}/cancelar/motivo/{motivo}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Marcação ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "motivo",
                        "in": "path",
                        "description": "Codigo Motivo",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cancelamento realizado com sucesso."
                    },
                    "404": {
                        "description": "Marcação não encontrada.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/marcacoes/{id}/cancelamentos-app": {
            "post": {
                "tags": [
                    "Marcacoes"
                ],
                "summary": "Cancelar associação da marcação",
                "operationId": "domain_mark_Marcacoes-PostMarcacoesIdCancelarAssociacaoMotivo-POST-id-motivo-version-v{version}/marcacoes/{id}/cancelamentos-app",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Marcação ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "motivo",
                        "in": "body",
                        "description": "Descrição do Motivo do Cancelamento",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Marcacoes.Dto.MarcacaoCancelamentoAppDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cancelamento realizado com sucesso."
                    },
                    "404": {
                        "description": "Marcação não encontrada.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/marcacoes/{id}/confirmacoes-app": {
            "post": {
                "tags": [
                    "Marcacoes"
                ],
                "summary": "Confirma uma marcação realizada pelo App Mov",
                "operationId": "domain_mark_Marcacoes-PostMarcacoesConfirmarMarcacao-POST-id-version-v{version}/marcacoes/{id}/confirmacoes-app",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Marcação ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Confirmação realizada com sucesso."
                    },
                    "400": {
                        "description": "Marcação não está aguardando confirmação ou não realizada pelo App Mov.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "404": {
                        "description": "Marcação não encontrada.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/marcacoes/{id}/checkins-app": {
            "post": {
                "tags": [
                    "Marcacoes"
                ],
                "summary": "Realiza o check-in de uma marcação realizada pelo App Mov",
                "operationId": "domain_mark_Marcacoes-PostMarcacoesCheckInMarcacao-POST-id-version-v{version}/marcacoes/{id}/checkins-app",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Marcação ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Confirmação realizada com sucesso."
                    },
                    "400": {
                        "description": "Marcação não está aguardando checkin ou não realizada pelo App Mov.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "404": {
                        "description": "Marcação não encontrada.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/marcacoes/ressincronizacao-status-sap": {
            "post": {
                "tags": [
                    "Marcacoes"
                ],
                "summary": "Ressincronizar os status das marcações do Hub com o SAP em um determinado período",
                "operationId": "domain_mark_Marcacoes-PostRessincronizacaoStatusSAP-POST-dto-version-v{version}/marcacoes/ressincronizacao-status-sap",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dto",
                        "in": "body",
                        "description": "Períodos para ressincronizar as portarias",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Marcacoes.Dto.RessincronizacaoStatusSAPRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Solicitação de ressincronização realizada com sucesso."
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/metas-transferencia/relatorio/detalhe/fila": {
            "get": {
                "tags": [
                    "MetasTransferencia"
                ],
                "summary": "Obtém os detalhes da fila de DRP",
                "operationId": "domain_mark_MetasTransferencia-RealatorioDetalheFila-GET-data-unidadeNegocioOrigemId-unidadeNegocioDestinoId-transportadoraId-produtoId-produtoCodigo-version-v{version}/metas-transferencia/relatorio/detalhe/fila",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "unidadeNegocioOrigemId",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "unidadeNegocioDestinoId",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "transportadoraId",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "produtoId",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "produtoCodigo",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retorna os detalhes da fila DRP.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.Marcacao.Http.Dto.Model.MarcacaoGetListDto"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/metas-transferencia/relatoriodrp": {
            "get": {
                "tags": [
                    "MetasTransferencia"
                ],
                "summary": "Obtém as metas",
                "operationId": "domain_mark_MetasTransferencia-GetRelatorioDRP-GET-dataReferencia-unidadeNegocioOrigemIds-unidadeNegocioDestinoIds-transportadoraId-produtoId-start-take-version-v{version}/metas-transferencia/relatoriodrp",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dataReferencia",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "unidadeNegocioOrigemIds",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "collectionFormat": "multi",
                        "uniqueItems": false
                    },
                    {
                        "name": "unidadeNegocioDestinoIds",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "collectionFormat": "multi",
                        "uniqueItems": false
                    },
                    {
                        "name": "transportadoraId",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "produtoId",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "take",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de metas.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Domain.MetaTransferencia.Model.ViewMetaTransferencia"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/metas-transferencia/relatoriodrp/count": {
            "get": {
                "tags": [
                    "MetasTransferencia"
                ],
                "summary": "Obtém as total de metas",
                "operationId": "domain_mark_MetasTransferencia-GetRelatorioDRPCount-GET-dataReferencia-unidadeNegocioOrigemIds-unidadeNegocioDestinoIds-transportadoraId-produtoId-version-v{version}/metas-transferencia/relatoriodrp/count",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dataReferencia",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "unidadeNegocioOrigemIds",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "collectionFormat": "multi",
                        "uniqueItems": false
                    },
                    {
                        "name": "unidadeNegocioDestinoIds",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "collectionFormat": "multi",
                        "uniqueItems": false
                    },
                    {
                        "name": "transportadoraId",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "produtoId",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retorna o total de metas.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceCountDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/metas-transferencia/relatoriodrp/historico": {
            "get": {
                "tags": [
                    "MetasTransferencia"
                ],
                "summary": "Obtém o histórico da meta",
                "operationId": "domain_mark_MetasTransferencia-HistoricoMetaPorAgrupamento-GET-dataReferencia-unidadeNegocioOrigemId-unidadeNegocioDestinoId-transportadoraId-produtoId-version-v{version}/metas-transferencia/relatoriodrp/historico",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dataReferencia",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "unidadeNegocioOrigemId",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "unidadeNegocioDestinoId",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "transportadoraId",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "produtoId",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retorna o histórico da meta.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Domain.MetaTransferencia.Model.ViewMetaTransferenciaHistorico"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/metas-transferencia/relatoriodrp/historico/por-metatransferenciaid/{metaTransferenciaId}": {
            "get": {
                "tags": [
                    "MetasTransferencia"
                ],
                "summary": "Obtém o histórico da meta",
                "operationId": "domain_mark_MetasTransferencia-HistoricoPorMetaTransferenciaId-GET-metaTransferenciaId-version-v{version}/metas-transferencia/relatoriodrp/historico/por-metatransferenciaid/{metaTransferenciaId}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "metaTransferenciaId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retorna o histórico da meta.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Domain.MetaTransferencia.Model.ViewMetaTransferenciaHistorico"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/metas-transferencia/relatoriodrp/planilha": {
            "get": {
                "tags": [
                    "MetasTransferencia"
                ],
                "summary": "Obtém o relatório para exportação",
                "operationId": "domain_mark_MetasTransferencia-GetPlanilhaRelatorio-GET-dataReferencia-unidadeNegocioOrigemIds-unidadeNegocioDestinoIds-transportadoraId-produtoId-version-v{version}/metas-transferencia/relatoriodrp/planilha",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dataReferencia",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "unidadeNegocioOrigemIds",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "collectionFormat": "multi",
                        "uniqueItems": false
                    },
                    {
                        "name": "unidadeNegocioDestinoIds",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "collectionFormat": "multi",
                        "uniqueItems": false
                    },
                    {
                        "name": "transportadoraId",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "produtoId",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retorna o blob para exportação.",
                        "schema": {
                            "$ref": "#/definitions/System.IO.Stream"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/motoristas/{motoristaId}/marcacoes/{unidadeNegocioId}/ultima-concluida": {
            "get": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "Obtém a última marcação concluída do motorista",
                "operationId": "domain_mark_Motoristas-GetMotoristasIdMarcacoesUltimaConcluida-GET-motoristaId-unidadeNegocioId-version-v{version}/motoristas/{motoristaId}/marcacoes/{unidadeNegocioId}/ultima-concluida",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "motoristaId",
                        "in": "path",
                        "description": "ID do motorista",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "unidadeNegocioId",
                        "in": "path",
                        "description": "ID da unidade de negócio",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Última marcação concluída do motorista",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Marcacao.Http.Dto.Model.MarcacaoTotemGetDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor. / Marcação não encontrada",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/motoristas/{motoristaId}/marcacoes/{unidadeNegocioId}/ultima-realizada": {
            "get": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "Obtém a última marcação realizada do motorista",
                "operationId": "domain_mark_Motoristas-GetMotoristasIdMarcacoesUltimaRealizada-GET-motoristaId-unidadeNegocioId-version-v{version}/motoristas/{motoristaId}/marcacoes/{unidadeNegocioId}/ultima-realizada",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "motoristaId",
                        "in": "path",
                        "description": "ID do motorista",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "unidadeNegocioId",
                        "in": "path",
                        "description": "ID da unidade de negócio",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Última marcação realizada do motorista",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Marcacao.Http.Dto.Model.MarcacaoTotemGetDto"
                        }
                    },
                    "404": {
                        "description": "Nenhuma marcação encontrada",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/motoristas/por-cpf/{cpfMotorista}/ultima-marcacao": {
            "get": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "Obtém a última marcação realizada do motorista",
                "operationId": "domain_mark_Motoristas-GetLastByMotoristaIdAsync-GET-cpfMotorista-version-v{version}/motoristas/por-cpf/{cpfMotorista}/ultima-marcacao",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpfMotorista",
                        "in": "path",
                        "description": "CPF do motorista",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Última marcação realizada do motorista",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.Marcacao.Http.Dto.Model.MarcacaoTotemGetDto"
                            }
                        }
                    },
                    "404": {
                        "description": "Nenhuma marcação encontrada",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/motoristas/{motoristaId}/marcacoes/{unidadeNegocioId}/ultima-concluida/oferta-carga": {
            "get": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "Obtém a última marcação concluída do motorista no oferta de carga",
                "operationId": "domain_mark_Motoristas-GetMotoristasIdMarcacoesUltimaConcluidaOfertaCarga-GET-motoristaId-unidadeNegocioId-version-v{version}/motoristas/{motoristaId}/marcacoes/{unidadeNegocioId}/ultima-concluida/oferta-carga",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "motoristaId",
                        "in": "path",
                        "description": "ID do motorista",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "unidadeNegocioId",
                        "in": "path",
                        "description": "ID do motorista",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Última marcação concluída do motorista",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Marcacao.Http.Dto.Model.MarcacaoTotemGetDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor. / Marcação não encontrada",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/pedidos/{id}": {
            "get": {
                "tags": [
                    "Pedidos"
                ],
                "summary": "Obtém um pedido pelo ID",
                "operationId": "domain_mark_Pedidos-GetPedidosById-GET-id-version-v{version}/pedidos/{id}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID do Pedido",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pedido encontrado.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Pedido.Http.Dto.PedidoGetDto"
                        }
                    },
                    "404": {
                        "description": "Pedido não encontrado.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/pesquisas/{pesquisaId}/motoristas/{motoristaId}/participadas": {
            "get": {
                "tags": [
                    "Pesquisas"
                ],
                "summary": "Checa se o motorista participou da pesquisa",
                "operationId": "domain_mark_Pesquisas-MarcacaoPesquisaParticipadaAsync-GET-pesquisaId-motoristaId-version-v{version}/pesquisas/{pesquisaId}/motoristas/{motoristaId}/participadas",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "pesquisaId",
                        "in": "path",
                        "description": "Pesquisa ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "motoristaId",
                        "in": "path",
                        "description": "Motorista ID",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booleano indicando se o motorista participou da pesquisa",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/tipos-carregamento": {
            "get": {
                "tags": [
                    "TiposCarregamento"
                ],
                "summary": "Obtém os tipos de carregamento",
                "operationId": "domain_mark_TiposCarregamento-GetTiposCarregamento-GET-version-v{version}/tipos-carregamento",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Lista com tipos de carregamento.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Domain.TipoCarregamento.Model.TipoCarregamento"
                            }
                        }
                    },
                    "404": {
                        "description": "Nenhum tipo de carregamento encontrado",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/trs-net/centrais-palete/{placa}": {
            "get": {
                "tags": [
                    "TrsNet"
                ],
                "summary": "Obtém a quantidade de paletes ok por central",
                "operationId": "domain_mark_TrsNet-GetCentraisPaletesPorPlaca-GET-placa-version-v{version}/trs-net/centrais-palete/{placa}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "placa",
                        "in": "path",
                        "description": "Placa",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paletes ok.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.TrsNet.Http.Dto.PaletesOkGetDto"
                        }
                    },
                    "400": {
                        "description": "Placa inválida.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.TrsNet.Http.Dto.PaletesOkGetDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/trs-net/centrais-palete/{placa}/ticket/{codigo}": {
            "get": {
                "tags": [
                    "TrsNet"
                ],
                "summary": "Obtém a quantidade de paletes ok por código de barras",
                "operationId": "domain_mark_TrsNet-GetCentraisPaletesPorPlacaPorTicketCodigo-GET-placa-codigo-version-v{version}/trs-net/centrais-palete/{placa}/ticket/{codigo}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "placa",
                        "in": "path",
                        "description": "Placa",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "codigo",
                        "in": "path",
                        "description": "Código de barras",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paletes ok.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.TrsNet.Http.Dto.PaletesOkGetDto"
                        }
                    },
                    "400": {
                        "description": "Placa inválida ou Código de barras inválido.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.TrsNet.Http.Dto.PaletesOkGetDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/unidades-negocio/{unidadeNegocioId}/destinos": {
            "get": {
                "tags": [
                    "UnidadesNegocio"
                ],
                "summary": "Obtém a lista de destinos através da unidade de negócio",
                "operationId": "domain_mark_UnidadesNegocio-GetDestinosByUnidadeNegocioId-GET-unidadeNegocioId-transportadoraId-carregamentoCategoria-data-version-v{version}/unidades-negocio/{unidadeNegocioId}/destinos",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "unidadeNegocioId",
                        "in": "path",
                        "description": "ID da unidade de negócio",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "transportadoraId",
                        "in": "query",
                        "description": "ID da transportadora",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "carregamentoCategoria",
                        "in": "query",
                        "description": "Ensacado ou Granel",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            0,
                            1
                        ]
                    },
                    {
                        "name": "data",
                        "in": "query",
                        "description": "Data",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista com destinos",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.Drp.Http.Dto.MotoristaParceiro.DestinoMotoristaParceiroGetDto"
                            }
                        }
                    },
                    "400": {
                        "description": "Domínio/modelo inválido",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/unidades-negocio/{unidadeNegocioIdOrigem}/destinos/{unidadeNegocioIdDestino}/com-carga": {
            "get": {
                "tags": [
                    "UnidadesNegocio"
                ],
                "summary": "Obtém a lista de destinos com carga através da unidade de negócio",
                "operationId": "domain_mark_UnidadesNegocio-GetByUnidadeDestinoIdAsync-GET-unidadeNegocioIdOrigem-unidadeNegocioIdDestino-version-v{version}/unidades-negocio/{unidadeNegocioIdOrigem}/destinos/{unidadeNegocioIdDestino}/com-carga",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "unidadeNegocioIdOrigem",
                        "in": "path",
                        "description": "ID da unidade de negócio origem",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "unidadeNegocioIdDestino",
                        "in": "path",
                        "description": "ID da unidade de negócio destino",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista com destinos",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Domain.MetaTransferencia.Model.MetaTransferencia"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/unidades-negocio/{unidadeNegocioId}/pedidos/numero/{numPedido}": {
            "get": {
                "tags": [
                    "UnidadesNegocio"
                ],
                "summary": "Obtém a lista de pedidos por número da unidade de negócio",
                "operationId": "domain_mark_UnidadesNegocio-GetPedidoByNumeroAndUnidadeNegocioIdAsync-GET-unidadeNegocioId-numPedido-version-v{version}/unidades-negocio/{unidadeNegocioId}/pedidos/numero/{numPedido}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "unidadeNegocioId",
                        "in": "path",
                        "description": "ID da unidade de negócio",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "numPedido",
                        "in": "path",
                        "description": "Número do pedido",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista com pedidos com saldo da unidade de negócio",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.Pedido.Http.Dto.PedidoMotoristaParceiroGetDto"
                            }
                        }
                    },
                    "400": {
                        "description": "Domínio/modelo de pedido inválido / Pedido sem saldo",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/anexos/{categoria}/json": {
            "post": {
                "tags": [
                    "Anexos"
                ],
                "summary": "Carrega um ou mais arquivos no storage, enviados via JSON, encodificados em Base 64",
                "operationId": "domain_registration_Anexos-PostAnexoJson-POST-categoria-arquivos-urlCompleta-version-v{version}/anexos/{categoria}/json",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "categoria",
                        "in": "path",
                        "description": "Categoria dos anexos, para organização no Blob Storage. Recomenda-se categorias mais abrangentes, como \"Motoristas\", \"Transportadoras\" e \"Veículos\"",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arquivos",
                        "in": "body",
                        "description": "Dados dos arquivos para armazenamento, encodificados em Base 64",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.v2.Anexos.Dto.AnexoPostJsonRequestDto"
                            }
                        }
                    },
                    {
                        "name": "urlCompleta",
                        "in": "query",
                        "description": "Indica se deve ser retornada a URL completa do arquivo armazenado. Se omitido ou \"false\", retorna a URL relativa.",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de dados do arquivo após armazenamento, contendo a URL pública para posterior obtenção.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.v2.Anexos.Dto.AnexoPostResponseDto"
                            }
                        }
                    },
                    "400": {
                        "description": "Erro de validação da requisição.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/anexos/upload-arquivo/{categoria}/json": {
            "post": {
                "tags": [
                    "Anexos"
                ],
                "summary": "Carrega um arquivo no storage, enviado via JSON, encodificado em Base 64",
                "operationId": "domain_registration_Anexos-PostAnexoUnicoJson-POST-categoria-arquivo-urlCompleta-converterGrayscale-version-v{version}/anexos/upload-arquivo/{categoria}/json",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "categoria",
                        "in": "path",
                        "description": "Categoria do anexo, para organização no Blob Storage. Recomenda-se categorias mais abrangentes, como \"Motoristas\", \"Transportadoras\" e \"Veículos\"",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "arquivo",
                        "in": "body",
                        "description": "Dados do arquivo para armazenamento, encodificado em Base 64",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Anexos.Dto.AnexoPostJsonRequestDto"
                        }
                    },
                    {
                        "name": "urlCompleta",
                        "in": "query",
                        "description": "Indica se deve ser retornada a URL completa do arquivo armazenado. Se omitido ou \"false\", retorna a URL relativa.",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "converterGrayscale",
                        "in": "query",
                        "description": "Indica se deve converter a cor da imagem em tom de cinza",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de dados do arquivo após armazenamento, contendo a URL pública para posterior obtenção.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Anexos.Dto.AnexoPostResponseDto"
                        }
                    },
                    "400": {
                        "description": "Erro de validação da requisição.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/anexos/{categoria}": {
            "post": {
                "tags": [
                    "Anexos"
                ],
                "summary": "Carrega um ou mais arquivos no storage, encodificados em multipart/form-data",
                "operationId": "domain_registration_Anexos-PostAnexo-POST-categoria-files-urlCompleta-version-v{version}/anexos/{categoria}",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "categoria",
                        "in": "path",
                        "description": "Categoria dos anexos, para organização no Blob Storage. Recomenda-se categorias mais abrangentes, como \"Motoristas\", \"Transportadoras\" e \"Veículos\"",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "files",
                        "in": "formData",
                        "description": "Campos, na encodificação multipart/form-data, contendo os dados dos arquivos. Múltiplos campos podem ser adicionados.",
                        "required": false,
                        "type": "array",
                        "items": {},
                        "collectionFormat": "multi",
                        "uniqueItems": false
                    },
                    {
                        "name": "urlCompleta",
                        "in": "query",
                        "description": "Indica se deve ser retornada a URL completa do arquivo armazenado. Se omitido ou \"false\", retorna a URL relativa.",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de dados do arquivo após armazenamento, contendo a URL pública para posterior obtenção.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.v2.Anexos.Dto.AnexoPostResponseDto"
                            }
                        }
                    },
                    "400": {
                        "description": "Erro de validação da requisição.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/anexos/{categoria}/{nomeArquivo}": {
            "get": {
                "tags": [
                    "Anexos"
                ],
                "summary": "Obtém um arquivo anexo armazenamento no storage",
                "operationId": "domain_registration_Anexos-GetAnexo-GET-categoria-nomeArquivo-version-v{version}/anexos/{categoria}/{nomeArquivo}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "categoria",
                        "in": "path",
                        "description": "Categoria do anexo, onde ele foi originalmente arquivado.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "nomeArquivo",
                        "in": "path",
                        "description": "Nome do arquivo a ser baixado.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retorna o arquivo localizado. O ContentType será equivalente à extensão do arquivo."
                    },
                    "404": {
                        "description": "Arquivo não encontrado no storage na categoria fornecida."
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/anexos/{categoria}/arquivos": {
            "post": {
                "tags": [
                    "Anexos"
                ],
                "summary": "Recebe um ou mais arquivos encodificados em multipart/form-data e salva no storage um pdf dos arquivos agrupados",
                "operationId": "domain_registration_Anexos-PostArquivos-POST-categoria-files-urlCompleta-version-v{version}/anexos/{categoria}/arquivos",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "categoria",
                        "in": "path",
                        "description": "Categoria dos anexos, para organização no Blob Storage. Recomenda-se categorias mais abrangentes, como \"Motoristas\", \"Transportadoras\" e \"Veículos\"",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "files",
                        "in": "formData",
                        "description": "Campos, na encodificação multipart/form-data, contendo os dados dos arquivos. Múltiplos campos podem ser adicionados.",
                        "required": false,
                        "type": "array",
                        "items": {},
                        "collectionFormat": "multi",
                        "uniqueItems": false
                    },
                    {
                        "name": "urlCompleta",
                        "in": "query",
                        "description": "Indica se deve ser retornada a URL completa do arquivo armazenado. Se omitido ou \"false\", retorna a URL relativa.",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de dados do arquivo após armazenamento, contendo a URL pública para posterior obtenção.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Anexos.Dto.AnexoPostResponseDto"
                        }
                    },
                    "400": {
                        "description": "Erro de validação da requisição.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/bancos": {
            "get": {
                "tags": [
                    "Banco"
                ],
                "summary": "Lista os bancos",
                "operationId": "domain_registration_Banco-GetBancosFilter-GET-$filter-$skip-$top-version-v{version}/bancos",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Opcional. Filtros OData para filtar a lista de Bancos",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Opcional. Quantidade de transportadoras da lista a serem puladas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Opcional. Quantidade de transportadoras da lista a serem retornadas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retorna a lista de Bancos.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Domain.Banco.Model.Banco"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "404": {
                        "description": "Bancos não encontrados.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/categorias-veiculo/{categoriaId}": {
            "get": {
                "tags": [
                    "CategoriasVeiculo"
                ],
                "summary": "Obtém a categoria de veículo por ID",
                "operationId": "domain_registration_CategoriasVeiculo-GetCategoriasVeiculoPorId-GET-categoriaId-version-v{version}/categorias-veiculo/{categoriaId}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "categoriaId",
                        "in": "path",
                        "description": "Id da categoria de veículo",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Categoria de veículo",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Veiculo.Http.Dto.Categoria.VeiculoCategoriaGetDto"
                        }
                    },
                    "404": {
                        "description": "Categoria de veículo não encontrado com o Id fornecido.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/clientes/{codigo}/cif-retira-permanente": {
            "get": {
                "tags": [
                    "Clientes"
                ],
                "summary": "Obtém os dados de um cliente recebidos do SAP, referentes ao CIF permanente",
                "operationId": "domain_registration_Clientes-GetClientesCifRetiraPermanente-GET-codigo-version-v{version}/clientes/{codigo}/cif-retira-permanente",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "codigo",
                        "in": "path",
                        "description": "Código do Cliente no SAP",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dados do Cliente Solicitado.",
                        "schema": {
                            "$ref": "#/definitions/Domain.CifRetiraPermanente.Model.CifRetiraPermanente"
                        }
                    },
                    "204": {
                        "description": "Se não encontrado dados referente ao Cliente Solicitado."
                    },
                    "400": {
                        "description": "Os parâmetros de requisição não foram informados ou seu formato difere.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/clientes/{codigo}/unidade-negocio/{unidadeId}/cif-retira": {
            "get": {
                "tags": [
                    "Clientes"
                ],
                "summary": "Obtém os dados de CIF Retira do cliente",
                "operationId": "domain_registration_Clientes-GetClientesUnidadeNegocioCifRetira-GET-codigo-unidadeId-version-v{version}/clientes/{codigo}/unidade-negocio/{unidadeId}/cif-retira",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "codigo",
                        "in": "path",
                        "description": "Código do Cliente no SAP",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "unidadeId",
                        "in": "path",
                        "description": "Código da unidade de negócio",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dados do Cliente Solicitado.",
                        "schema": {
                            "$ref": "#/definitions/Domain.CifRetira.Model.CifRetira"
                        }
                    },
                    "400": {
                        "description": "Os parâmetros de requisição não foram informados ou seu formato difere.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/codigos-acesso": {
            "post": {
                "tags": [
                    "CodigosAcesso"
                ],
                "summary": "Cria um novo código de acesso, o envia para o usuário, e valida seu Id",
                "operationId": "domain_registration_CodigosAcesso-PostCodigoAcesso-POST-requestDto-version-v{version}/codigos-acesso",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestDto",
                        "in": "body",
                        "description": "Dados para a criação do código de acesso",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.CodigosAcesso.Dto.CodigoAcessoPostRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ID do código de acesso criado",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.CodigosAcesso.Dto.CodigoAcessoPostResponseDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/codigos-acesso/validacao": {
            "post": {
                "tags": [
                    "CodigosAcesso"
                ],
                "summary": "Verifica se o código de acesso fornecido é válido",
                "operationId": "domain_registration_CodigosAcesso-GetValidacaoCodigoAcesso-POST-requestDto-version-v{version}/codigos-acesso/validacao",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestDto",
                        "in": "body",
                        "description": "Dados para a requisição de validação do código de acesso",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.CodigosAcesso.Dto.CodigoAcessoValidacaoPostRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dados sobre a validade do código de acesso, incluindo o motivo de não validade.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.CodigosAcesso.Dto.CodigoAcessoValidacaoPostResponseDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/enderecos/por-cep/{cep}": {
            "get": {
                "tags": [
                    "Enderecos"
                ],
                "summary": "Detalhes do cep",
                "operationId": "domain_registration_Enderecos-GetEnderecoPorCep-GET-cep-version-v{version}/enderecos/por-cep/{cep}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cep",
                        "in": "path",
                        "description": "Cep",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Enderecos.Dto.EnderecoDto"
                        }
                    },
                    "404": {
                        "description": "Endereço não encontrado.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "204": {
                        "description": "Os dados relacionado ao cep."
                    }
                }
            }
        },
        "/motoristas/atualizacao-treinamentos": {
            "post": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "Atualiza a data do treinamento do motorista",
                "operationId": "domain_registration_Motoristas-PostMotoristasAtualizacoesTreinamentos-POST-treinamento-version-v{version}/motoristas/atualizacao-treinamentos",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "treinamento",
                        "in": "body",
                        "description": "Objeto treinamento realizado",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.IntegracaoMotoristaTreinamento.Http.Dto.TreinamentoRealizadoDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Data do treinamento atualizada."
                    },
                    "400": {
                        "description": "Problema no modelo/domínio do objeto.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "404": {
                        "description": "Motorista ou unidade de negócio não encontrado.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "406": {
                        "description": "Hashkey inválida."
                    }
                }
            }
        },
        "/motoristas/{motoristaId}/treinamentos": {
            "get": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "Obtém os treinamentos de um motorista",
                "operationId": "domain_registration_Motoristas-GetMotoristasTreinamentos-GET-motoristaId-version-v{version}/motoristas/{motoristaId}/treinamentos",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "motoristaId",
                        "in": "path",
                        "description": "ID do motorista",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Treinamentos vinculados ao motorista.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.MotoristaTreinamento.Http.Dto.MotoristaTreinamentoGetDto"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/motoristas/{motoristaId}/bloqueios/$count": {
            "get": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "Obtém a quantidade de registros dos bloqueios de um motorista",
                "operationId": "domain_registration_Motoristas-GetMotoristasBloqueiosCount-GET-motoristaId-version-v{version}/motoristas/{motoristaId}/bloqueios/$count",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "motoristaId",
                        "in": "path",
                        "description": "ID do motorista",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Quantidade de bloqueios encontrados para o motorista.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceCountDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/motoristas/{motoristaId}/bloqueios": {
            "get": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "Lista bloqueios do motorista",
                "operationId": "domain_registration_Motoristas-GetMotoristasBloqueios-GET-motoristaId-$filter-$skip-$top-version-v{version}/motoristas/{motoristaId}/bloqueios",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "motoristaId",
                        "in": "path",
                        "description": "ID do motorista",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Opcional. Filtros OData para filtar a lista de bloqueios do motorista",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Opcional. Quantidade de Bloqueios da lista a serem puladas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Opcional. Quantidade de Bloqueios da lista a serem retornadas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de bloqueios do motorista.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "404": {
                        "description": "Motorista ou bloqueios não encontrados."
                    }
                }
            }
        },
        "/motoristas": {
            "get": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "Lista de motoristas",
                "operationId": "domain_registration_Motoristas-GetMotoristaFilter-GET-search-skip-top-version-v{version}/motoristas",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Opcional. Para filtar a lista de motoristas",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "Quantidade Registros lista a serem puladas na paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "top",
                        "in": "query",
                        "description": "Quantidade de Registros da lista a serem retornadas na paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista dos motoristas.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceCountDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/motoristas/por-cpf/{cpf}/pin": {
            "post": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "Insere o PIN do motorista",
                "operationId": "domain_registration_Motoristas-PostMotoristasPin-POST-cpf-pin-version-v{version}/motoristas/por-cpf/{cpf}/pin",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpf",
                        "in": "path",
                        "description": "CPF do motorista",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "pin",
                        "in": "body",
                        "description": "Objeto pin do motorista",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Motorista.Http.Dto.MotoristaPinDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "PIN inserido com sucesso."
                    },
                    "400": {
                        "description": "Problema no modelo/domínio do objeto.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "404": {
                        "description": "Motorista ou unidade de negócio não encontrado.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/motoristas/por-cpf/{cpf}/pin/validacoes": {
            "post": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "Valida se o PIN do motorista está correto",
                "operationId": "domain_registration_Motoristas-PostMotoristasPinValidacoes-POST-cpf-pin-version-v{version}/motoristas/por-cpf/{cpf}/pin/validacoes",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpf",
                        "in": "path",
                        "description": "CPF do motorista",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "pin",
                        "in": "body",
                        "description": "Objeto pin do motorista",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Motorista.Http.Dto.MotoristaPinDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "O PIN é válido."
                    },
                    "404": {
                        "description": "Motorista não encontrado / PIN do motorista inválido ou não cadastrado / Unidade de negócio não encontrada.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/motoristas/atualizacoes-historico-ocorrencias": {
            "post": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "Recebe do SAP as atualizações de históricos de ocorrências do Motorista",
                "operationId": "domain_registration_Motoristas-AtualizacoesHistoricoOcorrencias-POST-ocorrenciasJson-version-v{version}/motoristas/atualizacoes-historico-ocorrencias",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "ocorrenciasJson",
                        "in": "query",
                        "description": "json com as ocorrências enviado pelo SAP",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "404": {
                        "description": "Motorista não encontrado.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "204": {
                        "description": "O histórico foi atualizado."
                    }
                }
            }
        },
        "/motoristas/por-cpf/{cpf}/ocorrencias": {
            "get": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "Consulta as ocorrencias de um motorista por seu CPF",
                "operationId": "domain_registration_Motoristas-GetPorCpfOcorrencias-GET-cpf-version-v{version}/motoristas/por-cpf/{cpf}/ocorrencias",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpf",
                        "in": "path",
                        "description": "CPF do motorista",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de ocorrencias do motorista.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.v2.Motoristas.Dto.OcorrenciasDto"
                            }
                        }
                    },
                    "404": {
                        "description": "Ocorrencia não encontrada.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/motoristas/por-cpf/{cpf}": {
            "get": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "Consulta motorista por CPF",
                "operationId": "domain_registration_Motoristas-GetPorCpf-GET-cpf-version-v{version}/motoristas/por-cpf/{cpf}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpf",
                        "in": "path",
                        "description": "CPF do motorista",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações do motorista."
                    },
                    "404": {
                        "description": "Motorista não encontrado.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/motoristas/por-cpf/{cpf}/composicao-veiculo": {
            "get": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "Lista de composicoes de veiculos do motorista (ou todas ordenadas preferencialmente pelas favoritas)",
                "operationId": "domain_registration_Motoristas-GetPorCpfComposicaoVeiculo-GET-cpf-$skip-$top-somenteFavoritas-version-v{version}/motoristas/por-cpf/{cpf}/composicao-veiculo",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpf",
                        "in": "path",
                        "description": "CPF do motorista",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Opcional. Quantidade de composicoes de veiculo da lista a serem puladas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Opcional. Quantidade de composicoes de veiculo da lista a serem retornadas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "somenteFavoritas",
                        "in": "query",
                        "description": "Opcional (Padrão: true). Flag indicando se deseja retornar somente as favoritas. Se não, trará todas as composicoes de veiculo, ordenada pelas favoritas",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de composicao de veiculo do motorista.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Domain.ComposicaoVeiculoMotorista.Model.ComposicaoVeiculoMotorista"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "404": {
                        "description": "Composicao não encontrados."
                    }
                }
            }
        },
        "/motoristas/por-cpf/{cpf}/composicao-veiculo/por-placa/{placa}": {
            "get": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "Obtém os dados de uma composicao que esta vinculada com veículo o motorista",
                "operationId": "domain_registration_Motoristas-GetPorCpfComposicaoVeiculoPorPlaca-GET-cpf-placa-version-v{version}/motoristas/por-cpf/{cpf}/composicao-veiculo/por-placa/{placa}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpf",
                        "in": "path",
                        "description": "CPF do motorista",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "placa",
                        "in": "path",
                        "description": "Placa do veículo",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações retornadas com sucesso.",
                        "schema": {
                            "$ref": "#/definitions/Domain.ComposicaoVeiculoMotorista.Model.ComposicaoVeiculoMotorista"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "404": {
                        "description": "Transportadora não encontrada."
                    }
                }
            }
        },
        "/motoristas/composicao-veiculo/favorita": {
            "post": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "Lista de composicoes de veiculos do motorista (ou todas ordenadas preferencialmente pelas favoritas)",
                "operationId": "domain_registration_Motoristas-PostPorCpfComposicaoVeiculoFavorita-POST-dto-version-v{version}/motoristas/composicao-veiculo/favorita",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Motoristas.Dto.ComposicaoVeiculoMotoristaFavorita"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "200": {
                        "description": "Lista de composicao de veiculo do motorista."
                    },
                    "404": {
                        "description": "Composicao não encontrados."
                    }
                }
            }
        },
        "/motoristas/vinculo/composicao-veiculo": {
            "post": {
                "tags": [
                    "Motoristas"
                ],
                "operationId": "domain_registration_Motoristas-PostVinculoTransportadoraVeiculo-POST-dto-version-v{version}/motoristas/vinculo/composicao-veiculo",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Motoristas.Dto.VinculoMotoristaVeiculoPostDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/motoristas/desvinculo/composicao-veiculo": {
            "post": {
                "tags": [
                    "Motoristas"
                ],
                "operationId": "domain_registration_Motoristas-PostDesvinculoTransportadoraVeiculo-POST-dto-version-v{version}/motoristas/desvinculo/composicao-veiculo",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Motoristas.Dto.VinculoMotoristaVeiculoPostDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/motoristas/por-cpf/{cpf}/veiculos/favorito": {
            "get": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "Obtém os veiculos favoritos de um motorista",
                "operationId": "domain_registration_Motoristas-GetPorCpfVeiculoFavorito-GET-cpf-version-v{version}/motoristas/por-cpf/{cpf}/veiculos/favorito",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpf",
                        "in": "path",
                        "description": "CPF do motorista",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Veiculos vinculados ao motorista como favorito.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.MotoristaTreinamento.Http.Dto.MotoristaTreinamentoGetDto"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "Vincula veiculo como favorito para um motorista",
                "operationId": "domain_registration_Motoristas-PostPorCpfVeiculoFavorito-POST-cpf-dto-version-v{version}/motoristas/por-cpf/{cpf}/veiculos/favorito",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpf",
                        "in": "path",
                        "description": "CPF do motorista",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Motoristas.Dto.MotoristaVeiculoFavoritoPostDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.MotoristaTreinamento.Http.Dto.MotoristaTreinamentoGetDto"
                            }
                        }
                    },
                    "404": {
                        "description": "Informações nao encontradas",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "204": {
                        "description": "Veiculo favoritado"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "Remove o vinculo veiculo favorito ao motorista",
                "operationId": "domain_registration_Motoristas-DeleteVeiculoFavorito-DELETE-cpf-placa-version-cpf-v{version}/motoristas/por-cpf/{cpf}/veiculos/favorito",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpf",
                        "in": "query",
                        "description": "CPF do motorista",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "placa",
                        "in": "query",
                        "description": "Placa do veiculo",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "cpf",
                        "in": "path",
                        "description": "CPF do motorista",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.MotoristaTreinamento.Http.Dto.MotoristaTreinamentoGetDto"
                            }
                        }
                    },
                    "404": {
                        "description": "Informações nao encontradas",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "204": {
                        "description": "Veiculo favoritado"
                    }
                }
            }
        },
        "/motoristas/por-cpf/{cpf}/situacao-cadastral": {
            "get": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "Consulta a situação cadastral do motorista por seu CPF",
                "operationId": "domain_registration_Motoristas-GetPorCpfSituacaoCadastral-GET-cpf-version-v{version}/motoristas/por-cpf/{cpf}/situacao-cadastral",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpf",
                        "in": "path",
                        "description": "CPF do motorista",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de ocorrencias do motorista.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Motoristas.Dto.SituacaoCadastralGeralDto"
                        }
                    },
                    "404": {
                        "description": "Motorista não encontrado.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/motoristas/por-cpf/{cpf}/situacao-cadastral/detalhada": {
            "get": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "Consulta a situação cadastral do motorista por seu CPF",
                "operationId": "domain_registration_Motoristas-GetPorCpfSituacaoCadastralDetalhada-GET-cpf-version-v{version}/motoristas/por-cpf/{cpf}/situacao-cadastral/detalhada",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpf",
                        "in": "path",
                        "description": "CPF do motorista",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de ocorrencias do motorista detalhada.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Domain.Motorista.Model.SituacaoCadastral.SituacaoCadastralDto"
                            }
                        }
                    },
                    "404": {
                        "description": "Motorista não encontrado.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/motoristas/por-cpf/{cpf}/transportadoras": {
            "get": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "Lista as transportadoras do motorista",
                "operationId": "domain_registration_Motoristas-GetPorCpfTransportadoras-GET-cpf-$filter-$skip-$top-version-v{version}/motoristas/por-cpf/{cpf}/transportadoras",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpf",
                        "in": "path",
                        "description": "CPF do motorista",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Opcional. Filtros OData para filtar a lista de transportadoras do motorista",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Opcional. Quantidade de transportadoras da lista a serem puladas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Opcional. Quantidade de transportadoras da lista a serem retornadas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de transportadoras do motorista.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.MotoristaTransportadora.Http.Dto.TotemMotoristaTransportadoraGetDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "404": {
                        "description": "Motorista ou transportadoras não encontrados."
                    }
                }
            }
        },
        "/motoristas/por-cpf/{cpf}/transportadoras/favoritas": {
            "get": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "Lista as transportadoras favoritas do motorista (ou todas ordenadas preferencialmente pelas favoritas)",
                "operationId": "domain_registration_Motoristas-GetPorCpfTransportadorasFavoritas-GET-cpf-$skip-$top-somenteFavoritas-version-v{version}/motoristas/por-cpf/{cpf}/transportadoras/favoritas",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpf",
                        "in": "path",
                        "description": "CPF do motorista",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Opcional. Quantidade de transportadoras da lista a serem puladas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Opcional. Quantidade de transportadoras da lista a serem retornadas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "somenteFavoritas",
                        "in": "query",
                        "description": "Opcional (Padrão: true). Flag indicando se deseja retornar somente as favoritas. Se não, trará todas as transportadoras, ordenada pelas favoritas",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de transportadoras do motorista.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Domain.Transportadora.Model.Transportadora"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "404": {
                        "description": "Motorista ou transportadoras não encontrados."
                    }
                }
            }
        },
        "/motoristas/por-cpf/{cpf}/transportadoras/{transportadoraCpfCnpj}/favorito": {
            "post": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "Vincula transportadora como favorita para um motorista",
                "operationId": "domain_registration_Motoristas-PostPorCpfTransportadoraFavorito-POST-cpf-transportadoraCpfCnpj-version-v{version}/motoristas/por-cpf/{cpf}/transportadoras/{transportadoraCpfCnpj}/favorito",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpf",
                        "in": "path",
                        "description": "CPF do motorista",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "transportadoraCpfCnpj",
                        "in": "path",
                        "description": "CPF/CNPJ da transportadora",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Transportadora incluída na lista de favoritas"
                    },
                    "404": {
                        "description": "Motorista ou Transportadora não encontradas",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "Remove o vinculo transportadora favorita do motorista",
                "operationId": "domain_registration_Motoristas-DeleteVinculoTransportadoraFavorita-DELETE-cpf-transportadoraCpfCnpj-version-v{version}/motoristas/por-cpf/{cpf}/transportadoras/{transportadoraCpfCnpj}/favorito",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpf",
                        "in": "path",
                        "description": "CPF do motorista",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "transportadoraCpfCnpj",
                        "in": "path",
                        "description": "Cpf/cnpj da transportadora",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Transportadora removida da lista de favoritas"
                    },
                    "404": {
                        "description": "Motorista ou Transportadora não encontradas",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/motoristas/{motoristaId}": {
            "get": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "Obtém o motorista pelo ID",
                "operationId": "domain_registration_Motoristas-GetMotoristaPorId-GET-motoristaId-version-v{version}/motoristas/{motoristaId}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "motoristaId",
                        "in": "path",
                        "description": "Id do motorista",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Obtém o motorista",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Motorista.Http.Dto.MotoristaGetDto"
                        }
                    },
                    "404": {
                        "description": "Motorista não encontrado.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/motoristas/{motoristaId}/regioes": {
            "get": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "Obtém a lista de regiões do motorista",
                "operationId": "domain_registration_Motoristas-GetMotoristasRegioes-GET-motoristaId-version-v{version}/motoristas/{motoristaId}/regioes",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "motoristaId",
                        "in": "path",
                        "description": "Id do motorista",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Obtém a lista de regiões do motorista",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.RegiaoMotorista.Http.Dto.RegiaoMotoristaTotemGetDto"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/motoristas/por-cpf/{cpf}/unidades-negocio/{unidadeId}/regioes/com-carga": {
            "get": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "Obtém a lista de regiões com carga do motorista através do CPF",
                "operationId": "domain_registration_Motoristas-GetMotoristasPorCpfUnidadesNegocioRegioesComCarga-GET-cpf-unidadeId-version-v{version}/motoristas/por-cpf/{cpf}/unidades-negocio/{unidadeId}/regioes/com-carga",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpf",
                        "in": "path",
                        "description": "CPF do motorista",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "unidadeId",
                        "in": "path",
                        "description": "Id da unidade de negócio",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Obtém a lista de regiões com carga do motorista",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.Regiao.Http.Dto.RegiaoCodigoEDescricaoGetDto"
                            }
                        }
                    },
                    "404": {
                        "description": "Regiões não encontradas ou Motorista não encontrado.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/motoristas/por-cpf/{cpf}/bloqueios-marcacao-app": {
            "get": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "Obtém se o motorista possui bloqueios temporários para realização de marcações através do App Mov",
                "operationId": "domain_registration_Motoristas-GetBloqueiosMarcacaoAppMotorista-GET-cpf-version-v{version}/motoristas/por-cpf/{cpf}/bloqueios-marcacao-app",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpf",
                        "in": "path",
                        "description": "CPF do motorista",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações de bloqueios temporários.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Motoristas.Dto.BloqueiosMarcacaoAppMotoristaDto"
                        }
                    },
                    "404": {
                        "description": "Motorista não encontrado.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/motoristas/valida-motorista/{cpf}/por-unidade-negocio/{unidadeNegocioId}": {
            "get": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "Valida motorista",
                "operationId": "domain_registration_Motoristas-ValidaMotorista-GET-cpf-unidadeNegocioId-version-v{version}/motoristas/valida-motorista/{cpf}/por-unidade-negocio/{unidadeNegocioId}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpf",
                        "in": "path",
                        "description": "CPF do motorista",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "unidadeNegocioId",
                        "in": "path",
                        "description": "ID da unidade de negócio",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Motorista sem impedimentos."
                    },
                    "404": {
                        "description": "Motorista não encontrado.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Motorista com alguma pendência",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/motoristas/valida-treinamentos-motorista/unidade-negocio/{unidadeId}/cpf/{cpf}": {
            "get": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "Valida os treinamentos do motorista",
                "operationId": "domain_registration_Motoristas-ValidaTreinamentosMotorista-GET-cpf-unidadeId-version-v{version}/motoristas/valida-treinamentos-motorista/unidade-negocio/{unidadeId}/cpf/{cpf}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpf",
                        "in": "path",
                        "description": "CPF do motorista",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "unidadeId",
                        "in": "path",
                        "description": "Unidade de negócio",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Motorista sem pendências de treinamento"
                    },
                    "404": {
                        "description": "Motorista não encontrado.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Motorista com alguma pendência de treinamento",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/motoristas/treinamentos-obrigatorios": {
            "get": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "Obtém se o motorista possui bloqueios temporários para realização de marcações através do App Mov",
                "operationId": "domain_registration_Motoristas-GetTreinamentosObrigatoristos-GET-version-v{version}/motoristas/treinamentos-obrigatorios",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Informações de bloqueios temporários.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Motorista não encontrado.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/motoristas/unidade-negocio/favorita": {
            "post": {
                "tags": [
                    "Motoristas"
                ],
                "summary": "set unidade de negócio como favorita do motorista",
                "operationId": "domain_registration_Motoristas-PostPorCpfUnidadeNegocioFavorita-POST-dto-version-v{version}/motoristas/unidade-negocio/favorita",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Motoristas.Dto.UnidadeNegocioMotoristaFavoritaDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "200": {
                        "description": "Lista de composicao de veiculo do motorista."
                    },
                    "404": {
                        "description": "Composicao não encontrados."
                    }
                }
            }
        },
        "/movc-contrato-repom": {
            "get": {
                "tags": [
                    "MovCContratoRepom"
                ],
                "summary": "Obtém a listagem de contratos REPOM",
                "operationId": "domain_registration_MovCContratoRepom-FindContratosRepomAsync-GET-$filter-$skip-$top-$orderby-$include-version-v{version}/movc-contrato-repom",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "String que define os filtros que devem ser aplicados no conjunto de dados",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Inteiro que define o número da página que deve buscar no conjunto de dados",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Inteiro que define a quantidade de itens que deve buscar no conjunto de dados",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Dicionário de strings que define a ordenação que deve ser aplicado no conjunto de dados",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$include",
                        "in": "query",
                        "description": "Lista de strings que define as inclusões de relacionamentos (tabelas) ao conjunto de dados. Relacionamentos possíveis: \"NotasFiscais\" e \"NotasFiscais.Canhotos\"",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "uniqueItems": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de Contratos REPOM",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Domain.MovCContratoRepom.Model.MovCContratoRepom"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/movc-contrato-repom/{numeroContratoRepom}": {
            "get": {
                "tags": [
                    "MovCContratoRepom"
                ],
                "summary": "Obtém o contrato REPOM pelo número",
                "operationId": "domain_registration_MovCContratoRepom-GetContratoRepomByNumero-GET-numeroContratoRepom-version-v{version}/movc-contrato-repom/{numeroContratoRepom}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "numeroContratoRepom",
                        "in": "path",
                        "description": "Número do contrato da repom",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contrato REPOM",
                        "schema": {
                            "$ref": "#/definitions/Domain.MovCContratoRepom.Model.MovCContratoRepom"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/movc-contrato-repom/{numeroContratoRepom}/validacao-canhoto-nf": {
            "post": {
                "tags": [
                    "MovCContratoRepom"
                ],
                "operationId": "domain_registration_MovCContratoRepom-PostValidacaoCanhotoNf-POST-numeroContratoRepom-dto-version-v{version}/movc-contrato-repom/{numeroContratoRepom}/validacao-canhoto-nf",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "numeroContratoRepom",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.MovCContratoRepom.Dto.ValidacaoCanhotoNfPostDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/movc-contrato-repom/canhoto/auditoria/aleatorio": {
            "get": {
                "tags": [
                    "MovCContratoRepom"
                ],
                "operationId": "domain_registration_MovCContratoRepom-GetCanhotoAuditoriaAleatorioAsync-GET-version-v{version}/movc-contrato-repom/canhoto/auditoria/aleatorio",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.MovCContratoRepom.Dto.GetCanhotoAuditoriaAleatorioResultModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/movc-contrato-repom/canhoto/{canhotoId}/auditoria/status": {
            "put": {
                "tags": [
                    "MovCContratoRepom"
                ],
                "summary": "Operação de auditoria de canhotos",
                "operationId": "domain_registration_MovCContratoRepom-PutCanhotoAuditoriaStatusAsync-PUT-canhotoId-dto-version-v{version}/movc-contrato-repom/canhoto/{canhotoId}/auditoria/status",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "canhotoId",
                        "in": "path",
                        "description": "ID do canhoto",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "dto",
                        "in": "body",
                        "description": "DTO que apresenta a operação de auditoria, isto é, se a fotografia de auditoria efetivamente é um canhoto e se os quadrantes data hora e assinatura estão preenchidos",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.MovCContratoRepom.Dto.CanhotoValidacaoStatusPutDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/movc-contrato-repom/{id}/status-pagamento/{pagamentoAprovado}": {
            "put": {
                "tags": [
                    "MovCContratoRepom"
                ],
                "summary": "Atualiza o status de pagamento do contrato conforme o que foi enviado pela Repom",
                "operationId": "domain_registration_MovCContratoRepom-PutStatusPagamentoAsync-PUT-id-pagamentoAprovado-version-v{version}/movc-contrato-repom/{id}/status-pagamento/{pagamentoAprovado}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id do contrato REPOM",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "pagamentoAprovado",
                        "in": "path",
                        "description": "Status da solicitação do pagamento. 1 para aprovado e 0 para reprovado",
                        "required": true,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Alteracao realizada com sucesso"
                    },
                    "404": {
                        "description": "Contrato REPOM não encontrado",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/nota-fiscal/{id}": {
            "get": {
                "tags": [
                    "MovCNotaFiscal"
                ],
                "summary": "Obtém a nota fiscal detalhada junto ao seu contrato REPOM",
                "operationId": "domain_registration_MovCNotaFiscal-GetNotaFiscalByIdAsync-GET-id-version-v{version}/nota-fiscal/{id}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id da nota fiscal",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Nota Fiscal",
                        "schema": {
                            "$ref": "#/definitions/Domain.MovCContratoRepom.Model.NotaFiscal.MovCNotaFiscal"
                        }
                    },
                    "404": {
                        "description": "Nota Fiscal não encontrada",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/nota-fiscal/find": {
            "post": {
                "tags": [
                    "MovCNotaFiscal"
                ],
                "summary": "Obtém a listagem de notas fiscais",
                "operationId": "domain_registration_MovCNotaFiscal-FindNotasFiscaisAsync-POST-filter-$skip-$top-$include-version-v{version}/nota-fiscal/find",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "filter",
                        "in": "body",
                        "description": "String que define os filtros que devem ser aplicados no conjunto de dados",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.MovCNotaFiscal.Dto.FindNotasFiscaisDto"
                        }
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Inteiro que define o número da página que deve buscar no conjunto de dados",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Inteiro que define a quantidade de itens que deve buscar no conjunto de dados",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$include",
                        "in": "query",
                        "description": "Lista de strings que define as inclusões de relacionamentos (tabelas) ao conjunto de dados. Relacionamento possível: \"ContratoRepom\"",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "uniqueItems": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de Notas Fiscais",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Domain.MovCContratoRepom.Model.NotaFiscal.MovCNotaFiscal"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/nota-fiscal/count": {
            "post": {
                "tags": [
                    "MovCNotaFiscal"
                ],
                "operationId": "domain_registration_MovCNotaFiscal-GetCountNotasFiscaisAsync-POST-filter-version-v{version}/nota-fiscal/count",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "filter",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.MovCNotaFiscal.Dto.FindNotasFiscaisDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Domain.MovCContratoRepom.Model.NotaFiscal.MovCNotaFiscal"
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/nota-fiscal/{id}/status-entrega/{statusEntrega}": {
            "put": {
                "tags": [
                    "MovCNotaFiscal"
                ],
                "summary": "Atualiza o status da nota fiscal",
                "operationId": "domain_registration_MovCNotaFiscal-UpdateStatusByNotaFiscalIdAsync-PUT-id-statusEntrega-version-v{version}/nota-fiscal/{id}/status-entrega/{statusEntrega}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id da nota fiscal",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "statusEntrega",
                        "in": "path",
                        "description": "Código do status de entrega",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sucesso"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/parametros/{partitionKey}/{rowKey}": {
            "get": {
                "tags": [
                    "Parametros"
                ],
                "summary": "Parâmetro por PartitionKey e RowKey",
                "operationId": "domain_registration_Parametros-GetParameter-GET-partitionKey-rowKey-version-v{version}/parametros/{partitionKey}/{rowKey}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "partitionKey",
                        "in": "path",
                        "description": "Nome da Partition Key",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "rowKey",
                        "in": "path",
                        "description": "Nome da Row Key",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parâmetro da Partition Key"
                    },
                    "404": {
                        "description": "Parâmetro não encontrado."
                    },
                    "500": {
                        "description": "Erro interno do servidor."
                    }
                }
            },
            "put": {
                "tags": [
                    "Parametros"
                ],
                "summary": "Atualiza parâmetro",
                "operationId": "domain_registration_Parametros-UpdateParameter-PUT-partitionKey-rowKey-parameter-version-v{version}/parametros/{partitionKey}/{rowKey}",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "partitionKey",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "rowKey",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "parameter",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/VC.GestaoPatio.Common.Storage.Schemas.Tables.Parametro"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No content result"
                    },
                    "400": {
                        "description": "Problema na requisição"
                    },
                    "404": {
                        "description": "Parâmetro não encontrado."
                    },
                    "500": {
                        "description": "Erro interno do servidor."
                    }
                }
            },
            "post": {
                "tags": [
                    "Parametros"
                ],
                "summary": "Cria parâmetro",
                "operationId": "domain_registration_Parametros-AddParameter-POST-partitionKey-rowKey-parameter-version-v{version}/parametros/{partitionKey}/{rowKey}",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "partitionKey",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "rowKey",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "parameter",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/VC.GestaoPatio.Common.Storage.Schemas.Tables.Parametro"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No content result"
                    },
                    "400": {
                        "description": "Problema na requisição."
                    },
                    "500": {
                        "description": "Erro interno do servidor."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Parametros"
                ],
                "summary": "Deleta parâmetro",
                "operationId": "domain_registration_Parametros-DeleteParameter-DELETE-partitionKey-rowKey-version-v{version}/parametros/{partitionKey}/{rowKey}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "partitionKey",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "rowKey",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No content result"
                    },
                    "404": {
                        "description": "Parâmetro não encontrado."
                    },
                    "500": {
                        "description": "Erro interno do servidor."
                    }
                }
            }
        },
        "/parametros": {
            "get": {
                "tags": [
                    "Parametros"
                ],
                "summary": "Lista de Parâmetros",
                "operationId": "domain_registration_Parametros-GetAllParameters-GET-$partitionKey-version-v{version}/parametros",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "$partitionKey",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de parâmetros"
                    },
                    "404": {
                        "description": "Lista de parâmetros não encontrado."
                    },
                    "500": {
                        "description": "Erro interno do servidor."
                    }
                }
            },
            "put": {
                "tags": [
                    "Parametros"
                ],
                "summary": "Atualiza lista de parâmetros",
                "operationId": "domain_registration_Parametros-UpdateListParameters-PUT-parameters-version-v{version}/parametros",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "parameters",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/VC.GestaoPatio.Common.Storage.Schemas.Tables.Parametro"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No content result"
                    },
                    "400": {
                        "description": "Problema na requisição."
                    },
                    "404": {
                        "description": "Partition Keys não encontrado."
                    },
                    "500": {
                        "description": "Erro interno do servidor."
                    }
                }
            },
            "post": {
                "tags": [
                    "Parametros"
                ],
                "summary": "Cria lista de parâmetros",
                "operationId": "domain_registration_Parametros-AddListParametros-POST-parameters-version-v{version}/parametros",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "parameters",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/VC.GestaoPatio.Common.Storage.Schemas.Tables.Parametro"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No content result"
                    },
                    "400": {
                        "description": "Problema na requisição."
                    },
                    "500": {
                        "description": "Erro interno do servidor."
                    }
                }
            }
        },
        "/parametros/partitionKeys": {
            "get": {
                "tags": [
                    "Parametros"
                ],
                "summary": "Lista de Partition Keys",
                "operationId": "domain_registration_Parametros-GetListPartitionKeys-GET-version-v{version}/parametros/partitionKeys",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Lista de Partition Keys"
                    },
                    "404": {
                        "description": "Lista de Partition Keys não encontrado."
                    },
                    "500": {
                        "description": "Erro interno do servidor."
                    }
                }
            }
        },
        "/pesquisas/{pesquisaId}/perguntas": {
            "get": {
                "tags": [
                    "Pesquisas"
                ],
                "summary": "Obtém as perguntas por ID da pesquisa",
                "operationId": "domain_registration_Pesquisas-GetPesquisasPerguntas-GET-pesquisaId-version-v{version}/pesquisas/{pesquisaId}/perguntas",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "pesquisaId",
                        "in": "path",
                        "description": "Id da pesquisa",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de perguntas da pesquisa",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.Pergunta.Http.Dto.PerguntaGetDto"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/pesquisas/{pesquisaId}": {
            "get": {
                "tags": [
                    "Pesquisas"
                ],
                "summary": "Obtém pesquisa por ID",
                "operationId": "domain_registration_Pesquisas-GetPesquisaPorId-GET-pesquisaId-version-v{version}/pesquisas/{pesquisaId}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "pesquisaId",
                        "in": "path",
                        "description": "Id da pesquisa",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pesquisa",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Pesquisa.Http.Dto.PesquisaGetDto"
                        }
                    },
                    "404": {
                        "description": "Pesquisa não encontrada com o Id de pesquisa fornecido.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/pesquisas/perguntas/{perguntaId}/respostas": {
            "get": {
                "tags": [
                    "Pesquisas"
                ],
                "summary": "Obtém as respostas por ID da pergunta",
                "operationId": "domain_registration_Pesquisas-GetPesquisasPerguntasRespostas-GET-perguntaId-version-v{version}/pesquisas/perguntas/{perguntaId}/respostas",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "perguntaId",
                        "in": "path",
                        "description": "Id da pergunta",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pesquisa",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.Resposta.Http.Dto.RespostaGetDto"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/pesquisas/perguntas/{perguntaId}/respostas/count": {
            "get": {
                "tags": [
                    "Pesquisas"
                ],
                "summary": "Obtém a quantidade de respostas por ID da pergunta",
                "operationId": "domain_registration_Pesquisas-GetPesquisasPerguntasRespostasCount-GET-perguntaId-version-v{version}/pesquisas/perguntas/{perguntaId}/respostas/count",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "perguntaId",
                        "in": "path",
                        "description": "Id da pergunta",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Total de respostas",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceCountDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/regioes/{regiaoId}/totem": {
            "get": {
                "tags": [
                    "Regioes"
                ],
                "summary": "Obtém a região por ID",
                "operationId": "domain_registration_Regioes-GetRegioesTotem-GET-regiaoId-version-v{version}/regioes/{regiaoId}/totem",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "regiaoId",
                        "in": "path",
                        "description": "Id da região",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Região",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.Regiao.Http.Dto.RegiaoTotemGetDto"
                            }
                        }
                    },
                    "404": {
                        "description": "Não foi encontrada região com o Id fornecido.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/tickets/motorista": {
            "post": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Cria um ticket de motorista",
                "operationId": "domain_registration_Tickets-PostTicketMotorista-POST-ticketDto-version-v{version}/tickets/motorista",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "ticketDto",
                        "in": "body",
                        "description": "Ticket a ser criado",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.Motorista.TicketMotoristaPostDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "O histórico foi atualizado."
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor..",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "404": {
                        "description": "Ticket não encontrado."
                    }
                }
            }
        },
        "/tickets/transportadora": {
            "post": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Cria um ticket de transportadora",
                "operationId": "domain_registration_Tickets-PostTicketTransportadora-POST-ticketDto-version-v{version}/tickets/transportadora",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "ticketDto",
                        "in": "body",
                        "description": "Ticket a ser criado",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.Transportadora.TicketTransportadoraPostDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "O histórico foi atualizado."
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "404": {
                        "description": "Ticket não encontrado."
                    }
                }
            }
        },
        "/tickets/veiculo": {
            "post": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Cria um ticket de veículo",
                "operationId": "domain_registration_Tickets-PostTicketVeiculo-POST-ticketDto-version-v{version}/tickets/veiculo",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "ticketDto",
                        "in": "body",
                        "description": "Ticket a ser criado",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.Veiculo.TicketVeiculoPostDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "O histórico foi atualizado."
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "404": {
                        "description": "Ticket não encontrado."
                    }
                }
            }
        },
        "/tickets/motoristas/vinculo/transportadora": {
            "post": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Cria um ticket de vínculo a uma transportadora pelo motorista",
                "operationId": "domain_registration_Tickets-VinculaMotoristaTransportadora-POST-ticketDto-version-v{version}/tickets/motoristas/vinculo/transportadora",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "ticketDto",
                        "in": "body",
                        "description": "Ticket a ser criado",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.TransportadoraVinculo.VinculoMotorista.TicketVinculoMotoristaTransportadoraPostDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "O histórico foi atualizado."
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "404": {
                        "description": "Ticket não encontrado."
                    }
                }
            }
        },
        "/tickets/por-numero/{numeroTicket}/status": {
            "put": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Atualiza o status de um ticket",
                "operationId": "domain_registration_Tickets-PutTicketsAtualizacoesStatusPorNumeroTicket-PUT-numeroTicket-ticketDto-version-v{version}/tickets/por-numero/{numeroTicket}/status",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "numeroTicket",
                        "in": "path",
                        "description": "Numero do ticket",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "ticketDto",
                        "in": "body",
                        "description": "Dados do status atualizado",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.AtualizarStatusTicketDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "O status atualizado."
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "404": {
                        "description": "Ticket não encontrado.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/tickets/por-numero-servicenow/{numeroTicketServiceNow}/status": {
            "put": {
                "tags": [
                    "Tickets"
                ],
                "operationId": "domain_registration_Tickets-PutTicketsAtualizacoesStatusServiceNow-PUT-numeroTicketServiceNow-ticketDto-version-v{version}/tickets/por-numero-servicenow/{numeroTicketServiceNow}/status",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "numeroTicketServiceNow",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ticketDto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.AtualizarStatusTicketDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/tickets/por-numero/{numeroTicket}": {
            "get": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Consulta os dados de um ticket",
                "operationId": "domain_registration_Tickets-GetTicketPorNumero-GET-numeroTicket-version-v{version}/tickets/por-numero/{numeroTicket}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "numeroTicket",
                        "in": "path",
                        "description": "Número do ticket",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dados do Ticket.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.TicketGetDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "404": {
                        "description": "Ticket não encontrado.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Apaga lógicamente um ticket",
                "operationId": "domain_registration_Tickets-DeleteTicketsPorNumero-DELETE-numeroTicket-version-v{version}/tickets/por-numero/{numeroTicket}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "numeroTicket",
                        "in": "path",
                        "description": "Número do ticket",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "404": {
                        "description": "Ticket não encontrado.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "204": {
                        "description": "O histórico foi atualizado."
                    }
                }
            }
        },
        "/tickets": {
            "get": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Lista os tickets do motorista por cpf",
                "operationId": "domain_registration_Tickets-GetTicketsFilter-GET-$filter-$skip-$top-version-v{version}/tickets",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Opcional. Filtros OData para filtar a lista de transportadoras do motorista",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Opcional. Quantidade de transportadoras da lista a serem puladas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Opcional. Quantidade de transportadoras da lista a serem retornadas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.TicketGetDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "404": {
                        "description": "Tickets do motorista não encontrados.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "204": {
                        "description": "O histórico foi atualizado."
                    }
                }
            }
        },
        "/tickets/por-cpf-cnpj/{cpfCnpj}/em-processamento": {
            "get": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Lista os tickets do motorista por cpf",
                "operationId": "domain_registration_Tickets-GetTicketsMotoristaEmProcessamentoPorCpf-GET-cpfCnpj-version-v{version}/tickets/por-cpf-cnpj/{cpfCnpj}/em-processamento",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpfCnpj",
                        "in": "path",
                        "description": "Cpf cnpj",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.TicketGetDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "404": {
                        "description": "Tickets do motorista não encontrados.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "204": {
                        "description": "O histórico foi atualizado."
                    }
                }
            }
        },
        "/tickets/motoristas/por-cpf/{cpf}": {
            "get": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Lista os tickets do motorista por cpf",
                "operationId": "domain_registration_Tickets-GetTicketsMotoristaPorCpf-GET-cpf-somenteAtivo-$skip-$top-version-v{version}/tickets/motoristas/por-cpf/{cpf}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpf",
                        "in": "path",
                        "description": "Cpf do motorista",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "somenteAtivo",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Opcional. Quantidade de transportadoras da lista a serem puladas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Opcional. Quantidade de transportadoras da lista a serem retornadas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 1000
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.TicketGetDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "404": {
                        "description": "Tickets do motorista não encontrados.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "204": {
                        "description": "O histórico foi atualizado."
                    }
                }
            }
        },
        "/tickets/motoristas/por-cpf/{cpf}/pendentes/$count": {
            "get": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Quantidade de pendencia tickets do motorista por cpf",
                "operationId": "domain_registration_Tickets-GetTicketsMotoristaPorCpfQuantidadePendentes-GET-cpf-version-v{version}/tickets/motoristas/por-cpf/{cpf}/pendentes/$count",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpf",
                        "in": "path",
                        "description": "Cpf do motorista",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Quantidade de Tickets",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/tickets/motoristas/por-cpf/{cpf}/$count": {
            "get": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Quantidade de tickets do motorista por cpf",
                "operationId": "domain_registration_Tickets-GetTicketsMotoristaPorCpfQuantidade-GET-cpf-version-v{version}/tickets/motoristas/por-cpf/{cpf}/$count",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpf",
                        "in": "path",
                        "description": "Cpf do motorista",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Quantidade de Tickets",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/tickets/transportadoras/por-cpf-cnpj/{cpfCnpj}": {
            "get": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Lista os tickets da transportadora",
                "operationId": "domain_registration_Tickets-GetTicketsTransportadorasPorCpfCnpj-GET-cpfCnpj-$filter-$skip-$top-version-v{version}/tickets/transportadoras/por-cpf-cnpj/{cpfCnpj}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpfCnpj",
                        "in": "path",
                        "description": "Cpf ou Cnpj da transportadora",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Opcional. Filtros OData para filtar a lista de transportadoras do motorista",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Opcional. Quantidade de transportadoras da lista a serem puladas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Opcional. Quantidade de transportadoras da lista a serem retornadas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.TicketGetDto"
                        }
                    },
                    "404": {
                        "description": "Tickets da transportadora não encontrados.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "204": {
                        "description": "O histórico foi atualizado."
                    }
                }
            }
        },
        "/tickets/transportadoras/por-cpf-cnpj/tickets-vinculo-pendentes/{cpfCnpj}": {
            "get": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Lista os tickets da transportadora",
                "operationId": "domain_registration_Tickets-GetTicketsVinculoPendenteTransportadorasPorCpfCnpj-GET-cpfCnpj-$filter-$skip-$top-version-v{version}/tickets/transportadoras/por-cpf-cnpj/tickets-vinculo-pendentes/{cpfCnpj}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpfCnpj",
                        "in": "path",
                        "description": "Cpf ou Cnpj da transportadora",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Opcional. Filtros OData para filtar a lista de transportadoras do motorista",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Opcional. Quantidade de transportadoras da lista a serem puladas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Opcional. Quantidade de transportadoras da lista a serem retornadas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.TicketGetDto"
                        }
                    },
                    "404": {
                        "description": "Tickets da transportadora não encontrados.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "204": {
                        "description": "O histórico foi atualizado."
                    }
                }
            }
        },
        "/tickets/transportadoras/por-cpf-cnpj/{cpfCnpj}/pendentes/$count": {
            "get": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Quantidade de pendencia tickets do Transportadores por cpf cnpj",
                "operationId": "domain_registration_Tickets-GetTicketsTransportadoraPorCpfCnpjQuantidadePendentes-GET-cpfCnpj-version-v{version}/tickets/transportadoras/por-cpf-cnpj/{cpfCnpj}/pendentes/$count",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpfCnpj",
                        "in": "path",
                        "description": "Cpf ou cnpj da transportadora",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Quantidade de tickets",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "404": {
                        "description": "Tickets do motorista não encontrados."
                    }
                }
            }
        },
        "/tickets/transportadoras/por-cpf-cnpj/{cpfCnpj}/$count": {
            "get": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Quantidade de tickets do Transportadores por cpf cnpj",
                "operationId": "domain_registration_Tickets-GetTicketsTransportadoraPorCpfCnpjQuantidade-GET-cpfCnpj-version-v{version}/tickets/transportadoras/por-cpf-cnpj/{cpfCnpj}/$count",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpfCnpj",
                        "in": "path",
                        "description": "Cpf ou cnpj da transportadora",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Quantidade de tickets",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/tickets/veiculos/por-placa/{placa}": {
            "get": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Lista os tickets de um veículo",
                "operationId": "domain_registration_Tickets-GetTicketsVeiculosPorPlaca-GET-placa-$filter-$skip-$top-version-v{version}/tickets/veiculos/por-placa/{placa}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "placa",
                        "in": "path",
                        "description": "Placa do veículo",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Opcional. Filtros OData para filtar a lista de transportadoras do motorista",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Opcional. Quantidade de transportadoras da lista a serem puladas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Opcional. Quantidade de transportadoras da lista a serem retornadas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.TicketGetDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "404": {
                        "description": "Tickets do veículo não encontrados.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "204": {
                        "description": "O histórico foi atualizado."
                    }
                }
            }
        },
        "/tickets/status-existencia-ticket-veiculo/{placaCavalo}": {
            "get": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Consulta o status de existencia do ticket de veículo",
                "operationId": "domain_registration_Tickets-GetStatusExistenciaTicketVeiculoPorPlaca-GET-placaCavalo-version-v{version}/tickets/status-existencia-ticket-veiculo/{placaCavalo}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "placaCavalo",
                        "in": "path",
                        "description": "Placa do cavalo",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Ainda não existe um ticket aberto para este veículo"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "409": {
                        "description": "Já existe um ticket para este veículo em aberto."
                    }
                }
            }
        },
        "/tipos-grade": {
            "get": {
                "tags": [
                    "TiposGrade"
                ],
                "summary": "Obtém os tipos de grades",
                "operationId": "domain_registration_TiposGrade-GetTiposGrade-GET-version-v{version}/tipos-grade",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Tipos de grades encontrados.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    }
                }
            }
        },
        "/tipos-veiculo/{tipoVeiculoId}": {
            "get": {
                "tags": [
                    "TiposVeiculo"
                ],
                "summary": "Obtém o tipo de veículo por ID",
                "operationId": "domain_registration_TiposVeiculo-GetTiposVeiculosPorId-GET-tipoVeiculoId-version-v{version}/tipos-veiculo/{tipoVeiculoId}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "tipoVeiculoId",
                        "in": "path",
                        "description": "Id do tipo de veículo",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tipo de veículo",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.VeiculoTipo.Http.Dto.VeiculoTipoGetDto"
                        }
                    },
                    "404": {
                        "description": "Tipo de veículo não encontrado com o Id fornecido.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/tipos-veiculo/categorias/por-caracteristica/{caracteristicaId}": {
            "get": {
                "tags": [
                    "TiposVeiculo"
                ],
                "operationId": "domain_registration_TiposVeiculo-GetCategoriasByCaracteristicaId-GET-caracteristicaId-version-v{version}/tipos-veiculo/categorias/por-caracteristica/{caracteristicaId}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "caracteristicaId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.Veiculo.Http.Dto.Categoria.VeiculoCategoriaGetDto"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/tipos-veiculo/eixos/por-categoria/{categoriaId}": {
            "get": {
                "tags": [
                    "TiposVeiculo"
                ],
                "operationId": "domain_registration_TiposVeiculo-GetNumEixosPorCategoriaVeiculo-GET-categoriaId-version-v{version}/tipos-veiculo/eixos/por-categoria/{categoriaId}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "categoriaId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/tipos-veiculo/cargas-maximas/por-categoria/{categoriaId}/por-eixos/{numEixos}": {
            "get": {
                "tags": [
                    "TiposVeiculo"
                ],
                "operationId": "domain_registration_TiposVeiculo-GetCargaMaxPorTipoVeiculo-GET-categoriaId-numEixos-version-v{version}/tipos-veiculo/cargas-maximas/por-categoria/{categoriaId}/por-eixos/{numEixos}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "categoriaId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "numEixos",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "format": "double",
                                "type": "number"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/tipos-veiculo/qtd-carretas/por-categoria/{categoriaId}/por-eixos/{numEixos}/por-capacidade-maxima/{capacidadeMaxima}": {
            "get": {
                "tags": [
                    "TiposVeiculo"
                ],
                "operationId": "domain_registration_TiposVeiculo-GetQtdCarretasPorCategoriaEixosECapacidade-GET-categoriaId-numEixos-capacidadeMaxima-version-v{version}/tipos-veiculo/qtd-carretas/por-categoria/{categoriaId}/por-eixos/{numEixos}/por-capacidade-maxima/{capacidadeMaxima}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "categoriaId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "numEixos",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "capacidadeMaxima",
                        "in": "path",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/tipos-veiculo/por-categoria/{categoriaId}/por-eixos/{numEixos}/por-capacidade-maxima/{valCapacidadeCargaMax}/por-qtde-carretas/{qtdeCarretas}": {
            "get": {
                "tags": [
                    "TiposVeiculo"
                ],
                "operationId": "domain_registration_TiposVeiculo-GetTipoVeiculoByAtributos-GET-categoriaId-numEixos-valCapacidadeCargaMax-qtdeCarretas-version-v{version}/tipos-veiculo/por-categoria/{categoriaId}/por-eixos/{numEixos}/por-capacidade-maxima/{valCapacidadeCargaMax}/por-qtde-carretas/{qtdeCarretas}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "categoriaId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "numEixos",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "valCapacidadeCargaMax",
                        "in": "path",
                        "required": true,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "qtdeCarretas",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.VeiculoTipo.Http.Dto.VeiculoTipoGetDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/totens/servico-local/atualizacoes/versao-atual": {
            "get": {
                "tags": [
                    "Totens"
                ],
                "summary": "Obtém a versão atual do serviço local do Totem",
                "operationId": "domain_registration_Totens-GetTotensServicoLocalAtualizacoesVersaoAtual-GET-version-v{version}/totens/servico-local/atualizacoes/versao-atual",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Versão atual do serviço.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Se não encontrado o serviço instalado.",
                        "schema": {
                            "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.NotFoundResult"
                        }
                    }
                }
            }
        },
        "/totens/servico-local/atualizacoes/download/{fileVersion}": {
            "get": {
                "tags": [
                    "Totens"
                ],
                "summary": "Obtém os arquivos do serviço local do Totem em uma versão específica",
                "operationId": "domain_registration_Totens-GetTotensServicoLocalAtualizacoesDownload-GET-fileVersion-version-v{version}/totens/servico-local/atualizacoes/download/{fileVersion}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "fileVersion",
                        "in": "path",
                        "description": "Versão do serviço local",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Arquivo zip contendo serviço local.",
                        "schema": {
                            "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.FileStreamResult"
                        }
                    },
                    "404": {
                        "description": "Se versão ou arquivo não encontrado.",
                        "schema": {
                            "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.NotFoundResult"
                        }
                    }
                }
            }
        },
        "/totens/servico-local/conteudos-locais": {
            "get": {
                "tags": [
                    "Totens"
                ],
                "summary": "Obtém a lista dos conteúdos/arquivos do Totem",
                "operationId": "domain_registration_Totens-GetTotensServicoLocalConteudosLocais-GET-version-v{version}/totens/servico-local/conteudos-locais",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Lista dos arquivos locais",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Se não encontrado nenhum conteúdo no servidor",
                        "schema": {
                            "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.NotFoundResult"
                        }
                    }
                }
            }
        },
        "/totens/servico-local/conteudos-locais/download/{assetFilePath}": {
            "get": {
                "tags": [
                    "Totens"
                ],
                "summary": "Obtém o conteúdo/arquivo do servidor",
                "operationId": "domain_registration_Totens-GetTotensServicoLocalConteudosLocaisDownload-GET-assetFilePath-hash-version-v{version}/totens/servico-local/conteudos-locais/download/{assetFilePath}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "assetFilePath",
                        "in": "path",
                        "description": "Caminho do arquivo/conteúdo",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "hash",
                        "in": "query",
                        "description": "Hash do arquivo/conteúdo",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Arquivo/conteúdo encontrado",
                        "schema": {
                            "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.FileStreamResult"
                        }
                    },
                    "404": {
                        "description": "Se não encontrado nenhum arquivo/conteúdo no servidor",
                        "schema": {
                            "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.NotFoundResult"
                        }
                    }
                }
            },
            "head": {
                "tags": [
                    "Totens"
                ],
                "summary": "Obtém o header do conteúdo/arquivo do servidor",
                "operationId": "domain_registration_Totens-HeadTotensServicoLocalConteudosLocaisDownload-HEAD-assetFilePath-hash-version-v{version}/totens/servico-local/conteudos-locais/download/{assetFilePath}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "assetFilePath",
                        "in": "path",
                        "description": "Caminho do arquivo/conteúdo",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "hash",
                        "in": "query",
                        "description": "Hash do arquivo/conteúdo",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Header do arquivo/conteúdo",
                        "schema": {
                            "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.FileStreamResult"
                        }
                    },
                    "404": {
                        "description": "Se não encontrado nenhum arquivo/conteúdo no servidor",
                        "schema": {
                            "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.NotFoundResult"
                        }
                    }
                }
            }
        },
        "/totens/servico-local/conteudos-locais/agendamentos-sincronizacoes": {
            "get": {
                "tags": [
                    "Totens"
                ],
                "summary": "Obtém o agendamento de sincronização do totem",
                "operationId": "domain_registration_Totens-GetTotensServicoLocalConteudosLocaisSincronizacoesStatus-GET-idUnidadeNegocio-codigoVCTotem-version-v{version}/totens/servico-local/conteudos-locais/agendamentos-sincronizacoes",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "idUnidadeNegocio",
                        "in": "query",
                        "description": "ID da unidade de negócio",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "codigoVCTotem",
                        "in": "query",
                        "description": "VC do Totem",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Agendamento de sincronização do totem (se nulo, não há agendamento)",
                        "schema": {
                            "$ref": "#/definitions/System.Nullable"
                        }
                    },
                    "500": {
                        "description": "Caso algum problema no servidor ao buscar o agendamento",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/totens/servico-local/conteudos-locais/agendamentos-sincronizacoes/status": {
            "post": {
                "tags": [
                    "Totens"
                ],
                "summary": "Cria um status para o agendamento de sincronização do totem",
                "operationId": "domain_registration_Totens-PostTotensServicoLocalConteudosLocaisSincronizacoesStatus-POST-agenda-version-v{version}/totens/servico-local/conteudos-locais/agendamentos-sincronizacoes/status",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "agenda",
                        "in": "body",
                        "description": "Objeto status para gravação",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Sync.Dto.Agenda.AgendaSyncAssetsStatusDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Status do agendamento de sincronização do totem foi inserido com sucesso"
                    },
                    "400": {
                        "description": "Caso algum problema encontrado no objeto status enviado",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Caso algum problema no servidor ao incluir o status",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/totens/{id}/parametrizacoes": {
            "get": {
                "tags": [
                    "Totens"
                ],
                "summary": "Obtém a parametrização do Totem",
                "operationId": "domain_registration_Totens-GetTotensParametrizacoes-GET-id-version-v{version}/totens/{id}/parametrizacoes",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID do Totem",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parametrização do totem",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.ParametrizacaoTotem.Http.Dto.TotemGetDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno no servidor / Totem/Unidade de negócio não encontrado",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/totens/{id}/parametrizacoes/tipos-carregamento/{tipo}/$count": {
            "get": {
                "tags": [
                    "Totens"
                ],
                "summary": "Obtém a quantidade de registros da parametrização do Totem por tipo de carregamento",
                "operationId": "domain_registration_Totens-GetTotensParametrizacoesTiposCarregamentoPorTipoCount-GET-id-tipo-version-v{version}/totens/{id}/parametrizacoes/tipos-carregamento/{tipo}/$count",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID do Totem",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "tipo",
                        "in": "path",
                        "description": "Tipo de carregamento",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Total de registros",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceCountDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno no servidor / Totem/Unidade de negócio não encontrado",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/totens/{id}/parametrizacoes/tipos-carregamento/{tipo}": {
            "get": {
                "tags": [
                    "Totens"
                ],
                "summary": "Obtém a parametrização do Totem por tipo de carregamento",
                "operationId": "domain_registration_Totens-GetTotensParametrizacoesTiposCarregamentoPorTipo-GET-id-tipo-$skip-$top-version-v{version}/totens/{id}/parametrizacoes/tipos-carregamento/{tipo}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID do Totem",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "tipo",
                        "in": "path",
                        "description": "Tipo de carregamento",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Opcional. Quantidade de registros da lista a serem puladas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Opcional. Quantidade de registros da lista a serem retornadas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 10
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parametrização do totem por tipo de carregamento",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceCountDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno no servidor / Totem/Unidade de negócio não encontrado",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/transportadoras/{transportadoraId}": {
            "get": {
                "tags": [
                    "Transportadoras"
                ],
                "summary": "Obtém a transportadora por ID",
                "operationId": "domain_registration_Transportadoras-GetTransportadorasPorId-GET-transportadoraId-version-v{version}/transportadoras/{transportadoraId}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "transportadoraId",
                        "in": "path",
                        "description": "Id da transportadora",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Objeto Transportadora encontrado (dados nulos se não existir)",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Transportadora.Http.Dto.TransportadoraGetPagedDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/transportadoras/por-cpf-cnpj/{cpfCnpjCodigo}": {
            "get": {
                "tags": [
                    "Transportadoras"
                ],
                "summary": "Retorna os dados do SAP referentes a Transportadora, agrupado por CPF/CNPJ Ou Código",
                "operationId": "domain_registration_Transportadoras-GetByCpfCnpjCodigo-GET-cpfCnpjCodigo-version-v{version}/transportadoras/por-cpf-cnpj/{cpfCnpjCodigo}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpfCnpjCodigo",
                        "in": "path",
                        "description": "CPF, CNPJ ou Código da transportadora",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações retornadas com sucesso.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Transportadora.Http.Dto.TransportadoraGetPagedDto"
                        }
                    },
                    "404": {
                        "description": "Transportadora não encontrada.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/transportadoras/por-cpf-cnpj/{cpfCnpj}/motoristas": {
            "get": {
                "tags": [
                    "Transportadoras"
                ],
                "summary": "Busca de forma personalizada os motoristas vinculados com a transportadora",
                "operationId": "domain_registration_Transportadoras-GetMotoristasTransportadoraPorCpfCnpjFilter-GET-cpfCnpj-$motoristaCpf-$skip-$top-version-v{version}/transportadoras/por-cpf-cnpj/{cpfCnpj}/motoristas",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpfCnpj",
                        "in": "path",
                        "description": "CPF ou CNPJ da transportadora",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "$motoristaCpf",
                        "in": "query",
                        "description": "Opcional. CPF do motorista",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Opcional. Quantidade de transportadoras da lista a serem puladas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Opcional. Quantidade de transportadoras da lista a serem retornadas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 100
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações retornadas com sucesso.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Domain.Transportadora.Model.TransportadoraMotoristaDto"
                            }
                        }
                    },
                    "404": {
                        "description": "Transportadora não encontrada.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/transportadoras/{transportadoraCpfCnpj}/motoristas/por-cpf/{motoristaCpf}/favorito": {
            "post": {
                "tags": [
                    "Transportadoras"
                ],
                "summary": "Vincula motorista como favorito para uma transportadora",
                "operationId": "domain_registration_Transportadoras-PostPorCpfCnpjMotoristaFavorito-POST-transportadoraCpfCnpj-motoristaCpf-version-v{version}/transportadoras/{transportadoraCpfCnpj}/motoristas/por-cpf/{motoristaCpf}/favorito",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "transportadoraCpfCnpj",
                        "in": "path",
                        "description": "CPJ/CNPJ da transportadora",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "motoristaCpf",
                        "in": "path",
                        "description": "CPF do motorista",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Motorista incluído na lista de favoritos"
                    },
                    "404": {
                        "description": "Transportadora ou Motorista não encontrados",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Transportadoras"
                ],
                "summary": "Remove vínculo de motorista como favorito para uma transportadora",
                "operationId": "domain_registration_Transportadoras-DeletePorIdMotoristaFavorito-DELETE-transportadoraCpfCnpj-motoristaCpf-version-v{version}/transportadoras/{transportadoraCpfCnpj}/motoristas/por-cpf/{motoristaCpf}/favorito",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "transportadoraCpfCnpj",
                        "in": "path",
                        "description": "ID da transportadora",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "motoristaCpf",
                        "in": "path",
                        "description": "CPF do motorista",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Motorista incluído na lista de favoritos"
                    },
                    "404": {
                        "description": "Transportadora ou Motorista não encontrados",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/transportadoras/{transportadoraCpfCnpj}/motoristas/favoritos": {
            "get": {
                "tags": [
                    "Transportadoras"
                ],
                "summary": "Lista os motoristas favoritos da transportadora (ou todos ordenados preferencialmente pelos favoritos)",
                "operationId": "domain_registration_Transportadoras-GetPorIdMotoristasFavoritos-GET-transportadoraCpfCnpj-$skip-$top-somenteFavoritas-version-v{version}/transportadoras/{transportadoraCpfCnpj}/motoristas/favoritos",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "transportadoraCpfCnpj",
                        "in": "path",
                        "description": "CPF/CNPJ do motorista",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Opcional. Quantidade de transportadoras da lista a serem puladas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Opcional. Quantidade de transportadoras da lista a serem retornadas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "somenteFavoritas",
                        "in": "query",
                        "description": "Opcional (Padrão: true). Flag indicando se deseja retornar somente as favoritas. Se não, trará todas as transportadoras, ordenada pelas favoritas",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de motoristas da transportadora.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Domain.Transportadora.Model.Transportadora"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "404": {
                        "description": "Transportadora ou motoristas não encontrados."
                    }
                }
            }
        },
        "/transportadoras/por-cpf-cnpj/{cpfCnpj}/situacao-cadastral": {
            "get": {
                "tags": [
                    "Transportadoras"
                ],
                "summary": "Obtém a situação cadastral da transportadora (semáforo de pendências)",
                "operationId": "domain_registration_Transportadoras-GetSituacaoCadastral-GET-cpfCnpj-version-v{version}/transportadoras/por-cpf-cnpj/{cpfCnpj}/situacao-cadastral",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpfCnpj",
                        "in": "path",
                        "description": "CPF ou CNPJ da transportadora",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações retornadas com sucesso.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Transportadoras.Dto.SituacaoTransportadoraGeralDto"
                        }
                    },
                    "404": {
                        "description": "Transportadora não encontrada.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/transportadoras/por-cpf-cnpj/{cpfCnpj}/situacao-cadastral/detalhada": {
            "get": {
                "tags": [
                    "Transportadoras"
                ],
                "summary": "Obtém a situação cadastral detalhada da transportadora (semáforo de pendências)",
                "operationId": "domain_registration_Transportadoras-GetSituacaoCadastralDetalhada-GET-cpfCnpj-version-v{version}/transportadoras/por-cpf-cnpj/{cpfCnpj}/situacao-cadastral/detalhada",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpfCnpj",
                        "in": "path",
                        "description": "CPF ou CNPJ da transportadora",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações retornadas com sucesso.",
                        "schema": {
                            "$ref": "#/definitions/Domain.Motorista.Model.SituacaoCadastral.SituacaoCadastralDto"
                        }
                    },
                    "404": {
                        "description": "Transportadora não encontrada.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/transportadoras/por-cpf-cnpj/{cpfCnpj}/composicao-veiculo": {
            "get": {
                "tags": [
                    "Transportadoras"
                ],
                "summary": "Lista de composicoes de veiculos do motorista (ou todas ordenadas preferencialmente pelas favoritas)",
                "operationId": "domain_registration_Transportadoras-GetPorCpfComposicaoVeiculo-GET-cpfCnpj-$skip-$top-somenteFavoritas-version-v{version}/transportadoras/por-cpf-cnpj/{cpfCnpj}/composicao-veiculo",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpfCnpj",
                        "in": "path",
                        "description": "CPF/CNPJ da transportadora",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Opcional. Quantidade de composicoes de veiculo da lista a serem puladas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Opcional. Quantidade de composicoes de veiculo da lista a serem retornadas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "somenteFavoritas",
                        "in": "query",
                        "description": "Opcional (Padrão: true). Flag indicando se deseja retornar somente as favoritas. Se não, trará todas as composicoes de veiculo, ordenada pelas favoritas",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de composicao de veiculo do motorista.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Domain.ComposicaoVeiculoTransportadora.Model.ComposicaoVeiculoTransportadora"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "404": {
                        "description": "Composicao não encontrados."
                    }
                }
            }
        },
        "/transportadoras/por-cpf-cnpj/{cpfCnpj}/composicao-veiculo/por-placa/{placa}": {
            "get": {
                "tags": [
                    "Transportadoras"
                ],
                "summary": "Obtém os dados de uma composicao que esta vinculada com veículo a transportadora",
                "operationId": "domain_registration_Transportadoras-GetPorCpfComposicaoVeiculoPorPlaca-GET-cpfCnpj-placa-version-v{version}/transportadoras/por-cpf-cnpj/{cpfCnpj}/composicao-veiculo/por-placa/{placa}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpfCnpj",
                        "in": "path",
                        "description": "CPF ou CNPJ da transportadora",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "placa",
                        "in": "path",
                        "description": "Placa do veículo",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações retornadas com sucesso.",
                        "schema": {
                            "$ref": "#/definitions/Domain.ComposicaoVeiculoTransportadora.Model.ComposicaoVeiculoTransportadora"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "404": {
                        "description": "Transportadora não encontrada."
                    }
                }
            }
        },
        "/transportadoras/por-cpf-cnpj/{cpfCnpj}/veiculos": {
            "get": {
                "tags": [
                    "Transportadoras"
                ],
                "summary": "Busca de forma personalizada os veiculos vinculados a transportadora",
                "operationId": "domain_registration_Transportadoras-GetVeiculosTransportadoraFilter-GET-cpfCnpj-$filter-$skip-$top-version-v{version}/transportadoras/por-cpf-cnpj/{cpfCnpj}/veiculos",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpfCnpj",
                        "in": "path",
                        "description": "CPF ou CNPJ da transportadora",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Opcional. Filtros OData para filtar a lista de veiculos da transportadora",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Opcional. Quantidade de transportadoras da lista a serem puladas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Opcional. Quantidade de transportadoras da lista a serem retornadas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações retornadas com sucesso.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.Veiculo.Http.Dto.MotoristaParceiro.VeiculoMotoristaParceiroGetDto"
                            }
                        }
                    },
                    "404": {
                        "description": "Transportadora não encontrada.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/transportadoras/por-cpf-cnpj/{cpfCnpj}/veiculos/por-placa/{placa}": {
            "get": {
                "tags": [
                    "Transportadoras"
                ],
                "summary": "Obtém os dados de um veículo",
                "operationId": "domain_registration_Transportadoras-GetVeiculoTransportadoraPorPlaca-GET-cpfCnpj-placa-version-v{version}/transportadoras/por-cpf-cnpj/{cpfCnpj}/veiculos/por-placa/{placa}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpfCnpj",
                        "in": "path",
                        "description": "CPF ou CNPJ da transportadora",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "placa",
                        "in": "path",
                        "description": "Placa do veículo",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações retornadas com sucesso.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Transportadora.Http.Dto.VeiculoTransportadoraGetDto"
                        }
                    },
                    "404": {
                        "description": "Transportadora não encontrada.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/transportadoras/por-cpf-cnpj/{cpfCnpj}/veiculos/por-placa/{placa}/situacao-cadastral": {
            "get": {
                "tags": [
                    "Transportadoras"
                ],
                "summary": "Obtém a situação cadastral do veículo (semáforo de pendências)",
                "operationId": "domain_registration_Transportadoras-GetSituacaoCadastralVeiculo-GET-cpfCnpj-placa-version-v{version}/transportadoras/por-cpf-cnpj/{cpfCnpj}/veiculos/por-placa/{placa}/situacao-cadastral",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpfCnpj",
                        "in": "path",
                        "description": "CPF ou CNPJ da transportadora",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "placa",
                        "in": "path",
                        "description": "Placa do veículo",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações retornadas com sucesso."
                    },
                    "404": {
                        "description": "Transportadora não encontrada.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/transportadoras/por-cpf-cnpj/{cpfCnpj}/veiculos/por-placa/{placa}/situacao-cadastral/detalhada": {
            "get": {
                "tags": [
                    "Transportadoras"
                ],
                "summary": "Obtém a situação cadastral detalhada do veículo (semáforo de pendências)",
                "operationId": "domain_registration_Transportadoras-GetSituacaoCadastralDetalhadaVeiculo-GET-cpfCnpj-placa-version-v{version}/transportadoras/por-cpf-cnpj/{cpfCnpj}/veiculos/por-placa/{placa}/situacao-cadastral/detalhada",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpfCnpj",
                        "in": "path",
                        "description": "CPF ou CNPJ da transportadora",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "placa",
                        "in": "path",
                        "description": "Placa do veículo",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações retornadas com sucesso."
                    },
                    "404": {
                        "description": "Transportadora não encontrada.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/transportadoras/composicao-veiculo/favorita": {
            "post": {
                "tags": [
                    "Transportadoras"
                ],
                "summary": "Lista de composicoes de veiculos do motorista (ou todas ordenadas preferencialmente pelas favoritas)",
                "operationId": "domain_registration_Transportadoras-PutPorCpfCnpjComposicaoVeiculoFavorito-POST-dto-version-v{version}/transportadoras/composicao-veiculo/favorita",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Transportadoras.Dto.ComposicaoVeiculoTransportadoraFavorita"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Lista de composicao de veiculo do motorista."
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "404": {
                        "description": "Composicao não encontrados."
                    }
                }
            }
        },
        "/transportadoras/vinculo/composicao-veiculo": {
            "post": {
                "tags": [
                    "Transportadoras"
                ],
                "operationId": "domain_registration_Transportadoras-PostVinculoTransportadoraVeiculo-POST-dto-version-v{version}/transportadoras/vinculo/composicao-veiculo",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Transportadoras.Dto.VinculoVeiculo.VinculoTransportadoraVeiculoPostDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/transportadoras/desvinculo/composicao-veiculo": {
            "post": {
                "tags": [
                    "Transportadoras"
                ],
                "operationId": "domain_registration_Transportadoras-PostDesvinculoTransportadoraVeiculo-POST-dto-version-v{version}/transportadoras/desvinculo/composicao-veiculo",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Transportadoras.Dto.VinculoVeiculo.VinculoTransportadoraVeiculoPostDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/transportadoras/vinculo/motorista": {
            "post": {
                "tags": [
                    "Transportadoras"
                ],
                "operationId": "domain_registration_Transportadoras-PostVinculoTransportadoraMotorista-POST-dto-version-v{version}/transportadoras/vinculo/motorista",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Transportadoras.Dto.VinculoMotorista.VinculoTransportadoraMotoristaPostDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/transportadoras/desvinculo/motorista": {
            "post": {
                "tags": [
                    "Transportadoras"
                ],
                "operationId": "domain_registration_Transportadoras-PostDesvinculoTransportadoraMotorista-POST-dto-version-v{version}/transportadoras/desvinculo/motorista",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Transportadoras.Dto.VinculoMotorista.VinculoTransportadoraMotoristaPostDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/transportadoras/por-motorista/{motoristaId}/por-unidade-negocio/{unidadeNegocioId}/por-tipo-transporte/{tipoTransporte}": {
            "get": {
                "tags": [
                    "Transportadoras"
                ],
                "summary": "Lista as transportadoras do motorista a serem exibidas no momento da marcação",
                "operationId": "domain_registration_Transportadoras-GetMotoristasTransportadoras-GET-motoristaId-unidadeNegocioId-tipoTransporte-$skip-$top-version-v{version}/transportadoras/por-motorista/{motoristaId}/por-unidade-negocio/{unidadeNegocioId}/por-tipo-transporte/{tipoTransporte}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "motoristaId",
                        "in": "path",
                        "description": "ID do motorista",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "unidadeNegocioId",
                        "in": "path",
                        "description": "ID da unidade de negócio",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "tipoTransporte",
                        "in": "path",
                        "description": "Tipo de transporte (texto ou código) selecionado na marcação",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7
                        ]
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Opcional. Quantidade de transportadoras da lista a serem puladas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Opcional. Quantidade de transportadoras da lista a serem retornadas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de transportadoras do motorista.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/transportadoras/por-motorista/{motoristaId}/por-unidade-negocio/{unidadeNegocioId}/por-tipo-transporte/{tipoTransporte}/$count": {
            "get": {
                "tags": [
                    "Transportadoras"
                ],
                "summary": "Obtém a quantidade de transportadoras de um motorista para listar na marcação",
                "operationId": "domain_registration_Transportadoras-GetCountTransportadorasByMotorista-GET-motoristaId-unidadeNegocioId-tipoTransporte-version-v{version}/transportadoras/por-motorista/{motoristaId}/por-unidade-negocio/{unidadeNegocioId}/por-tipo-transporte/{tipoTransporte}/$count",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "motoristaId",
                        "in": "path",
                        "description": "ID do motorista",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "unidadeNegocioId",
                        "in": "path",
                        "description": "ID da unidade de negócio",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "tipoTransporte",
                        "in": "path",
                        "description": "Tipo de transporte (texto ou código) selecionado na marcação",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Quantidade de registros.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceCountDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/unidade-negocio-horario-app/{id}": {
            "get": {
                "tags": [
                    "UnidadeNegocioHorarioApp"
                ],
                "summary": "Obtém configuração de horário da unidade por ID",
                "operationId": "domain_registration_UnidadeNegocioHorarioApp-GetById-GET-id-version-v{version}/unidade-negocio-horario-app/{id}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id da configuração",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Configuração de horário",
                        "schema": {
                            "$ref": "#/definitions/Domain.UnidadeNegocio.Model.HorarioAtendimentoApp.HorarioAtendimentoAppGetDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/unidade-negocio-horario-app/por-unidade-negocio/{unidadenegocioid}": {
            "get": {
                "tags": [
                    "UnidadeNegocioHorarioApp"
                ],
                "summary": "Obtém configuração de horário da unidade por ID da unidade",
                "operationId": "domain_registration_UnidadeNegocioHorarioApp-GetByUnidadeNegocioId-GET-unidadenegocioid-version-v{version}/unidade-negocio-horario-app/por-unidade-negocio/{unidadenegocioid}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "unidadenegocioid",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Configuração de horário",
                        "schema": {
                            "$ref": "#/definitions/Domain.UnidadeNegocio.Model.HorarioAtendimentoApp.HorarioAtendimentoAppGetDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/unidade-negocio-horario-app": {
            "get": {
                "tags": [
                    "UnidadeNegocioHorarioApp"
                ],
                "summary": "Obtém configurações de horário da unidade",
                "operationId": "domain_registration_UnidadeNegocioHorarioApp-Get-GET-version-v{version}/unidade-negocio-horario-app",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Configurações de horário",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Domain.UnidadeNegocio.Model.HorarioAtendimentoApp.HorarioAtendimentoAppGetDto"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "UnidadeNegocioHorarioApp"
                ],
                "summary": "Atualiza a configuração de horário da unidade",
                "operationId": "domain_registration_UnidadeNegocioHorarioApp-Put-PUT-UnidadeNegocioId-UnidadeNegocio.Codigo-UnidadeNegocio.Descricao-UnidadeNegocio.Ativo-UnidadeNegocio.TempoToleranciaChamado-UnidadeNegocio.TRSNETAtivo-UnidadeNegocio.PreReservaAtiva-UnidadeNegocio.PreReservaRequerCheckin-UnidadeNegocio.TempoToleranciaCheckin-UnidadeNegocio.CentralPaletesOnline-UnidadeNegocio.UrlCentralPaletes-UnidadeNegocio.HoraLimiteTifEx-UnidadeNegocio.PorcentagemTif-UnidadeNegocio.PorcentagemTifEx-UnidadeNegocio.FlgCifAuto-UnidadeNegocio.MinutosPainel-UnidadeNegocio.PorcentagemMinimoCarregamento-UnidadeNegocio.DesvioPadraoChamado-UnidadeNegocio.QntPlacaHabilitadaCarregamento-UnidadeNegocio.FlgValidaTreinamentoSiloRodoviario-UnidadeNegocio.FlgValidaTreinamentoDirecaoDefensiva-UnidadeNegocio.FlgValidaTreinamentoOperacionalCargaSeca-UnidadeNegocio.FlgValidaTreinamentoOperacionalCacamba-UnidadeNegocio.FlgValidaTreinamentoOperacionalTanque-UnidadeNegocio.FlgValidaLaudoCondicaoCaminhaoCargaSeca-UnidadeNegocio.FlgValidaLaudoManutencaoCargaSecaCacamba-UnidadeNegocio.FlgValidaLaudoSistemaHidraulicoCacamba-UnidadeNegocio.FlgValidaLaudoEspessuraEstanqueidadeTanque-UnidadeNegocio.FlgValidaCaracteristicaVeiculo-UnidadeNegocio.FlgValidaIntegracaoSeguranca-UnidadeNegocio.FlgValidaLaudoVistoria-UnidadeNegocio.FlgValidaLaudoCaminhaoSilo-UnidadeNegocio.CodEmpresa-UnidadeNegocio.UTC-UnidadeNegocio.FlgListRoteirizador-UnidadeNegocio.TransportadoraMovcId-UnidadeNegocio.TempoToleranciaAtribuicaoCargaManual-UnidadeNegocio.CadastroVeiculoIndividualizadoAtivo-UnidadeNegocio.TipoAutenticacaoTotem-UnidadeNegocio.Id-DiaSemana-HoraInicial-HoraFinal-Id-version-v{version}/unidade-negocio-horario-app",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "UnidadeNegocioId",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "UnidadeNegocio.Codigo",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "maxLength": 10
                    },
                    {
                        "name": "UnidadeNegocio.Descricao",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "maxLength": 30
                    },
                    {
                        "name": "UnidadeNegocio.Ativo",
                        "in": "formData",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.TempoToleranciaChamado",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "UnidadeNegocio.TRSNETAtivo",
                        "in": "formData",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.PreReservaAtiva",
                        "in": "formData",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.PreReservaRequerCheckin",
                        "in": "formData",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.TempoToleranciaCheckin",
                        "in": "formData",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "UnidadeNegocio.CentralPaletesOnline",
                        "in": "formData",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.UrlCentralPaletes",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "maxLength": 150
                    },
                    {
                        "name": "UnidadeNegocio.HoraLimiteTifEx",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "UnidadeNegocio.PorcentagemTif",
                        "in": "formData",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "UnidadeNegocio.PorcentagemTifEx",
                        "in": "formData",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "UnidadeNegocio.FlgCifAuto",
                        "in": "formData",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.MinutosPainel",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "UnidadeNegocio.PorcentagemMinimoCarregamento",
                        "in": "formData",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "UnidadeNegocio.DesvioPadraoChamado",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "UnidadeNegocio.QntPlacaHabilitadaCarregamento",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "UnidadeNegocio.FlgValidaTreinamentoSiloRodoviario",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.FlgValidaTreinamentoDirecaoDefensiva",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.FlgValidaTreinamentoOperacionalCargaSeca",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.FlgValidaTreinamentoOperacionalCacamba",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.FlgValidaTreinamentoOperacionalTanque",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.FlgValidaLaudoCondicaoCaminhaoCargaSeca",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.FlgValidaLaudoManutencaoCargaSecaCacamba",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.FlgValidaLaudoSistemaHidraulicoCacamba",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.FlgValidaLaudoEspessuraEstanqueidadeTanque",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.FlgValidaCaracteristicaVeiculo",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.FlgValidaIntegracaoSeguranca",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.FlgValidaLaudoVistoria",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.FlgValidaLaudoCaminhaoSilo",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.CodEmpresa",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "UnidadeNegocio.UTC",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "UnidadeNegocio.FlgListRoteirizador",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "UnidadeNegocio.TransportadoraMovcId",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "UnidadeNegocio.TempoToleranciaAtribuicaoCargaManual",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "UnidadeNegocio.CadastroVeiculoIndividualizadoAtivo",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.TipoAutenticacaoTotem",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            1,
                            2,
                            3,
                            4
                        ]
                    },
                    {
                        "name": "UnidadeNegocio.Id",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "DiaSemana",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "HoraInicial",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "HoraFinal",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Id",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "schema": {
                            "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.OkResult"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "UnidadeNegocioHorarioApp"
                ],
                "summary": "Inclui a configuração de horário da unidade",
                "operationId": "domain_registration_UnidadeNegocioHorarioApp-Post-POST-UnidadeNegocioId-UnidadeNegocio.Codigo-UnidadeNegocio.Descricao-UnidadeNegocio.Ativo-UnidadeNegocio.TempoToleranciaChamado-UnidadeNegocio.TRSNETAtivo-UnidadeNegocio.PreReservaAtiva-UnidadeNegocio.PreReservaRequerCheckin-UnidadeNegocio.TempoToleranciaCheckin-UnidadeNegocio.CentralPaletesOnline-UnidadeNegocio.UrlCentralPaletes-UnidadeNegocio.HoraLimiteTifEx-UnidadeNegocio.PorcentagemTif-UnidadeNegocio.PorcentagemTifEx-UnidadeNegocio.FlgCifAuto-UnidadeNegocio.MinutosPainel-UnidadeNegocio.PorcentagemMinimoCarregamento-UnidadeNegocio.DesvioPadraoChamado-UnidadeNegocio.QntPlacaHabilitadaCarregamento-UnidadeNegocio.FlgValidaTreinamentoSiloRodoviario-UnidadeNegocio.FlgValidaTreinamentoDirecaoDefensiva-UnidadeNegocio.FlgValidaTreinamentoOperacionalCargaSeca-UnidadeNegocio.FlgValidaTreinamentoOperacionalCacamba-UnidadeNegocio.FlgValidaTreinamentoOperacionalTanque-UnidadeNegocio.FlgValidaLaudoCondicaoCaminhaoCargaSeca-UnidadeNegocio.FlgValidaLaudoManutencaoCargaSecaCacamba-UnidadeNegocio.FlgValidaLaudoSistemaHidraulicoCacamba-UnidadeNegocio.FlgValidaLaudoEspessuraEstanqueidadeTanque-UnidadeNegocio.FlgValidaCaracteristicaVeiculo-UnidadeNegocio.FlgValidaIntegracaoSeguranca-UnidadeNegocio.FlgValidaLaudoVistoria-UnidadeNegocio.FlgValidaLaudoCaminhaoSilo-UnidadeNegocio.CodEmpresa-UnidadeNegocio.UTC-UnidadeNegocio.FlgListRoteirizador-UnidadeNegocio.TransportadoraMovcId-UnidadeNegocio.TempoToleranciaAtribuicaoCargaManual-UnidadeNegocio.CadastroVeiculoIndividualizadoAtivo-UnidadeNegocio.TipoAutenticacaoTotem-UnidadeNegocio.Id-DiaSemana-HoraInicial-HoraFinal-Id-version-v{version}/unidade-negocio-horario-app",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "UnidadeNegocioId",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "UnidadeNegocio.Codigo",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "maxLength": 10
                    },
                    {
                        "name": "UnidadeNegocio.Descricao",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "maxLength": 30
                    },
                    {
                        "name": "UnidadeNegocio.Ativo",
                        "in": "formData",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.TempoToleranciaChamado",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "UnidadeNegocio.TRSNETAtivo",
                        "in": "formData",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.PreReservaAtiva",
                        "in": "formData",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.PreReservaRequerCheckin",
                        "in": "formData",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.TempoToleranciaCheckin",
                        "in": "formData",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "UnidadeNegocio.CentralPaletesOnline",
                        "in": "formData",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.UrlCentralPaletes",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "maxLength": 150
                    },
                    {
                        "name": "UnidadeNegocio.HoraLimiteTifEx",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "UnidadeNegocio.PorcentagemTif",
                        "in": "formData",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "UnidadeNegocio.PorcentagemTifEx",
                        "in": "formData",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "UnidadeNegocio.FlgCifAuto",
                        "in": "formData",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.MinutosPainel",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "UnidadeNegocio.PorcentagemMinimoCarregamento",
                        "in": "formData",
                        "required": false,
                        "type": "number",
                        "format": "double"
                    },
                    {
                        "name": "UnidadeNegocio.DesvioPadraoChamado",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "UnidadeNegocio.QntPlacaHabilitadaCarregamento",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "UnidadeNegocio.FlgValidaTreinamentoSiloRodoviario",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.FlgValidaTreinamentoDirecaoDefensiva",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.FlgValidaTreinamentoOperacionalCargaSeca",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.FlgValidaTreinamentoOperacionalCacamba",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.FlgValidaTreinamentoOperacionalTanque",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.FlgValidaLaudoCondicaoCaminhaoCargaSeca",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.FlgValidaLaudoManutencaoCargaSecaCacamba",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.FlgValidaLaudoSistemaHidraulicoCacamba",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.FlgValidaLaudoEspessuraEstanqueidadeTanque",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.FlgValidaCaracteristicaVeiculo",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.FlgValidaIntegracaoSeguranca",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.FlgValidaLaudoVistoria",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.FlgValidaLaudoCaminhaoSilo",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.CodEmpresa",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "UnidadeNegocio.UTC",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "UnidadeNegocio.FlgListRoteirizador",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "UnidadeNegocio.TransportadoraMovcId",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "UnidadeNegocio.TempoToleranciaAtribuicaoCargaManual",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "UnidadeNegocio.CadastroVeiculoIndividualizadoAtivo",
                        "in": "formData",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "UnidadeNegocio.TipoAutenticacaoTotem",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            1,
                            2,
                            3,
                            4
                        ]
                    },
                    {
                        "name": "UnidadeNegocio.Id",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "DiaSemana",
                        "in": "formData",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "HoraInicial",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "HoraFinal",
                        "in": "formData",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Id",
                        "in": "formData",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "schema": {
                            "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.OkResult"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "UnidadeNegocioHorarioApp"
                ],
                "summary": "Remove a configuração de horário da unidade",
                "operationId": "domain_registration_UnidadeNegocioHorarioApp-Delete-DELETE-version-v{version}/unidade-negocio-horario-app",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "schema": {
                            "$ref": "#/definitions/Microsoft.AspNetCore.Mvc.OkResult"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/unidades-negocio": {
            "get": {
                "tags": [
                    "UnidadesNegocio"
                ],
                "summary": "Lista as Unidades de Negócio",
                "operationId": "domain_registration_UnidadesNegocio-GetUnidadesNegocio-GET-$filter-$skip-$top-version-v{version}/unidades-negocio",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Opcional. Filtros OData para filtar a lista de unidades de negócio",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Opcional. Quantidade de Unidades de Negócio da lista a serem puladas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Opcional. Quantidade de Unidades de Negócio da lista a serem retornadas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de Unidades de Negócio.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Domain.UnidadeNegocio.Model.UnidadeNegocio"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/unidades-negocio/simplificadas": {
            "get": {
                "tags": [
                    "UnidadesNegocio"
                ],
                "summary": "Lista as Unidades de Negócio em modelo simplificado",
                "operationId": "domain_registration_UnidadesNegocio-GetUnidadesNegocioSimplificadas-GET-$filter-$skip-$top-version-v{version}/unidades-negocio/simplificadas",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Opcional. Filtros OData para filtar a lista de unidades de negócio",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Opcional. Quantidade de Unidades de Negócio da lista a serem puladas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Opcional. Quantidade de Unidades de Negócio da lista a serem retornadas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de Unidades de Negócio simplificadas.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.UnidadeNegocio.Http.Dto.UnidadeNegocioSimplifiedGetDto"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/unidades-negocio/$count": {
            "get": {
                "tags": [
                    "UnidadesNegocio"
                ],
                "summary": "Obtém a quantidade de Unidades de Negócio que atendem ao filtro, se especificado",
                "operationId": "domain_registration_UnidadesNegocio-GetUnidadesNegocioCount-GET-$filter-version-v{version}/unidades-negocio/$count",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Opcional. Filtros OData para filtar a lista de unidades de negócio à serem contadas",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Quantidade de Unidades de Negócio que atendem ao filtro, se especificado.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceCountDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/unidades-negocio/{unidadeNegocioId}": {
            "get": {
                "tags": [
                    "UnidadesNegocio"
                ],
                "summary": "Obtém uma Unidade de Negócio pelo ID",
                "operationId": "domain_registration_UnidadesNegocio-GetUnidadesNegocioPorId-GET-unidadeNegocioId-version-v{version}/unidades-negocio/{unidadeNegocioId}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "unidadeNegocioId",
                        "in": "path",
                        "description": "Id da Unidade de negócio",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Unidade de negócio solicitada.",
                        "schema": {
                            "$ref": "#/definitions/Domain.UnidadeNegocio.Model.UnidadeNegocio"
                        }
                    },
                    "404": {
                        "description": "Não foi encontrada unidade de negócio com o Id fornecido.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/unidades-negocio/{unidadeId}/pesquisas/pendentes": {
            "get": {
                "tags": [
                    "UnidadesNegocio"
                ],
                "summary": "Obtém a lista de pesquisas pendentes por unidade de negócio",
                "operationId": "domain_registration_UnidadesNegocio-GetUnidadesNegocioPesquisasPendentes-GET-unidadeId-version-v{version}/unidades-negocio/{unidadeId}/pesquisas/pendentes",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "unidadeId",
                        "in": "path",
                        "description": "Id da Unidade de negócio",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pesquisas pendentes para unidade de negócio solicitada.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Pesquisa.Http.Dto.PesquisaGetDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/unidades-negocio/{unidadeNegocioId}/veiculos/{veiculoId}/laudos/pendencias": {
            "get": {
                "tags": [
                    "UnidadesNegocio"
                ],
                "summary": "Obtém as pendências e laudos de um veículos por unidade de negócio",
                "operationId": "domain_registration_UnidadesNegocio-GetUnidadesNegocioVeiculosLaudosPendencias-GET-unidadeNegocioId-veiculoId-motoristaId-version-v{version}/unidades-negocio/{unidadeNegocioId}/veiculos/{veiculoId}/laudos/pendencias",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "unidadeNegocioId",
                        "in": "path",
                        "description": "Id da Unidade de negócio",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "veiculoId",
                        "in": "path",
                        "description": "Id do veículo",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "motoristaId",
                        "in": "query",
                        "description": "Id do motorista",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pendências encontradas.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Veículo não encontrado.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/unidades-negocio/{unidadeNegocioId}/motoristas/{motoristaId}/treinamentos/por-veiculo/{veiculoId}/pendencias": {
            "get": {
                "tags": [
                    "UnidadesNegocio"
                ],
                "summary": "Obtém as pendências de um motorista referente a treinamentos e laudos",
                "operationId": "domain_registration_UnidadesNegocio-GetUnidadeNegocioTreinamentosMotoristasPorTipoVeiculoPendencias-GET-unidadeNegocioId-motoristaId-veiculoId-version-v{version}/unidades-negocio/{unidadeNegocioId}/motoristas/{motoristaId}/treinamentos/por-veiculo/{veiculoId}/pendencias",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "unidadeNegocioId",
                        "in": "path",
                        "description": "Id da Unidade de negócio",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "motoristaId",
                        "in": "path",
                        "description": "Id do motorista",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "veiculoId",
                        "in": "path",
                        "description": "Id do veículo",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pendências encontradas.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Veículo não encontrado.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/unidades-negocio/{unidadeNegocioId}/motoristas/por-cpf/{cpf}": {
            "get": {
                "tags": [
                    "UnidadesNegocio"
                ],
                "summary": "Obtém os dados de um motorista de uma Unidade de Negócio através de seu CPF",
                "operationId": "domain_registration_UnidadesNegocio-GetUnidadesNegocioMotoristasPorCpf-GET-unidadeNegocioId-cpf-version-v{version}/unidades-negocio/{unidadeNegocioId}/motoristas/por-cpf/{cpf}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "unidadeNegocioId",
                        "in": "path",
                        "description": "Id da Unidade de negócio",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "cpf",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Unidade de negócio solicitada.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Motorista.Http.Dto.MotoristaGetDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor. / UnidadeNegocio ou Motorista não encontrados",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/unidades-negocio/{unidadeNegocioId}/motoristas/por-cpf/{cpf}/tipo-autenticacao": {
            "get": {
                "tags": [
                    "UnidadesNegocio"
                ],
                "summary": "Obtém o tipo de autenticação de um motorista de uma Unidade de Negócio através de seu CPF",
                "operationId": "domain_registration_UnidadesNegocio-MotoristaPorCPF_UnidadeNegocio_GetTipoAutenticacaoAsync-GET-unidadeNegocioId-cpf-version-v{version}/unidades-negocio/{unidadeNegocioId}/motoristas/por-cpf/{cpf}/tipo-autenticacao",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "unidadeNegocioId",
                        "in": "path",
                        "description": "Id da Unidade de negócio",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "cpf",
                        "in": "path",
                        "description": "CPF do motorista",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Objeto com as flags flgUsaPIN e flgBiometriaApto.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Motorista.Http.Dto.MotoristaGetDto"
                        }
                    },
                    "404": {
                        "description": "Não foi encontrado o motorista para essa unidade de negócio.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/unidades-negocio/{unidadeId}/totens": {
            "get": {
                "tags": [
                    "UnidadesNegocio"
                ],
                "summary": "Obtém a lista de totens da unidade",
                "operationId": "domain_registration_UnidadesNegocio-GetUnidadeNegocioTotens-GET-unidadeId-$skip-$top-version-v{version}/unidades-negocio/{unidadeId}/totens",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "unidadeId",
                        "in": "path",
                        "description": "Id da Unidade de negócio",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Opcional. Quantidade de registros da lista a serem puladas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Opcional. Quantidade de registros da lista a serem retornadas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 1000
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de totens solicitada.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.ParametrizacaoTotem.Http.Dto.TotemGetDto"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/unidades-negocio/{unidadeId}/totens/$count": {
            "get": {
                "tags": [
                    "UnidadesNegocio"
                ],
                "summary": "Obtém a quantidade de totens da unidade",
                "operationId": "domain_registration_UnidadesNegocio-GetUnidadeNegocioTotensCount-GET-unidadeId-version-v{version}/unidades-negocio/{unidadeId}/totens/$count",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "unidadeId",
                        "in": "path",
                        "description": "Id da Unidade de negócio",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Total de de totens para a unidade.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceCountDto"
                        }
                    },
                    "404": {
                        "description": "Não foi encontrado totem para a unidade de negócio com o Id fornecido.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/unidades-negocio/{unidadeNegocioId}/totens/por-descricao/{descricao}/parametrizacoes/tipos-carregamento/{tipo}/$count": {
            "get": {
                "tags": [
                    "UnidadesNegocio"
                ],
                "summary": "Obtém a quantidade de registros da parametrização do Totem por tipo de carregamento",
                "operationId": "domain_registration_UnidadesNegocio-GetTotensUnidadeNegocioPorDescricaoParametrizacoesTiposCarregamentoPorTipoCount-GET-unidadeNegocioId-descricao-tipo-version-v{version}/unidades-negocio/{unidadeNegocioId}/totens/por-descricao/{descricao}/parametrizacoes/tipos-carregamento/{tipo}/$count",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "unidadeNegocioId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "descricao",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipo",
                        "in": "path",
                        "description": "Tipo de carregamento",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Total de registros",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceCountDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno no servidor / Totem/Unidade de negócio não encontrado",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/unidades-negocio/{unidadeNegocioId}/totens/por-descricao/{descricao}/parametrizacoes/tipos-carregamento/{tipo}": {
            "get": {
                "tags": [
                    "UnidadesNegocio"
                ],
                "summary": "Obtém a parametrização do Totem por tipo de carregamento",
                "operationId": "domain_registration_UnidadesNegocio-GetTotensParametrizacoesTiposCarregamentoPorTipo-GET-unidadeNegocioId-descricao-tipo-$skip-$top-version-v{version}/unidades-negocio/{unidadeNegocioId}/totens/por-descricao/{descricao}/parametrizacoes/tipos-carregamento/{tipo}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "unidadeNegocioId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "descricao",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "tipo",
                        "in": "path",
                        "description": "Tipo de carregamento",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Opcional. Quantidade de registros da lista a serem puladas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Opcional. Quantidade de registros da lista a serem retornadas em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 10
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Parametrização do totem por tipo de carregamento",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.ParametrizacaoTotem.Http.Dto.ParametrizacaoTotemTipoCarregamentoGetDto"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno no servidor / Totem/Unidade de negócio não encontrado",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/unidades-negocio/{unidadeNegocioId}/regioes": {
            "get": {
                "tags": [
                    "UnidadesNegocio"
                ],
                "summary": "Obtém a lista de regiões por unidade de negócio",
                "operationId": "domain_registration_UnidadesNegocio-GetUnidadesNegocioRegioes-GET-unidadeNegocioId-version-v{version}/unidades-negocio/{unidadeNegocioId}/regioes",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "unidadeNegocioId",
                        "in": "path",
                        "description": "Id da Unidade de negócio",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de regiões da unidade de negócio",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.Regiao.Http.Dto.RegiaoTotemGetDto"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/unidades-negocio/{unidadeNegocioId}/regioes/por-motorista/{motoristaId}": {
            "get": {
                "tags": [
                    "UnidadesNegocio"
                ],
                "summary": "Obtém regiões do motorista por unidade de negócio",
                "operationId": "domain_registration_UnidadesNegocio-GetUnidadesNegocioRegioesPorMotorista-GET-unidadeNegocioId-motoristaId-version-v{version}/unidades-negocio/{unidadeNegocioId}/regioes/por-motorista/{motoristaId}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "unidadeNegocioId",
                        "in": "path",
                        "description": "Id da Unidade de negócio",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "motoristaId",
                        "in": "path",
                        "description": "Id do motorista",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista com regiões do motorista.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.RegiaoMotorista.Http.Dto.RegiaoMotoristaTotemGetDto"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/unidades-negocio/{id}/horario-atendimento": {
            "get": {
                "tags": [
                    "UnidadesNegocio"
                ],
                "operationId": "domain_registration_UnidadesNegocio-GetHorariosAtendimento-GET-id-version-v{version}/unidades-negocio/{id}/horario-atendimento",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Domain.UnidadeNegocio.Model.HorarioAtendimento.HorarioAtendimentoUnidadeDto"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/unidades-negocio/markup-valor-total-frete": {
            "get": {
                "tags": [
                    "UnidadesNegocio"
                ],
                "operationId": "domain_registration_UnidadesNegocio-GetMarkupValorTotalFrete-GET-idUnidadeNegocio-init-take-version-v{version}/unidades-negocio/markup-valor-total-frete",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "idUnidadeNegocio",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "init",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 1
                    },
                    {
                        "name": "take",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 100
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Domain.UnidadeNegocio.Model.MarkupValorTotalFrete.MarkupValorTotalFrete"
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "UnidadesNegocio"
                ],
                "operationId": "domain_registration_UnidadesNegocio-InsertMarkup-POST-markupDTO-version-v{version}/unidades-negocio/markup-valor-total-frete",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "markupDTO",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.UnidadesNegocio.Dto.MarkupValorTotalFreteDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/unidades-negocio/markup-valor-total-frete/{id}": {
            "get": {
                "tags": [
                    "UnidadesNegocio"
                ],
                "operationId": "domain_registration_UnidadesNegocio-GetNextMarkupValorTotalFrete-GET-id-version-v{version}/unidades-negocio/markup-valor-total-frete/{id}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Domain.UnidadeNegocio.Model.MarkupValorTotalFrete.MarkupValorTotalFrete"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "UnidadesNegocio"
                ],
                "operationId": "domain_registration_UnidadesNegocio-UpdateMarkupValorTotalFrete-PUT-id-markupDTO-version-v{version}/unidades-negocio/markup-valor-total-frete/{id}",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "markupDTO",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.UnidadesNegocio.Dto.MarkupValorTotalFreteDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "UnidadesNegocio"
                ],
                "operationId": "domain_registration_UnidadesNegocio-DeleteMarkupValorTotalFrete-DELETE-id-version-v{version}/unidades-negocio/markup-valor-total-frete/{id}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/unidades-negocio/markup-valor-total-frete/count": {
            "get": {
                "tags": [
                    "UnidadesNegocio"
                ],
                "operationId": "domain_registration_UnidadesNegocio-GetCountMarkupValorTotalFrete-GET-idUnidadeNegocio-version-v{version}/unidades-negocio/markup-valor-total-frete/count",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "idUnidadeNegocio",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/unidades-negocio/{id}/markup-valor-total-frete": {
            "get": {
                "tags": [
                    "UnidadesNegocio"
                ],
                "operationId": "domain_registration_UnidadesNegocio-GetNextMarkupValorTotalFreteByUnidadeNegocio-GET-id-version-v{version}/unidades-negocio/{id}/markup-valor-total-frete",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Domain.UnidadeNegocio.Model.MarkupValorTotalFrete.MarkupValorTotalFrete"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/unidades-negocio/simplificadas/por-motoristacpf/{cpf}": {
            "get": {
                "tags": [
                    "UnidadesNegocio"
                ],
                "summary": "Lista as Unidades de Negócio em modelo simplificado para motoristas assiciados com MOVC",
                "operationId": "domain_registration_UnidadesNegocio-GetUnidadesComMOVCAssociadaComMotorista-GET-cpf-version-v{version}/unidades-negocio/simplificadas/por-motoristacpf/{cpf}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpf",
                        "in": "path",
                        "description": "CPF do motorista",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de Unidades de Negócio simplificadas.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.UnidadeNegocio.Http.Dto.UnidadeNegocioSimplifiedGetDto"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/unidades-negocio/{unidadeNegocioId}/totems/possui-palete-manual": {
            "get": {
                "tags": [
                    "UnidadesNegocio"
                ],
                "operationId": "domain_registration_UnidadesNegocio-VerificarTotemComPaleteManual-GET-unidadeNegocioId-version-v{version}/unidades-negocio/{unidadeNegocioId}/totems/possui-palete-manual",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "unidadeNegocioId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/usuarios/login": {
            "post": {
                "tags": [
                    "Usuarios"
                ],
                "summary": "Autentica um usuário no portal cadastro de motorista",
                "operationId": "domain_registration_Usuarios-Login-POST-usuariosLoginPostDto-version-v{version}/usuarios/login",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "usuariosLoginPostDto",
                        "in": "body",
                        "description": "Dados do login do usuario",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Usuarios.Dto.UsuariosLoginPostDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "O histórico foi atualizado."
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "404": {
                        "description": "Usuário não autenticado."
                    }
                }
            }
        },
        "/usuarios/por-cpf-cnpj/{cpfcnpj}/existe": {
            "get": {
                "tags": [
                    "Usuarios"
                ],
                "summary": "Verifica se o usuario existe no Portal Cadastro de Motorista",
                "operationId": "domain_registration_Usuarios-GetUsuarioPorCnpjCpf-GET-cpfcnpj-version-v{version}/usuarios/por-cpf-cnpj/{cpfcnpj}/existe",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpfcnpj",
                        "in": "path",
                        "description": "Cpf/Cnpj válido do usuário",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Usuarios.Dto.UsuariosGetExisteDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "204": {
                        "description": "Flag indicando se cpf já existe."
                    },
                    "404": {
                        "description": "Usuário não autenticado."
                    }
                }
            }
        },
        "/usuarios/por-cpf-cnpj/{cpfcnpj}/telefone/{telefone}/existe": {
            "get": {
                "tags": [
                    "Usuarios"
                ],
                "summary": "Verifica se o usuario existe no Portal Cadastro de Motorista",
                "operationId": "domain_registration_Usuarios-GetUsuarioPorCnpjCpfETelefone-GET-cpfcnpj-telefone-version-v{version}/usuarios/por-cpf-cnpj/{cpfcnpj}/telefone/{telefone}/existe",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpfcnpj",
                        "in": "path",
                        "description": "Cpf válido do usuário",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "telefone",
                        "in": "path",
                        "description": "Telefone válido do usuário sem o codigo do pais, apenas DDD+Numero",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "O histórico foi atualizado."
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "404": {
                        "description": "Usuário não autenticado."
                    }
                }
            }
        },
        "/usuarios": {
            "get": {
                "tags": [
                    "Usuarios"
                ],
                "summary": "Busca de forma personalizada os usuários",
                "operationId": "domain_registration_Usuarios-GetUsuariosFilter-GET-$filter-$skip-$top-version-v{version}/usuarios",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Opcional. Filtros OData para filtar a lista de usuários",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$skip",
                        "in": "query",
                        "description": "Opcional. Quantidade de usuários da lista a serem pulados em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "$top",
                        "in": "query",
                        "description": "Opcional. Quantidade de usuários da lista a serem retornados em eventual paginação",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações retornadas com sucesso.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Usuarios.Dto.UsuariosGetDto"
                        }
                    },
                    "404": {
                        "description": "Usuário não encontrado.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Usuarios"
                ],
                "summary": "Cadastra um novo usuário no portal cadastro de motorista",
                "operationId": "domain_registration_Usuarios-PostAdicionarUsuario-POST-usuariosAddPostDto-version-v{version}/usuarios",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "usuariosAddPostDto",
                        "in": "body",
                        "description": "Dados do usuário para cadastro ao portal do motorista",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.v2.Usuarios.Dto.UsuariosAddPostDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuário cadastrado com Sucesso."
                    },
                    "404": {
                        "description": "Usuário não encontrado.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/usuarios/login/por-id/{cpfCnpj}": {
            "post": {
                "tags": [
                    "Usuarios"
                ],
                "summary": "Efetua o login de forma personificada para usuários VC",
                "operationId": "domain_registration_Usuarios-LoginPorId-POST-cpfCnpj-version-v{version}/usuarios/login/por-id/{cpfCnpj}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpfCnpj",
                        "in": "path",
                        "description": "Cpf/Cnpj do usuário",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "O histórico foi atualizado."
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "404": {
                        "description": "Usuário não autenticado."
                    }
                }
            }
        },
        "/usuarios/alteracao-senha/{cpf}": {
            "post": {
                "tags": [
                    "Usuarios"
                ],
                "summary": "Reseta a senha usuario",
                "operationId": "domain_registration_Usuarios-AlterarSenhaUsuario-POST-cpf-modelnovaSenha-version-v{version}/usuarios/alteracao-senha/{cpf}",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpf",
                        "in": "path",
                        "description": "Cpf do usuário",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "modelnovaSenha",
                        "in": "body",
                        "description": "Nova senha",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Integration.Domain.AppMotorista.Model.Integration.UserResetPasswordModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Senha alterada com Sucesso."
                    },
                    "404": {
                        "description": "Usuário não encontrado.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ValidationErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/dnit-veiculo/por-codigo-dnit/{codigoDnit}": {
            "get": {
                "tags": [
                    "VeiculoDNIT"
                ],
                "summary": "Obtém o número de eixos disponíveis de acordo com o tipo de veiculo DNIT",
                "operationId": "domain_registration_VeiculoDNIT-GetCodigoDnit-GET-codigoDnit-version-v{version}/dnit-veiculo/por-codigo-dnit/{codigoDnit}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "codigoDnit",
                        "in": "path",
                        "description": "O codigo dnit",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações retornadas com sucesso.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Domain.DNIT.Model.VeiculoDNIT.DNITVeiculo"
                            }
                        }
                    },
                    "404": {
                        "description": "Transportadora não encontrada.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/dnit-veiculo/num-eixos/por-tipo/{tipoVeiculo}": {
            "get": {
                "tags": [
                    "VeiculoDNIT"
                ],
                "summary": "Obtém o número de eixos disponíveis de acordo com o tipo de veiculo DNIT",
                "operationId": "domain_registration_VeiculoDNIT-GetNumEixosPorTipoVeiculo-GET-tipoVeiculo-version-v{version}/dnit-veiculo/num-eixos/por-tipo/{tipoVeiculo}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "tipoVeiculo",
                        "in": "path",
                        "description": "Tipo do veiculo",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações retornadas com sucesso.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    },
                    "404": {
                        "description": "Transportadora não encontrada.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/dnit-veiculo/pbtc-veiculo/por-tipo/{tipoVeiculo}/por-num-eixos/{numEixos}": {
            "get": {
                "tags": [
                    "VeiculoDNIT"
                ],
                "summary": "Obtém os valores de PBTC disponíveis de acordo com o tipo de veiculo DNIT e o número de eixos",
                "operationId": "domain_registration_VeiculoDNIT-GetPbtcPorTipoVeiculo-GET-tipoVeiculo-numEixos-version-v{version}/dnit-veiculo/pbtc-veiculo/por-tipo/{tipoVeiculo}/por-num-eixos/{numEixos}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "tipoVeiculo",
                        "in": "path",
                        "description": "Tipo do veiculo",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "numEixos",
                        "in": "path",
                        "description": "Número de eixos",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações retornadas com sucesso.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    },
                    "404": {
                        "description": "Transportadora não encontrada.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/dnit-veiculo/codigo-dnit/tipo/{tipoVeiculo}/num-eixos/{numEixos}/pbtc/{pbtc}": {
            "get": {
                "tags": [
                    "VeiculoDNIT"
                ],
                "summary": "Obtém o código DNIT do veículo de acordo com tipo de veiculo, e o número de eixos, PBTC e tara",
                "operationId": "domain_registration_VeiculoDNIT-GetCodDnitVeiculo-GET-tipoVeiculo-numEixos-pbtc-version-v{version}/dnit-veiculo/codigo-dnit/tipo/{tipoVeiculo}/num-eixos/{numEixos}/pbtc/{pbtc}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "tipoVeiculo",
                        "in": "path",
                        "description": "Tipo do veiculo",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "numEixos",
                        "in": "path",
                        "description": "Número de eixos",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "pbtc",
                        "in": "path",
                        "description": "PBTC do veiculo",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações retornadas com sucesso.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Transportadora não encontrada.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/dnit-veiculo": {
            "get": {
                "tags": [
                    "VeiculoDNIT"
                ],
                "summary": "Obtém as composições da tabela DNIT com filtro de acordo com o tipo do veículo",
                "operationId": "domain_registration_VeiculoDNIT-GetVeiculoDNIT-GET-$filter1-$filter2-version-v{version}/dnit-veiculo",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "$filter1",
                        "in": "query",
                        "description": "Opcional. Filtros OData para filtar veículos por tipo",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "$filter2",
                        "in": "query",
                        "description": "Opcional. Filtros OData para filtar veículos por tipo",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações retornadas com sucesso.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.v2.VeiculoDNIT.Dto.ComposicaoVeiculoDNITGetDto"
                            }
                        }
                    },
                    "404": {
                        "description": "Composições não encontrada.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/dnit-veiculo/{tipoVeiculo}/{eixos}": {
            "get": {
                "tags": [
                    "VeiculoDNIT"
                ],
                "summary": "Obtém as composições da tabela DNIT de acordo com o tipo do veículo e os eixos",
                "operationId": "domain_registration_VeiculoDNIT-GetVeiculoDNITByTipoVeiculoENumEixos-GET-tipoVeiculo-eixos-version-v{version}/dnit-veiculo/{tipoVeiculo}/{eixos}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "tipoVeiculo",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "eixos",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações retornadas com sucesso.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.v2.VeiculoDNIT.Dto.ComposicaoVeiculoDNITGetDto"
                            }
                        }
                    },
                    "404": {
                        "description": "Composições não encontrada.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/dnit-veiculo/pendencias/por-unidadenegocio/{unidadeNegocioId}/por-composicao/{composicaoId}": {
            "get": {
                "tags": [
                    "VeiculoDNIT"
                ],
                "summary": "Obtém as pendências da composição do motorista",
                "operationId": "domain_registration_VeiculoDNIT-GetPendenciasPorComposicaoId-GET-unidadeNegocioId-composicaoId-version-v{version}/dnit-veiculo/pendencias/por-unidadenegocio/{unidadeNegocioId}/por-composicao/{composicaoId}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "unidadeNegocioId",
                        "in": "path",
                        "description": "ID da unidade de negócio",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "composicaoId",
                        "in": "path",
                        "description": "ID da composição",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações retornadas com sucesso.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.v2.VeiculoDNIT.Dto.ComposicaoVeiculoPendenciasDto"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/veiculos/{veiculoId}": {
            "get": {
                "tags": [
                    "Veiculos"
                ],
                "summary": "Obtém o veículo",
                "operationId": "domain_registration_Veiculos-GetVeiculosPorId-GET-veiculoId-version-v{version}/veiculos/{veiculoId}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "veiculoId",
                        "in": "path",
                        "description": "Id dveículo",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Veículo solicitado.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Veiculo.Http.Dto.VeiculoGetDto"
                        }
                    },
                    "404": {
                        "description": "Não foi encontrado o veículo com o Id fornecido.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/veiculos/por-placa/{placa}": {
            "get": {
                "tags": [
                    "Veiculos"
                ],
                "summary": "Obtém os dados de um veículo",
                "operationId": "domain_registration_Veiculos-GetVeiculoPorPlaca-GET-placa-version-v{version}/veiculos/por-placa/{placa}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "placa",
                        "in": "path",
                        "description": "Placa do veículo",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações retornadas com sucesso.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Veiculo.Http.Dto.VeiculoGetDto"
                        }
                    },
                    "404": {
                        "description": "Transportadora não encontrada.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/veiculos/por-placa/{placa}/composicao": {
            "get": {
                "tags": [
                    "Veiculos"
                ],
                "summary": "Obtém os dados de um veículo",
                "operationId": "domain_registration_Veiculos-GetComposicaoVeiculoPorPlaca-GET-placa-version-v{version}/veiculos/por-placa/{placa}/composicao",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "placa",
                        "in": "path",
                        "description": "Placa do veículo",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações retornadas com sucesso.",
                        "schema": {
                            "$ref": "#/definitions/Domain.ComposicaoVeiculo.Model.ComposicaoVeiculo"
                        }
                    },
                    "404": {
                        "description": "Transportadora não encontrada.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/veiculos/por-transportadora/{transportadoraId}/por-unidade-negocio/{unidadeNegocioId}/por-tipo-transporte/{tipoTransporte}/por-motorista-cpf/{cpfMotorista}": {
            "get": {
                "tags": [
                    "Veiculos"
                ],
                "summary": "Obtém os veículos de uma transportadora, por unidade de negócio, para listar no momento da marcação.",
                "operationId": "domain_registration_Veiculos-GetVeiculosPorTransportadoraUnidadeTipoTransporteMotorista-GET-transportadoraId-unidadeNegocioId-tipoTransporte-cpfMotorista-version-v{version}/veiculos/por-transportadora/{transportadoraId}/por-unidade-negocio/{unidadeNegocioId}/por-tipo-transporte/{tipoTransporte}/por-motorista-cpf/{cpfMotorista}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "transportadoraId",
                        "in": "path",
                        "description": "Id do transportadora",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "unidadeNegocioId",
                        "in": "path",
                        "description": "Id da Unidade de negócio",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "tipoTransporte",
                        "in": "path",
                        "description": "Indica o tipo de transporte",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7
                        ]
                    },
                    {
                        "name": "cpfMotorista",
                        "in": "path",
                        "description": "Cpf do motorista que está realizando a marcação",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista com veículos da transportadora.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Application.Interfaces.Veiculo.Http.Dto.MotoristaParceiro.VeiculoMotoristaParceiroGetDto"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor / UnidadeNegocio, Motorista ou Transportadora não encontrados",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "404": {
                        "description": "Transportadora não encontrada."
                    }
                }
            }
        },
        "/veiculos/por-placa/{placa}/situacao-cadastral/detalhada": {
            "get": {
                "tags": [
                    "Veiculos"
                ],
                "operationId": "domain_registration_Veiculos-GetSituacaoCadastralDetalhadaVeiculo-GET-placa-version-v{version}/veiculos/por-placa/{placa}/situacao-cadastral/detalhada",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "placa",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Domain.SemaforoSituacaoCadastral.Model.SemaforoVeiculoDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto"
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/integracao-motorista-tms/proximos": {
            "get": {
                "tags": [
                    "IntegracaoMotoristaTms"
                ],
                "summary": "Obtém os próximos CPFs/CNPJs da fila",
                "operationId": "integration_sap_IntegracaoMotoristaTms-Proximos-GET-count-version-v{version}/integracao-motorista-tms/proximos",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Quantidade de itens, valor padrão de 100, valor máximo de 5000, minimo de 1",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 100
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array com todos os CPF/CNPJ solicitado.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/integracao-motorista-tms/{cpfCnpj}/detalhes": {
            "get": {
                "tags": [
                    "IntegracaoMotoristaTms"
                ],
                "summary": "Obtém os detalhes de um motorista",
                "operationId": "integration_sap_IntegracaoMotoristaTms-Detalhes-GET-cpfCnpj-version-v{version}/integracao-motorista-tms/{cpfCnpj}/detalhes",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cpfCnpj",
                        "in": "path",
                        "description": "CPF ou CNPJ do motorista",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dados do motorista solicitado.",
                        "schema": {
                            "$ref": "#/definitions/MarcacaoDto"
                        }
                    },
                    "404": {
                        "description": "Dados não encontrados."
                    }
                }
            }
        },
        "/veiculos/{veiculoId}/proprietario": {
            "get": {
                "tags": [
                    "Veiculos"
                ],
                "summary": "Retorna o proprietário do veículo",
                "operationId": "domain_registration_Veiculos-Proprietario-GET-veiculoId-version-v{version}/veiculos/{veiculoId}/proprietario",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "veiculoId",
                        "in": "path",
                        "description": "ID do veículo.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações retornadas com sucesso.",
                        "schema": {
                            "$ref": "#/definitions/Domain.Transportadora.Model.Transportadora"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    },
                    "404": {
                        "description": "Registro não encontrado."
                    }
                }
            }
        },
        "/transportadoras/{transportadoraId}/is-movc": {
            "get": {
                "tags": [
                    "Transportadoras"
                ],
                "summary": "Returna true/false se a transportadora informada é uma MOVC",
                "operationId": "domain_registration_Transportadoras-IsMovc-GET-transportadoraId-version-v{version}/transportadoras/{transportadoraId}/is-movc",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "transportadoraId",
                        "in": "path",
                        "description": "ID da transportadora.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Informações retornadas com sucesso.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Transportadora.Http.Dto.TransportadoraGetPagedDto"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/Application.Interfaces.Common.Dto.UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/integracoes/apisul/portarias": {
            "get": {
                "tags": [
                    "IntegracoesApisulHub"
                ],
                "summary": "Recupera a lista de portarias para integração",
                "operationId": "integration_sap_IntegracoesApisulHub-ListarPortariasParaIntegracaoAsync-GET-version-v{version}/integracoes/apisul/portarias",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Lista de portarias.",
                        "schema": {
                            "uniqueItems": false,
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/integracoes/apisul/portaria/{numeroPortaria}": {
            "get": {
                "tags": [
                    "IntegracoesApisulHub"
                ],
                "summary": "Recupera a marcação através do número da portaria",
                "operationId": "integration_sap_IntegracoesApisulHub-BuscarMarcacaoPorPortariaAsync-GET-numeroPortaria-version-v{version}/integracoes/apisul/portaria/{numeroPortaria}",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "numeroPortaria",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Objeto da marcação.",
                        "schema": {
                            "$ref": "#/definitions/MarcacaoApisulDTO"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/UnknownErrorDto"
                        }
                    }
                }
            }
        },
        "/integracoes/apisul/portaria/retorno": {
            "post": {
                "tags": [
                    "IntegracoesApisulHub"
                ],
                "summary": "Atualiza o status do processamento",
                "operationId": "integration_sap_IntegracoesApisulHub-RetornoMarcacaoPorPortariaAsync-POST-dto-version-v{version}/integracoes/apisul/portaria/retorno",
                "consumes": [
                    "application/json-patch+json",
                    "application/json",
                    "text/json",
                    "application/*+json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dto",
                        "in": "body",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MarcacaoRetornoApisulDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "500": {
                        "description": "Erro interno do servidor.",
                        "schema": {
                            "$ref": "#/definitions/UnknownErrorDto"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "EmailModel": {
            "type": "object",
            "properties": {
                "to": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subject": {
                    "type": "string"
                },
                "body": {
                    "type": "string"
                },
                "isBodyHtml": {
                    "type": "boolean"
                },
                "cCo": {
                    "type": "string"
                },
                "emailImageContents": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EmailImageContentModel"
                    }
                },
                "attachments": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EmailAttachmentModel"
                    }
                }
            }
        },
        "EmailImageContentModel": {
            "type": "object",
            "properties": {
                "path": {
                    "type": "string"
                },
                "contentId": {
                    "type": "string"
                }
            }
        },
        "EmailAttachmentModel": {
            "type": "object",
            "properties": {
                "attachmentStream": {
                    "$ref": "#/definitions/MemoryStream"
                },
                "attachmentContentType": {
                    "type": "string"
                },
                "attachmentName": {
                    "type": "string"
                }
            }
        },
        "MemoryStream": {
            "type": "object",
            "properties": {
                "canRead": {
                    "type": "boolean",
                    "readOnly": true
                },
                "canSeek": {
                    "type": "boolean",
                    "readOnly": true
                },
                "canWrite": {
                    "type": "boolean",
                    "readOnly": true
                },
                "capacity": {
                    "format": "int32",
                    "type": "integer"
                },
                "length": {
                    "format": "int64",
                    "type": "integer",
                    "readOnly": true
                },
                "position": {
                    "format": "int64",
                    "type": "integer"
                },
                "canTimeout": {
                    "type": "boolean",
                    "readOnly": true
                },
                "readTimeout": {
                    "format": "int32",
                    "type": "integer"
                },
                "writeTimeout": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "MotoristaRegiaoPostDto": {
            "description": "Payload de inserção da Associação do Motorista e Região para o Hub de Serviços / Gestão de Pátio",
            "type": "object",
            "properties": {
                "COD_UNIDADE": {
                    "description": "Código da Unidade de Negócio no SAP",
                    "type": "string"
                },
                "CPF": {
                    "description": "CPF do motorista associado",
                    "type": "string"
                },
                "REGION": {
                    "description": "Código da Região no SAP",
                    "type": "string"
                },
                "ROUTE": {
                    "description": "Código da Rota/Itinerário no SAP",
                    "type": "string"
                },
                "DATA_TIMESTAMP": {
                    "description": "Data do timestamp",
                    "type": "string"
                },
                "HORA_TIMESTAMP": {
                    "description": "Hora do timestamp",
                    "type": "string"
                }
            }
        },
        "ValidationErrorDto": {
            "description": "Descreve um erro de validação",
            "type": "object",
            "properties": {
                "resourceErrors": {
                    "description": "Erros de validação encontrados",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "UnknownErrorDto": {
            "description": "Descreve um erro interno desconhecido",
            "type": "object",
            "properties": {
                "error": {
                    "description": "Descrição do erro",
                    "type": "string"
                },
                "rawResponse": {
                    "description": "Detalhes do erro",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "StatusPortariaResponseDto": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "EntregaNfPostDto": {
            "type": "object",
            "properties": {
                "numeroNF": {
                    "description": "Número da nota fiscal",
                    "type": "string"
                },
                "serieNF": {
                    "description": "Serie da nota fiscal",
                    "type": "string"
                },
                "dataEmissaoNF": {
                    "format": "date-time",
                    "description": "Data de emissão da nota fiscal",
                    "type": "string"
                },
                "codigoAcessoNF": {
                    "description": "Código de acesso nota fiscal",
                    "type": "string"
                },
                "cpfMotorista": {
                    "description": "CPF da Motorista",
                    "type": "string"
                },
                "statusEntrega": {
                    "description": "Status da entrega da nota fiscal",
                    "type": "string"
                }
            }
        },
        "CifRetiraPostDto": {
            "description": "Payload de inserção do CIF Retira para o Hub de Serviços / Gestão de Pátio",
            "type": "object",
            "properties": {
                "COD_EMPRESA": {
                    "description": "Código da Empresa no SAP",
                    "type": "string"
                },
                "COD_UNIDADE": {
                    "description": "Código da Unidade de Negócio no SAP",
                    "type": "string"
                },
                "COD_CLIENTE": {
                    "description": "Código do Cliente no SAP",
                    "type": "string"
                },
                "COD_TRANSP": {
                    "description": "Código da Transportadora no SAP",
                    "type": "string"
                },
                "PLACA_CAVALO": {
                    "description": "Placa do Cavalo",
                    "type": "string"
                },
                "DATA_TIMESTAMP": {
                    "description": "Data do timestamp",
                    "type": "string"
                },
                "HORA_TIMESTAMP": {
                    "description": "Hora do timestamp",
                    "type": "string"
                }
            }
        },
        "CifRetiraPermanentePostDto": {
            "description": "Payload de inserção do CIF Retira Permanente para o Hub de Serviços / Gestão de Pátio",
            "type": "object",
            "properties": {
                "COD_EMPRESA": {
                    "description": "Código da Empresa no SAP",
                    "type": "string"
                },
                "COD_UNIDADE": {
                    "description": "Código da Unidade de Negócio no SAP",
                    "type": "string"
                },
                "COD_CLIENTE": {
                    "description": "Código do Cliente no SAP",
                    "type": "string"
                },
                "DATA_TIMESTAMP": {
                    "description": "Data do timestamp",
                    "type": "string"
                },
                "HORA_TIMESTAMP": {
                    "description": "Hora do timestamp",
                    "type": "string"
                }
            }
        },
        "ClientePostDto": {
            "description": "Payload de inserção do Cliente VIP para o Hub de Serviços / Gestão de Pátio",
            "type": "object",
            "properties": {
                "COD_CLIENTE": {
                    "description": "Código do Cliente no SAP",
                    "type": "string"
                },
                "NOME": {
                    "description": "Nome do Cliente no SAP",
                    "type": "string"
                },
                "CNPJ": {
                    "description": "CNPJ do Cliente no SAP",
                    "type": "string"
                },
                "COD_EMPRESA": {
                    "description": "Código da Empresa no SAP",
                    "type": "string"
                },
                "COD_UNIDADE": {
                    "description": "Código da Unidade de Negócio no SAP",
                    "type": "string"
                },
                "DATA_TIMESTAMP": {
                    "description": "Data do timestamp",
                    "type": "string"
                },
                "HORA_TIMESTAMP": {
                    "description": "Hora do timestamp",
                    "type": "string"
                }
            }
        },
        "ItinerarioPostDto": {
            "description": "Payload de inserção do Itinerário para o Hub de Serviços / Gestão de Pátio",
            "type": "object",
            "properties": {
                "COD_UNIDADE": {
                    "description": "Código da Unidade de Negócio de Origem da Rota no SAP",
                    "type": "string"
                },
                "REGION": {
                    "description": "Código da Região no SAP",
                    "type": "string"
                },
                "ROUTE": {
                    "description": "Código da Rota/Itinerário no SAP",
                    "type": "string"
                },
                "ROUTE_DESC": {
                    "description": "Descrição da Rota/Itinerário no SAP",
                    "type": "string"
                },
                "DISTANCIA": {
                    "description": "Distância da Rora",
                    "type": "string"
                },
                "ZONE": {
                    "description": "Código da Zona de Transporte da Rota no SAP",
                    "type": "string"
                },
                "ZONE_DESC": {
                    "description": "Descrição da Zona de Transporte da Rota no SAP",
                    "type": "string"
                },
                "PAIS": {
                    "description": "Código do País no SAP",
                    "type": "string"
                },
                "DATA_TIMESTAMP": {
                    "description": "Data do timestamp",
                    "type": "string"
                },
                "HORA_TIMESTAMP": {
                    "description": "Hora do timestamp",
                    "type": "string"
                }
            }
        },
        "CancelarPortariaPostDto": {
            "description": "Payload de Cancelamento de Portaria no Hub de Serviços / Gestão de Pátio",
            "type": "object",
            "properties": {
                "NR_PORTARIA": {
                    "description": "Número da Portaria do SAP à ser cancelada",
                    "type": "string"
                }
            }
        },
        "RetornoAssociarMarcacaoPostDto": {
            "description": "Payload de Retorno de Associação de Marcação realizada no SAP pelo Hub de Serviços / Gestão de Pátio",
            "type": "object",
            "properties": {
                "ID_MARC": {
                    "description": "ID da Marcação no Hub de Serviços / Gestão de Pátio",
                    "type": "string"
                },
                "NR_PORTARIA": {
                    "description": "Número da Portaria do SAP",
                    "type": "string"
                },
                "MENSAGEM": {
                    "description": "Mensagem do SAP relativa à esta associação",
                    "type": "string"
                },
                "KMTOTAL": {
                    "description": "Quilometragem total do frete",
                    "type": "string"
                },
                "VALORTOTAL": {
                    "description": "Valor total do frete",
                    "type": "string"
                },
                "REMESSAS": {
                    "description": "Lista de Remessas associadas pelo SAP à esta Marcação",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AssociarRetornoItemRemessaPostDto"
                    }
                },
                "ITINERARIOSVIAGEM": {
                    "description": "Lista de Itinerários de Viagem associados pelo SAP à esta Marcação",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AssociarRetornoItinerarioViagemPostDto"
                    }
                }
            }
        },
        "AssociarRetornoItemRemessaPostDto": {
            "description": "Payload de Associação de Remessa à Marcação realizada pelo SAP para o Hub de Serviços / Gestão de Pátio",
            "type": "object",
            "properties": {
                "NUM_REMESSA": {
                    "description": "Número da Remessa no SAP",
                    "type": "string"
                },
                "NUM_PEDIDO": {
                    "description": "Número do Pedido no SAP",
                    "type": "string"
                },
                "ITEM_REMESSA": {
                    "description": "Item da Remessa",
                    "type": "string"
                },
                "COD_PRODUTO": {
                    "description": "Código do Produto no SAP",
                    "type": "string"
                },
                "DESC_PRODUTO": {
                    "description": "Descrição do Produto no SAP",
                    "type": "string"
                },
                "PESO": {
                    "description": "Peso do item da remessa",
                    "type": "string"
                },
                "QUANTIDADE": {
                    "description": "Quantidade do item da remessa",
                    "type": "string"
                },
                "UN_MEDIDA": {
                    "description": "Unidade de Medida do item da remessa",
                    "type": "string"
                },
                "COD_CLIENTE": {
                    "description": "Código do Cliente no SAP",
                    "type": "string"
                },
                "nomecliente": {
                    "type": "string"
                },
                "logradouro": {
                    "type": "string"
                },
                "numero": {
                    "type": "string"
                },
                "complemento": {
                    "type": "string"
                },
                "bairro": {
                    "type": "string"
                },
                "cep": {
                    "type": "string"
                },
                "kmtotal": {
                    "type": "string"
                },
                "uf": {
                    "type": "string"
                },
                "latitude": {
                    "type": "string"
                },
                "longitude": {
                    "type": "string"
                },
                "HAS_MUNCK": {
                    "type": "string"
                },
                "HAS_CHAPA": {
                    "description": "Flag indicando se é necessário Chapa para o transporte desta remessa",
                    "type": "string"
                },
                "HAS_COMPRESSOR": {
                    "description": "Flag indicando se é necessário Compressor no caminhão para o transporte desta remessa",
                    "type": "string"
                },
                "HAS_DESC_FUM": {
                    "description": "Flag indicando se é necessário realizar Descarga na Fumaça para esta remessa",
                    "type": "string"
                },
                "CIDADE": {
                    "description": "Cidade de destino da remessa",
                    "type": "string"
                }
            }
        },
        "AssociarRetornoItinerarioViagemPostDto": {
            "description": "Payload de Associação de Itinerário de Viagem à Marcação realizada pelo SAP para o Hub de Serviços / Gestão de Pátio",
            "type": "object",
            "properties": {
                "ROUTE": {
                    "description": "Código da Rota/Itinerário no SAP",
                    "type": "string"
                },
                "ROUTE_DESC": {
                    "description": "Descrição da Rota/Itinerário no SAP",
                    "type": "string"
                }
            }
        },
        "RetornoCancelarAssocPostDto": {
            "description": "Payload de Retorno de Cancelamento de Associação de Marcação realizada no SAP pelo Hub de Serviços / Gestão de Pátio",
            "type": "object",
            "properties": {
                "COD_UNIDADE": {
                    "description": "Código da Unidade de Negócio no SAP",
                    "type": "string"
                },
                "ID_MARC": {
                    "description": "ID da Marcação no Hub de Serviços / Gestão de Pátio",
                    "type": "string"
                },
                "CODE": {
                    "description": "Código de retorno do SAP",
                    "type": "string"
                },
                "MENSAGEM": {
                    "description": "Mensagem de retorno do SAP",
                    "type": "string"
                }
            }
        },
        "UpdateStatusPortariaCommPostDto": {
            "description": "Payload de Atualização de Status de Portaria realizada no SAP para o Hub de Serviços / Gestão de Pátio",
            "type": "object",
            "properties": {
                "NR_PORTARIA": {
                    "description": "Número da portaria no SAP",
                    "type": "string"
                },
                "COD_STATUS": {
                    "description": "Novo código de status da portaria no SAP",
                    "type": "string"
                },
                "DATA": {
                    "description": "Data da atualização de status da portaria no SAP",
                    "type": "string"
                },
                "HORA": {
                    "description": "Hora da atualização do status da portaria no SAP",
                    "type": "string"
                }
            }
        },
        "MotoristaPostDto": {
            "type": "object",
            "properties": {
                "COD_EMPRESA": {
                    "description": "Código da Empresa no SAP ao qual o Motorista está vinculado",
                    "type": "string"
                },
                "CPF": {
                    "description": "CPF do Motorista",
                    "type": "string"
                },
                "NOME": {
                    "description": "Nome do Motorista",
                    "type": "string"
                },
                "DT_NASCIMENTO": {
                    "description": "Data de Nascimento do Motorista",
                    "type": "string"
                },
                "CNH": {
                    "description": "Número da CNH do Motorista",
                    "type": "string"
                },
                "VAL_CNH": {
                    "description": "Data de Validade da CNH do Motorista",
                    "type": "string"
                },
                "CATEG_CNH": {
                    "description": "Categoria da CNH do Motorista",
                    "type": "string"
                },
                "VAL_CAD": {
                    "description": "Data de validade do cadastro do Motorista",
                    "type": "string"
                },
                "CHECK_OK": {
                    "description": "Flag indicando se o Motorista possui algum problema cadastral ou bloqueio no SAP",
                    "type": "string"
                },
                "RUA": {
                    "description": "Rua do Endereço do Motorista",
                    "type": "string"
                },
                "NUMERO": {
                    "description": "Número do Endereço do Motorista",
                    "type": "string"
                },
                "BAIRRO": {
                    "description": "Bairro do Endereço do Motorista",
                    "type": "string"
                },
                "CEP": {
                    "description": "CEP do Endereço do Motorista",
                    "type": "string"
                },
                "CIDADE": {
                    "description": "Cidade do Endereço do Motorista",
                    "type": "string"
                },
                "UF": {
                    "description": "UF do Endereço do Motorista",
                    "type": "string"
                },
                "FONE_FIXO": {
                    "description": "Número de Telefone Fixo do Motorista",
                    "type": "string"
                },
                "FONE_CELULAR": {
                    "description": "Número de Telefone Celular Pessoal do Motorista",
                    "type": "string"
                },
                "CELULAR_TRANSP": {
                    "description": "Número de Telefone Celular da Transportadora do Motorista",
                    "type": "string"
                },
                "IMG_CNH": {
                    "description": "Imagem da CNH do Motorista",
                    "type": "string"
                },
                "IMG_TREIN_RODO": {
                    "description": "Imagem do comprovante de treinamento rodoviário",
                    "type": "string"
                },
                "IMG_TREIN_DIR_DEF": {
                    "description": "Imagem do comprovante de treinamento de direção defensiva",
                    "type": "string"
                },
                "IMG_TREIN_CARGA_SECA": {
                    "description": "Imagem do comprovante de treinamento carga seca",
                    "type": "string"
                },
                "IMG_TREIN_CACAMBA": {
                    "description": "Imagem do comprovante de treinamento caçamba",
                    "type": "string"
                },
                "IMG_TREIN_TANQUE": {
                    "description": "Imagem do comprovante de treinamento tanque",
                    "type": "string"
                },
                "bloqueios": {
                    "description": "Lista de bloqueios cadastrais do Motorista no SAP",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/KeyValueDto"
                    }
                },
                "treinamentos": {
                    "description": "Lista de treinamentos registrados no SAP para o Motorista",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/KeyValueDto"
                    }
                },
                "transportadoras": {
                    "description": "Lista de transportadoras as quais o Motorista está vinculado no SAP",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TransportadoraPostDto"
                    }
                },
                "ocorrencias": {
                    "description": "Lista de transportadoras as quais o Motorista está vinculado no SAP",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MotoristaOcorrenciaPostDto"
                    }
                },
                "DATA_TIMESTAMP": {
                    "description": "Data do timestamp",
                    "type": "string"
                },
                "HORA_TIMESTAMP": {
                    "description": "Hora do timestamp",
                    "type": "string"
                }
            }
        },
        "KeyValueDto": {
            "description": "Payload genérico para envio de pares chave-valor",
            "type": "object",
            "properties": {
                "CHAVE": {
                    "description": "Chave",
                    "type": "string"
                },
                "VALOR": {
                    "description": "Valor",
                    "type": "string"
                }
            }
        },
        "TransportadoraPostDto": {
            "description": "Payload para envio de dados de Transportadoras no SAP",
            "type": "object",
            "properties": {
                "COD_TRANSP": {
                    "description": "Código da Transportadora no SAP",
                    "type": "string"
                },
                "NOME": {
                    "description": "Nome da Transportadora",
                    "type": "string"
                },
                "CNPJ": {
                    "description": "CNPJ da Transportadora",
                    "type": "string"
                },
                "CPF": {
                    "description": "CPF da Transportadora",
                    "type": "string"
                }
            }
        },
        "MotoristaOcorrenciaPostDto": {
            "type": "object",
            "properties": {
                "DATA_OCORRENCIA": {
                    "description": "Data da ocorrência",
                    "type": "string"
                },
                "HORA_OCORRENCIA": {
                    "description": "Data da ocorrência",
                    "type": "string"
                },
                "DESC_OCORRENCIA": {
                    "description": "Descrição da ocorrência",
                    "type": "string"
                },
                "DIAS_BLOQUEIO": {
                    "format": "int32",
                    "description": "Dias de bloqueio",
                    "type": "integer"
                },
                "DATA_DESBLOQUEIO": {
                    "description": "Data da ocorrência",
                    "type": "string"
                },
                "HORA_DESBLOQUEIO": {
                    "description": "Data da ocorrência",
                    "type": "string"
                },
                "UNIDADE": {
                    "description": "local da ocorrencia",
                    "type": "string"
                }
            }
        },
        "PalletProdutoPostDto": {
            "description": "Payload de envio dos registros de Paletização de Produtos realizados no SAP",
            "type": "object",
            "properties": {
                "COD_UNIDADE": {
                    "description": "Código da Unidade de Negócio no SAP para a aqual foi feita a configuração de paletização",
                    "type": "string"
                },
                "COD_PRODUTO": {
                    "description": "Código de produto no SAP",
                    "type": "string"
                },
                "QUANTIDADE": {
                    "format": "double",
                    "description": "Quantidade de produto paletizada",
                    "type": "number"
                },
                "UN_MEDIDA": {
                    "description": "Unidade de medida do produto",
                    "type": "string"
                },
                "PESO_TOTAL": {
                    "description": "Peso total paletizado",
                    "type": "string"
                },
                "UN_PESO": {
                    "description": "Unidade de medida do peso paletizado",
                    "type": "string"
                },
                "DATA_TIMESTAMP": {
                    "description": "Data do timestamp",
                    "type": "string"
                },
                "HORA_TIMESTAMP": {
                    "description": "Hora do timestamp",
                    "type": "string"
                }
            }
        },
        "PedidoPostDto": {
            "description": "Payload contendo os dados de um pedido realizado no SAP",
            "type": "object",
            "properties": {
                "COD_UNIDADE": {
                    "description": "Código da Unidade de Negócio do Pedido no SAP",
                    "type": "string"
                },
                "NUM_PEDIDO": {
                    "description": "Número do Pedido no SAP",
                    "type": "string"
                },
                "NUM_REMESSA": {
                    "description": "Número da Remessa no SAP",
                    "type": "string"
                },
                "NUM_AGRUP": {
                    "description": "Número de Agrupamento de Remessa no SAP",
                    "type": "string"
                },
                "COD_PEDIDO_XML": {
                    "description": "Código de Pedido XML do SAP",
                    "type": "string"
                },
                "INCOTERMS": {
                    "description": "Incoterms",
                    "type": "string"
                },
                "TP_CARREGAMENTO": {
                    "description": "Tipo de Carregamento no SAP",
                    "type": "string"
                },
                "DT_PEDIDO": {
                    "description": "Data do Pedido no SAP",
                    "type": "string"
                },
                "COD_CLIENTE": {
                    "description": "Código do Cliente no SAP",
                    "type": "string"
                },
                "NOME_CLIENTE": {
                    "description": "Nome do Cliente no SAP",
                    "type": "string"
                },
                "CIDADE": {
                    "description": "Cidade do Pedido",
                    "type": "string"
                },
                "UF": {
                    "description": "UF do Pedido",
                    "type": "string"
                },
                "IS_CARGA_FECHADA": {
                    "description": "Flag indicando que o pedido se trata de uma craga fechada",
                    "type": "string"
                },
                "DESCARGA_FUMACA": {
                    "description": "Flag indicando que o pedido requer que seja realizada a \"Descarga na Fumaça\"",
                    "type": "string"
                },
                "DESCARGA_CLIENTE": {
                    "description": "Flag indicando que o pedido requer que seja realizada Descarga no Cliente",
                    "type": "string"
                },
                "IS_PEDIDO_COMBO": {
                    "description": "Flag indicando que o pedido é um \"Pedido Combo\"",
                    "type": "string"
                },
                "IS_PEDIDO_BALAO": {
                    "description": "Flag indicando que o pedido é um \"Pedido Balão\"",
                    "type": "string"
                },
                "item": {
                    "description": "Lista dos itens do pedido",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ItemPedidoPostDto"
                    }
                },
                "DATA_TIMESTAMP": {
                    "description": "Data do timestamp",
                    "type": "string"
                },
                "HORA_TIMESTAMP": {
                    "description": "Hora do timestamp",
                    "type": "string"
                }
            }
        },
        "ItemPedidoPostDto": {
            "description": "Payload contendo os dados de um item de pedido realizado no SAP",
            "type": "object",
            "properties": {
                "COD_PRODUTO": {
                    "description": "Código do produto no SAP",
                    "type": "string"
                },
                "DESC_PRODUTO": {
                    "description": "Descrição do produto no SAP",
                    "type": "string"
                },
                "QUANTIDADE": {
                    "description": "Quantidade do produto no item do pedido",
                    "type": "string"
                },
                "UNIDADE_MEDIDA": {
                    "description": "Unidade de medida do produto no item do pedido",
                    "type": "string"
                },
                "PESO_ITEM": {
                    "description": "Peso do item do pedido",
                    "type": "string"
                }
            }
        },
        "PontoCarregamentoPostDto": {
            "description": "Payload com os dados do Ponto de Carregamento registrado no SAP",
            "type": "object",
            "properties": {
                "PTO_CARREG": {
                    "description": "Código do Ponto de Carregamento registrado no SAP",
                    "type": "string"
                },
                "DESC_PTO_CARREG": {
                    "description": "Descrição do ponto de carregamento no SAP",
                    "type": "string"
                },
                "DATA_TIMESTAMP": {
                    "description": "Data do timestamp",
                    "type": "string"
                },
                "HORA_TIMESTAMP": {
                    "description": "Hora do timestamp",
                    "type": "string"
                }
            }
        },
        "ProdutoPostDto": {
            "description": "Payload contendo os dados do produto no SAP",
            "type": "object",
            "properties": {
                "COD_UNIDADE": {
                    "description": "Código da Unidade de Negócio no SAP",
                    "type": "string"
                },
                "COD_PRODUTO": {
                    "description": "Código do Produto no SAP",
                    "type": "string"
                },
                "DESC_PRODUTO": {
                    "description": "Descrição do Produto no SAP",
                    "type": "string"
                },
                "GRP_MERCADORIA": {
                    "description": "Grupo de Mercadoria no SAP",
                    "type": "string"
                },
                "DESC_GRP_MERC": {
                    "description": "Descrição do Grupo de Mercadoria no SAP",
                    "type": "string"
                },
                "TP_PRODUTO": {
                    "description": "Tipo de Produto no SAP",
                    "type": "string"
                },
                "DATA_TIMESTAMP": {
                    "description": "Data do timestamp",
                    "type": "string"
                },
                "HORA_TIMESTAMP": {
                    "description": "Hora do timestamp",
                    "type": "string"
                }
            }
        },
        "RegiaoPostDto": {
            "description": "Payload contendo os dados das Regiões realizados no SAP",
            "type": "object",
            "properties": {
                "COD_UNIDADE": {
                    "description": "Código de Unidade de Negócio no SAP",
                    "type": "string"
                },
                "REGION": {
                    "description": "Código da Região no SAP",
                    "type": "string"
                },
                "REGION_DESC": {
                    "description": "Descrição da Região no SAP",
                    "type": "string"
                },
                "DATA_TIMESTAMP": {
                    "description": "Data do timestamp",
                    "type": "string"
                },
                "HORA_TIMESTAMP": {
                    "description": "Hora do timestamp",
                    "type": "string"
                }
            }
        },
        "TipoVeiculoPostDto": {
            "description": "Payload contendo os dados do Tipo de Veículo do SAP",
            "type": "object",
            "properties": {
                "TP_VEICULO": {
                    "description": "Código do Tipo de Veículo no SAP",
                    "type": "string"
                },
                "DESC_TP_VEIC": {
                    "description": "Descrição do Tipo de Veículo no SAP",
                    "type": "string"
                },
                "CAPAC_CARGA": {
                    "description": "Capacidade de Carga do Tipo de Veículo",
                    "type": "string"
                },
                "UN_CAPACIDADE": {
                    "description": "Unidade de medida da capacidade de carga do tipo de veículo",
                    "type": "string"
                },
                "TOL_EXC_PESO": {
                    "description": "Valor máximo de tolerância de excesso de peso para o tipo de veículo",
                    "type": "string"
                },
                "NR_EIXOS": {
                    "description": "Número de eixos do tipo de veículo",
                    "type": "string"
                },
                "QT_CARRETAS_NEC": {
                    "description": "Quantidade de carretas necessárias para o Tipo de Veículo",
                    "type": "string"
                },
                "DATA_TIMESTAMP": {
                    "description": "Data do timestamp",
                    "type": "string"
                },
                "HORA_TIMESTAMP": {
                    "description": "Hora do timestamp",
                    "type": "string"
                }
            }
        },
        "UnidadeNegocioPostDto": {
            "type": "object",
            "properties": {
                "COD_UNIDADE": {
                    "description": "Código da Unidade de Negócio no SAP",
                    "type": "string"
                },
                "DESC_UNIDADE": {
                    "description": "Descrição da Unidade de Negócio no SAP",
                    "type": "string"
                },
                "HR_LIMITE_OTIF_EX": {
                    "description": "Horário Limite TIF de Exceção",
                    "type": "string"
                },
                "PERC_OTIF": {
                    "description": "Porcentagem do TIF",
                    "type": "string"
                },
                "PERC_OTIF_EX": {
                    "description": "Porcentagem de TIF de exceção",
                    "type": "string"
                },
                "ACTIVE_CIF_AUTO": {
                    "description": "Status ativação CIF automático",
                    "type": "string"
                },
                "VAL_SIL_ROD": {
                    "description": "Valida Treinamento Silo Rodoviário",
                    "type": "string"
                },
                "VAL_DIR_DEF": {
                    "description": "Valida Treinamento Direção Defensiva",
                    "type": "string"
                },
                "VAL_VEIC_CSECA": {
                    "description": "Valida Treinamento Carga Seca",
                    "type": "string"
                },
                "VAL_VEIC_CC": {
                    "description": "Valida Treinamento Caçamba",
                    "type": "string"
                },
                "VAL_VEIC_TQ": {
                    "description": "Valida Treinamento Operacional Tanque",
                    "type": "string"
                },
                "VAL_LAU_CAM_CAR": {
                    "description": "Valida Laudo de Condição do Caminhão Carga Seca",
                    "type": "string"
                },
                "VAL_LAU_MANUT_SEM": {
                    "description": "Valida Laudo de Manutenção",
                    "type": "string"
                },
                "VAL_LAU_SIST_HIDR": {
                    "description": "Valida Laudo Sistema Hidráulico para Caçambas",
                    "type": "string"
                },
                "VAL_LAU_ESPES_EST": {
                    "description": "Valida Laudo Espessura e Estanqueidade para Tanque",
                    "type": "string"
                },
                "VAL_CARAC_VEIC": {
                    "description": "Valida Característica Veículo",
                    "type": "string"
                },
                "VAL_INTEGR_SEG": {
                    "description": "Valida Integração Segurança",
                    "type": "string"
                },
                "VAL_LAU_VISTORIA": {
                    "description": "Valida Laudo Vistoria",
                    "type": "string"
                },
                "VAL_LAU_CAM_SILO": {
                    "description": "Valida Laudo Caminhão Silo",
                    "type": "string"
                },
                "UTC": {
                    "format": "int32",
                    "description": "Diferencial UTC para a Unidade",
                    "type": "integer"
                },
                "COD_EMPRESA": {
                    "description": "Código da Empresa no SAP a qual a Unidade de Negócio pertence",
                    "type": "string"
                },
                "DATA_TIMESTAMP": {
                    "description": "Data do timestamp",
                    "type": "string"
                },
                "HORA_TIMESTAMP": {
                    "description": "Hora do timestamp",
                    "type": "string"
                }
            }
        },
        "VeiculoPostDto": {
            "description": "Payload de dados de Veículos enviados pelo SAP",
            "type": "object",
            "properties": {
                "COD_EMPRESA": {
                    "description": "Código da Empresa no SAP onde o veículo está vinculado",
                    "type": "string"
                },
                "PLACA": {
                    "description": "Placa do Veículo",
                    "type": "string"
                },
                "UF_PLACA": {
                    "description": "UF da placa do Veículo",
                    "type": "string"
                },
                "DESC_VEICULO": {
                    "description": "Descrição do Veículo",
                    "type": "string"
                },
                "TP_VEICULO": {
                    "description": "Código do Tipo do Veículo no SAP",
                    "type": "string"
                },
                "CAT_VEICULO": {
                    "description": "Código da categoria do Veículo no SAP",
                    "type": "string"
                },
                "RENAVAM": {
                    "description": "Número do RENAVAM do Veículo",
                    "type": "string"
                },
                "ANO_MODELO": {
                    "description": "Ano-modelo do veículo",
                    "type": "string"
                },
                "EIXOS": {
                    "description": "Número de eixos do Veículo",
                    "type": "string"
                },
                "EIXOS_RETORNO": {
                    "description": "Número de Eixos de Retorno do Veículo",
                    "type": "string"
                },
                "PESO_TARA": {
                    "description": "Peso de Tara do Veículo",
                    "type": "string"
                },
                "HAS_RASTR": {
                    "description": "Flag indicando se o veículo possui rastreamento",
                    "type": "string"
                },
                "TIPO_RASTR": {
                    "description": "Tipo de rastreamento do veículo",
                    "type": "string"
                },
                "HAS_COMPRESSOR": {
                    "description": "Flag indicando se o veículo possui compressor",
                    "type": "string"
                },
                "HAS_MUNCK": {
                    "description": "Flag indicando se o veículo possui Munck",
                    "type": "string"
                },
                "IS_LICENCIADO": {
                    "description": "Flag indicando se o veículo está licenciado",
                    "type": "string"
                },
                "DT_CAD_LICEN": {
                    "description": "Data de cadastro de licenciamento",
                    "type": "string"
                },
                "DT_VAL_LICEN": {
                    "description": "Data de validade do licenciamento",
                    "type": "string"
                },
                "IS_ATIVO": {
                    "description": "Flag indicando se o veículo está ativo",
                    "type": "string"
                },
                "MOTIVO_INATIVO": {
                    "description": "Descrição do motivo de inativação do veículo",
                    "type": "string"
                },
                "CARAC": {
                    "description": "Características do Veículo",
                    "type": "string"
                },
                "URL_ART": {
                    "description": "URL ART",
                    "type": "string"
                },
                "URL_BOLETO_ART": {
                    "description": "URL do Boleto ART",
                    "type": "string"
                },
                "URL_COMPROVANTE_PAGAMENTO_ART": {
                    "description": "URL do Comprovante de Pagamento ART",
                    "type": "string"
                },
                "CHASSI": {
                    "description": "Chassi do Veículo",
                    "type": "string"
                },
                "URL_CRLV": {
                    "description": "URL do CRLV do Veículo",
                    "type": "string"
                },
                "NUMERO_EIXOS2": {
                    "description": "NUMERO DE EIXOS",
                    "type": "string"
                },
                "NUMERO_EIXOS_RET2": {
                    "description": "NUMERO DE EIXOS RETORNO",
                    "type": "string"
                },
                "PLACA_ALUM_TARA": {
                    "description": "TARA DA PLACA DE ALIMÍNIO",
                    "type": "string"
                },
                "PLACA_ALUM_LOTACAO": {
                    "description": "LOTAÇÃO DA PLACA DE ALIMÍNIO",
                    "type": "string"
                },
                "PLACA_ALUM_PBTC": {
                    "description": "PBTC DA PLACA DE ALIMÍNIO",
                    "type": "string"
                },
                "DT_ULT_AUDIT": {
                    "description": "DATA DA ULTIMA AUDITORIA",
                    "type": "string"
                },
                "COD_DNIT": {
                    "description": "CÓDIGO DNIT DO VEÍCULO",
                    "type": "string"
                },
                "URL_IMG_FRONTAL": {
                    "description": "URL da IMAGEM FRONTAL DO VEICULO",
                    "type": "string"
                },
                "URL_IMG_LATERAL": {
                    "description": "URL da IMAGEM LATERAL DO VEICULO",
                    "type": "string"
                },
                "URL_IMG_TRASEIRA": {
                    "description": "URL da IMAGEM TRASEIRA DO VEICULO",
                    "type": "string"
                },
                "URL_IMG_DIAGONAL": {
                    "description": "URL da IMAGEM DIAGONAL DO VEICULO",
                    "type": "string"
                },
                "URL_IMG_PLACA_ALUM": {
                    "description": "URL da IMAGEM da PLACA DE ALUMÍNIO",
                    "type": "string"
                },
                "laudos": {
                    "description": "Lista de laudos atrelados ao veículo",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/KeyValueDto"
                    }
                },
                "transportadoras": {
                    "description": "Transportadoras às quais o veículo está vinculado",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TransportadoraPostDto"
                    }
                },
                "DATA_TIMESTAMP": {
                    "description": "Data do timestamp",
                    "type": "string"
                },
                "HORA_TIMESTAMP": {
                    "description": "Hora do timestamp",
                    "type": "string"
                }
            }
        },
        "CtrllogisticaPostDtoV2": {
            "description": "Payload para Obtenção de parametrização de veículos por unidade de negocio",
            "type": "object",
            "properties": {
                "CENTRO": {
                    "description": "Código da Unidade de Negócio no SAP",
                    "type": "string"
                },
                "ATIVO": {
                    "description": "Valida cadastro de veiculo individualizado",
                    "type": "string"
                }
            }
        },
        "TransportadoraPostDtoV2": {
            "type": "object",
            "properties": {
                "COD_TRANSP": {
                    "description": "Código da Transportadora no SAP",
                    "type": "string"
                },
                "NOME": {
                    "description": "Nome da Transportadora",
                    "type": "string"
                },
                "CNPJ": {
                    "description": "CNPJ da transportadora",
                    "type": "string"
                },
                "CPF": {
                    "description": "CPF da transportadora",
                    "type": "string"
                },
                "TIPO_PESSOA": {
                    "description": "Tipo de Pessoa da transportadora (Física ou Jurídica)",
                    "type": "string"
                },
                "MODALIDADE": {
                    "description": "Modalidade da Transportadora",
                    "type": "string"
                },
                "DATA_NASCIMENTO": {
                    "description": "Data de Nascimento da Transportadora (Quando Pessoa Física)",
                    "type": "string"
                },
                "NIT_PIS": {
                    "description": "NIT / PIS da transportadora",
                    "type": "string"
                },
                "INSC_MUNICIPAL_RG": {
                    "description": "Inscrição Municipal / RG da transportadora",
                    "type": "string"
                },
                "IE": {
                    "description": "Inscrição Estadual da Transportadora",
                    "type": "string"
                },
                "CEP": {
                    "description": "CEP do Endereço da Transportadora",
                    "type": "string"
                },
                "RUA": {
                    "description": "Rua do Endereço da Transportadora",
                    "type": "string"
                },
                "NUMERO": {
                    "description": "Número do Endereço da Transportadora",
                    "type": "string"
                },
                "COMPLEMENTO": {
                    "description": "Complemento do Endereço da Transportadora",
                    "type": "string"
                },
                "BAIRRO": {
                    "description": "Bairro do Endereço da Transportadora",
                    "type": "string"
                },
                "CIDADE": {
                    "description": "Cidade do Endereço da Transportadora",
                    "type": "string"
                },
                "PAIS": {
                    "description": "País do Endereço da Transportadora",
                    "type": "string"
                },
                "UF": {
                    "description": "UF do Endereço da Transportadora",
                    "type": "string"
                },
                "DEPENDENTES": {
                    "description": "Dependentes da Transportadora",
                    "type": "string"
                },
                "CELULAR": {
                    "description": "Número de Celular da Transportadora",
                    "type": "string"
                },
                "TELEFONE": {
                    "description": "Número de Telefone da Transportadora",
                    "type": "string"
                },
                "FAX": {
                    "description": "Número de FAX da Transportadora",
                    "type": "string"
                },
                "EMAIL": {
                    "description": "E-Mail da Transportadora",
                    "type": "string"
                },
                "ADIANTAMENTO": {
                    "description": "Flag de Adiantamento",
                    "type": "boolean"
                },
                "BANCO": {
                    "description": "Nome do Banco da Conta Bancária da Transportadora",
                    "type": "string"
                },
                "NUMERO_BANCO": {
                    "description": "Número do Banco da Conta Bancária da Transportadora",
                    "type": "string"
                },
                "DIGITO": {
                    "description": "Dígito do Número do Banco da Conta Bancária da Transportadora",
                    "type": "string"
                },
                "AGENCIA": {
                    "description": "Agência da Conta Bancária da Transportadora",
                    "type": "string"
                },
                "DIGITO_AGENCIA": {
                    "description": "Dígito da Agência da Conta Bancária da Transportadora",
                    "type": "string"
                },
                "CONTA": {
                    "description": "Número da Conta Bancária da Transportadora",
                    "type": "string"
                },
                "DIGITO_CONTA": {
                    "description": "Dígito do Número da Conta Bancária da Transportadora",
                    "type": "string"
                },
                "URL_DOC_COMPROVANTE_BANCARIO": {
                    "description": "URL da imagem do Documento de Comprovação Bancária",
                    "type": "string"
                },
                "URL_AUTORIZACAO_ADIANTAMENTO_FRETE": {
                    "description": "URL da imagem do Documento de Autorização de Adiantamento de Frete",
                    "type": "string"
                },
                "NUMERO_ANTT": {
                    "description": "Numero ANTT da Transportadora",
                    "type": "string"
                },
                "DATA_VENC_ANTT": {
                    "description": "Data Vencimento ANTT da Transportadora",
                    "type": "string"
                }
            }
        },
        "VeiculoDNITPostPayloadListSAP": {
            "type": "object",
            "properties": {
                "item": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VeiculoDNITPostDto"
                    }
                }
            }
        },
        "VeiculoDNITPostDto": {
            "type": "object",
            "properties": {
                "COD_DNIT": {
                    "description": "Código do Veículo",
                    "type": "string"
                },
                "TP_VEIC": {
                    "description": "Tipo de Veículo",
                    "type": "string"
                },
                "DESC_VEIC": {
                    "description": "Descrição do Veículo",
                    "type": "string"
                },
                "NUM_EIXOS": {
                    "format": "double",
                    "description": "Número de eixos",
                    "type": "number"
                },
                "DIST_EIXOS": {
                    "format": "double",
                    "description": "Distância entre eixos",
                    "type": "number"
                },
                "PBTC": {
                    "format": "double",
                    "description": "Peso bruto transportado",
                    "type": "number"
                },
                "TARA": {
                    "format": "double",
                    "description": "TARA do Veiculo",
                    "type": "number"
                },
                "LOTACAO": {
                    "format": "double",
                    "description": "Peso Líquido Transportado pelo  Veículo",
                    "type": "number"
                },
                "FOTO_DNIT": {
                    "description": "Imagem no DNIT",
                    "type": "string"
                },
                "ATIVO": {
                    "description": "Ativo: A - Ativo; I - Inativo",
                    "type": "string"
                }
            }
        },
        "ComposicaoVeiculoDNITPostPayloadListSAP": {
            "type": "object",
            "properties": {
                "item": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ComposicaoVeiculoDNITPostDto"
                    }
                }
            }
        },
        "ComposicaoVeiculoDNITPostDto": {
            "type": "object",
            "properties": {
                "COD_VEIC": {
                    "description": "Código do Veículo",
                    "type": "string"
                },
                "COD_IMPL1": {
                    "description": "Código Implemento 1 da composição",
                    "type": "string"
                },
                "COD_IMPL2": {
                    "description": "Código Implemento 2 da composição",
                    "type": "string"
                },
                "COD_IMPL3": {
                    "description": "Código Implemento 3 da composição",
                    "type": "string"
                },
                "PBTC_MAX": {
                    "format": "double",
                    "description": "Peso bruto Maximo transportado",
                    "type": "number"
                },
                "ATIVO": {
                    "description": "Ativo: A - Ativo; I - Inativo",
                    "type": "string"
                }
            }
        },
        "TicketStatusDto": {
            "type": "object",
            "properties": {
                "codigo": {
                    "description": "COdigo",
                    "type": "string"
                },
                "status": {
                    "description": "Status",
                    "type": "string"
                },
                "retorno": {
                    "description": "Detalhado do status",
                    "type": "string"
                }
            }
        },
        "ContratoPostRequestDto": {
            "description": "Dados de um contarto da Repom com um motorista e suas respectivas notas fiscais",
            "type": "object",
            "properties": {
                "cpfMotorista": {
                    "description": "CPF do Motorista detentor do contrato",
                    "type": "string"
                },
                "numeroContratoRepom": {
                    "description": "Número do contrato da REPOM firmado para o motorista",
                    "type": "string"
                },
                "numeroContratoKMM": {
                    "description": "Número do contrato da KMM",
                    "type": "string"
                },
                "branchIdRepom": {
                    "description": "BranchID da REPOM utilizado para criação do contrato",
                    "type": "string"
                },
                "cnpjEmissor": {
                    "description": "Cnpj do emissor",
                    "type": "string"
                },
                "dataContrato": {
                    "format": "date-time",
                    "description": "Data da criação do contrato",
                    "type": "string"
                },
                "valorTotal": {
                    "format": "double",
                    "description": "Valor total do contrato",
                    "type": "number"
                },
                "valorAdiantado": {
                    "format": "double",
                    "description": "valor adiantado",
                    "type": "number"
                },
                "valorPendente": {
                    "format": "double",
                    "description": "valor pendente de pagamento",
                    "type": "number"
                },
                "notasFiscais": {
                    "description": "Notas fiscais incluídas no contrato",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NotaFiscalDto"
                    }
                }
            }
        },
        "NotaFiscalDto": {
            "description": "Dados de uma Nota Fiscal pertencente a um contrato da REPOM",
            "type": "object",
            "properties": {
                "numeroNF": {
                    "description": "Número da NF, com 9 dígitos (preencher com zeros à esquerda)",
                    "type": "string"
                },
                "serieNF": {
                    "description": "Série da NF com 3 dígitos (preencher com zeros à esquerda)",
                    "type": "string"
                },
                "dataEmissaoNF": {
                    "format": "date-time",
                    "description": "Data de emissão da NF",
                    "type": "string"
                },
                "codigoAcessoNF": {
                    "description": "Código de Acesso da NF",
                    "type": "string"
                }
            }
        },
        "ContratoPutRequestDto": {
            "description": "Dados para a alteração do status de um contrato da REPOM",
            "type": "object",
            "properties": {
                "status": {
                    "description": "Novo status do contrato",
                    "type": "string"
                },
                "mensagem": {
                    "description": "Mensagem informativa detalhando/justificando o Status",
                    "type": "string"
                }
            }
        },
        "SMSModel": {
            "type": "object",
            "properties": {
                "codigoPais": {
                    "format": "int32",
                    "type": "integer"
                },
                "ddd": {
                    "format": "int32",
                    "type": "integer"
                },
                "to": {
                    "type": "string"
                },
                "messageId": {
                    "format": "int32",
                    "enum": [
                        1,
                        2,
                        3,
                        4
                    ],
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "Domain.Carregamento.Model.Painel.CarregamentoPainelItemDTO": {
            "type": "object",
            "properties": {
                "ordem": {
                    "type": "string"
                },
                "placaVeiculo": {
                    "type": "string"
                },
                "nomeMotorista": {
                    "type": "string"
                },
                "cidade": {
                    "type": "string"
                },
                "compressor": {
                    "type": "boolean"
                },
                "descargaFumaca": {
                    "type": "boolean"
                },
                "chapa": {
                    "type": "boolean"
                },
                "munck": {
                    "type": "boolean"
                },
                "tempoPrevisto": {
                    "type": "string"
                },
                "statusChamado": {
                    "format": "int32",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8
                    ],
                    "type": "integer"
                },
                "flgPrioridade": {
                    "type": "boolean"
                },
                "motoristaId": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.TipoCarregamento.Http.Dto.TipoCarregamentoGetDto": {
            "description": "Objeto Tipo de carregamento",
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "Identificador do registro",
                    "type": "string"
                },
                "descricao": {
                    "description": "Descrição do tipo de carregamento",
                    "type": "string"
                },
                "categoria": {
                    "format": "int32",
                    "description": "(Enum) Categoria do tipo de carregamento (0 Granel / 1 Ensacado)",
                    "enum": [
                        0,
                        1
                    ],
                    "type": "integer"
                },
                "tipo": {
                    "format": "int32",
                    "description": "(Enum) Tipo de carregamento (1 carga / 2 descarga)",
                    "enum": [
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "possuiLacre": {
                    "description": "Flag indicando se possui lacre",
                    "type": "boolean"
                },
                "solicitarNumeroPedido": {
                    "description": "Flag indicando se precisa solicitar o número do pedido",
                    "type": "boolean"
                },
                "flgPermiteCte": {
                    "description": "Flag indicando se permite CTE",
                    "type": "boolean"
                },
                "flgSolicitaChapaTotem": {
                    "description": "Flag indicando se deve solicitar Chapa no Totem",
                    "type": "boolean"
                },
                "ativo": {
                    "description": "Flag se tipo de carregamento está ativo",
                    "type": "boolean"
                },
                "unidadeNegocioId": {
                    "format": "uuid",
                    "description": "ID da unidade de negócio",
                    "type": "string"
                },
                "flgPossuiGradeAlta": {
                    "description": "Flag se possui grade alta",
                    "type": "boolean"
                },
                "flgDescargaFumaca": {
                    "description": "Flag indicando se possui descarga de fumaça",
                    "type": "boolean"
                }
            }
        },
        "Application.Interfaces.TipoCarregamento.Http.Dto.MotoristaParceiro.TipoCarregamentoMotoristaParceiroSimplifiedGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                },
                "tipo": {
                    "format": "int32",
                    "enum": [
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "categoria": {
                    "format": "int32",
                    "enum": [
                        0,
                        1
                    ],
                    "type": "integer"
                },
                "flgPossuiGradeAlta": {
                    "type": "boolean"
                },
                "flgSolicitaChapaTotem": {
                    "type": "boolean"
                },
                "flgDescargaFumaca": {
                    "type": "boolean"
                },
                "flgPossuiLacre": {
                    "type": "boolean"
                }
            }
        },
        "Application.Interfaces.v2.MarcacaoMotivosCancelamento.MarcacaoMotivoCancelamentoDTO": {
            "type": "object",
            "properties": {
                "codigo": {
                    "format": "int32",
                    "type": "integer"
                },
                "descricao": {
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.Marcacao.Http.Dto.Model.MarcacaoPostDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "motoristaId": {
                    "format": "uuid",
                    "type": "string"
                },
                "cpf": {
                    "type": "string"
                },
                "tipoCarregamentoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "qtdPalets": {
                    "format": "int32",
                    "type": "integer"
                },
                "transportadoraId": {
                    "format": "uuid",
                    "type": "string"
                },
                "unidadeNegocioId": {
                    "format": "uuid",
                    "type": "string"
                },
                "tipoGrade": {
                    "format": "int32",
                    "enum": [
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "status": {
                    "format": "int32",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10
                    ],
                    "type": "integer"
                },
                "flgHabilitado": {
                    "type": "boolean"
                },
                "repom": {
                    "type": "string"
                },
                "celular": {
                    "type": "string"
                },
                "tipoTransporte": {
                    "format": "int32",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7
                    ],
                    "type": "integer"
                },
                "tipoOperacao": {
                    "format": "int32",
                    "enum": [
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "flgChapa": {
                    "type": "boolean"
                },
                "flgDescargaFumaca": {
                    "type": "boolean"
                },
                "cte": {
                    "type": "string"
                },
                "nfs": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.Marcacao.Http.Dto.Model.NotaFiscal.MarcacaoNotaFiscalPostDto"
                    }
                },
                "lacres": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.Marcacao.Http.Dto.Model.Lacre.MarcacaoLacrePostDto"
                    }
                },
                "veiculos": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.Marcacao.Http.Dto.Model.Veiculo.MarcacaoVeiculoPostDto"
                    }
                },
                "itens": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.Marcacao.Http.Dto.Model.Item.MarcacaoItemPostDto"
                    }
                },
                "regioes": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.Marcacao.Http.Dto.Model.Regiao.MarcacaoRegiaoPostDto"
                    }
                },
                "pedidos": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.Marcacao.Http.Dto.Model.Pedido.MarcacaoPedidoPostDto"
                    }
                },
                "destinos": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.Marcacao.Http.Dto.Model.Destino.MarcacaoDestinoPostDto"
                    }
                },
                "dataCadastro": {
                    "format": "date-time",
                    "type": "string"
                },
                "pesquisas": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.Marcacao.Http.Dto.Model.Pesquisa.MarcacaoPesquisaPostDto"
                    }
                },
                "preReserva": {
                    "type": "boolean"
                },
                "unidadeNegocioDestinoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "origemApp": {
                    "type": "boolean"
                }
            }
        },
        "Application.Interfaces.Marcacao.Http.Dto.Model.NotaFiscal.MarcacaoNotaFiscalPostDto": {
            "type": "object",
            "properties": {
                "marcacaoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "numNf": {
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.Marcacao.Http.Dto.Model.Lacre.MarcacaoLacrePostDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "marcacaoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "lacre": {
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.Marcacao.Http.Dto.Model.Veiculo.MarcacaoVeiculoPostDto": {
            "type": "object",
            "properties": {
                "marcacaoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "veiculoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "tipo": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        3
                    ],
                    "type": "integer"
                }
            }
        },
        "Application.Interfaces.Marcacao.Http.Dto.Model.Item.MarcacaoItemPostDto": {
            "type": "object",
            "properties": {
                "marcacaoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "numPedido": {
                    "type": "string"
                },
                "codProduto": {
                    "type": "string"
                },
                "qtdProduto": {
                    "format": "double",
                    "type": "number"
                },
                "unidadeMedida": {
                    "type": "string"
                },
                "vlrPesoItem": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "Application.Interfaces.Marcacao.Http.Dto.Model.Regiao.MarcacaoRegiaoPostDto": {
            "type": "object",
            "properties": {
                "marcacaoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "regiaoId": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.Marcacao.Http.Dto.Model.Pedido.MarcacaoPedidoPostDto": {
            "type": "object",
            "properties": {
                "marcacaoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "pedidoId": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.Marcacao.Http.Dto.Model.Destino.MarcacaoDestinoPostDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "marcacaoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "unidadeNegocioDestinoId": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.Marcacao.Http.Dto.Model.Pesquisa.MarcacaoPesquisaPostDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "marcacaoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "motoristaId": {
                    "format": "uuid",
                    "type": "string"
                },
                "pesquisaId": {
                    "format": "uuid",
                    "type": "string"
                },
                "respostas": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.Marcacao.Http.Dto.Model.Pesquisa.Resposta.MarcacaoPesquisaRespostaPostDto"
                    }
                }
            }
        },
        "Application.Interfaces.Marcacao.Http.Dto.Model.Pesquisa.Resposta.MarcacaoPesquisaRespostaPostDto": {
            "type": "object",
            "properties": {
                "marcacaoPesquisaId": {
                    "format": "uuid",
                    "type": "string"
                },
                "perguntaId": {
                    "format": "uuid",
                    "type": "string"
                },
                "respostaId": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.Marcacao.Http.Dto.Model.MarcacaoPostResponseDto": {
            "type": "object",
            "properties": {
                "numero": {
                    "format": "int32",
                    "type": "integer"
                },
                "codigo_Teclado_TRSNet": {
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.Common.Dto.UnknownErrorDto": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "errors": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                }
            }
        },
        "Application.Interfaces.Marcacao.Http.Dto.Model.MarcacaoGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "numero": {
                    "format": "int32",
                    "type": "integer"
                },
                "portaria": {
                    "type": "string"
                },
                "motoristaId": {
                    "format": "uuid",
                    "type": "string"
                },
                "unidadeNegogioId": {
                    "format": "uuid",
                    "type": "string"
                },
                "cpf": {
                    "type": "string"
                },
                "tipoCarregamentoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "qtdPalets": {
                    "format": "int32",
                    "type": "integer"
                },
                "transportadoraId": {
                    "format": "uuid",
                    "type": "string"
                },
                "unidadeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "pedido": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.Pedido.Http.Dto.PedidoGetDto"
                    }
                },
                "regiaoIds": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "destinosIds": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "tipoGrade": {
                    "format": "int32",
                    "enum": [
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "status": {
                    "format": "int32",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10
                    ],
                    "type": "integer"
                },
                "flgHabilitado": {
                    "type": "boolean"
                },
                "repom": {
                    "type": "string"
                },
                "celular": {
                    "type": "string"
                },
                "tipoTransporte": {
                    "format": "int32",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7
                    ],
                    "type": "integer"
                },
                "operacao": {
                    "format": "int32",
                    "enum": [
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "flgChapa": {
                    "type": "boolean"
                },
                "flgDescargaFumaca": {
                    "type": "boolean"
                },
                "dataCadastro": {
                    "format": "date-time",
                    "type": "string"
                },
                "mensagemRetornoSAP": {
                    "type": "string"
                },
                "dataEntrouPortaria": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataCargaAssociada": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataInicioCarregamento": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataFimCarregamento": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataSaiuUnidade": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataChamado": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataCancelamento": {
                    "format": "date-time",
                    "type": "string"
                },
                "usuarioUltimaAlteracao": {
                    "format": "uuid",
                    "type": "string"
                },
                "dataUltimaAlteracaoStatus": {
                    "format": "date-time",
                    "type": "string"
                },
                "ultimaAcao": {
                    "format": "int32",
                    "enum": [
                        1,
                        2,
                        3
                    ],
                    "type": "integer"
                },
                "preReserva": {
                    "type": "boolean"
                },
                "remessaBloqueadaUsuarioId": {
                    "format": "uuid",
                    "type": "string"
                },
                "nfes": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pedidos": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lacres": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "codigoTrsnet": {
                    "type": "string"
                },
                "motivoCancelamentoBloqueio": {
                    "type": "string"
                },
                "unidadeDestinoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "origemApp": {
                    "type": "boolean"
                }
            }
        },
        "Application.Interfaces.Pedido.Http.Dto.PedidoGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "unidadeNegocioId": {
                    "format": "uuid",
                    "type": "string"
                },
                "numPedido": {
                    "type": "string"
                },
                "numAgrupamento": {
                    "type": "string"
                },
                "codPedidoXml": {
                    "type": "string"
                },
                "incoterms": {
                    "format": "int32",
                    "enum": [
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "tipoCarregamento": {
                    "format": "int32",
                    "enum": [
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "dataPedido": {
                    "format": "date-time",
                    "type": "string"
                },
                "codCliente": {
                    "type": "string"
                },
                "nomeCliente": {
                    "type": "string"
                },
                "cidadeDestino": {
                    "type": "string"
                },
                "ufDestino": {
                    "type": "string"
                },
                "flgCargaFechada": {
                    "type": "boolean"
                },
                "flgDescargaFumaca": {
                    "type": "boolean"
                },
                "flgDescargaCliente": {
                    "type": "boolean"
                },
                "flgPedidoCombo": {
                    "type": "boolean"
                },
                "flgPedidoBalao": {
                    "type": "boolean"
                }
            }
        },
        "Application.Interfaces.Marcacao.Http.Dto.Model.Veiculo.MarcacaoVeiculoGetDto": {
            "type": "object",
            "properties": {
                "marcacaoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "veiculoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "tipo": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "Application.Interfaces.Marcacao.Http.Dto.Model.Roteiros.MarcacaoRoteiroGetDto": {
            "type": "object",
            "properties": {
                "pesoTotal": {
                    "format": "double",
                    "type": "number"
                },
                "kmTotal": {
                    "type": "string"
                },
                "chapa": {
                    "type": "boolean"
                },
                "descargaFumaca": {
                    "type": "boolean"
                },
                "valorLiquidoFrete": {
                    "format": "double",
                    "type": "number"
                },
                "valorBrutoFrete": {
                    "format": "double",
                    "type": "number"
                },
                "transportadoraId": {
                    "format": "uuid",
                    "type": "string"
                },
                "itens": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.Marcacao.Http.Dto.Model.Roteiros.MarcacaoRoteiroItemGetDto"
                    }
                }
            }
        },
        "Application.Interfaces.Marcacao.Http.Dto.Model.Roteiros.MarcacaoRoteiroItemGetDto": {
            "type": "object",
            "properties": {
                "nomeCliente": {
                    "type": "string"
                },
                "logradouro": {
                    "type": "string"
                },
                "logradouroNumero": {
                    "type": "string"
                },
                "bairro": {
                    "type": "string"
                },
                "cep": {
                    "type": "string"
                },
                "cidade": {
                    "type": "string"
                },
                "uf": {
                    "type": "string"
                },
                "complemento": {
                    "type": "string"
                },
                "latitude": {
                    "type": "string"
                },
                "longitude": {
                    "type": "string"
                },
                "produtos": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.Marcacao.Http.Dto.Model.Roteiros.MarcacaoRoteiroProdutoGetDto"
                    }
                }
            }
        },
        "Application.Interfaces.Marcacao.Http.Dto.Model.Roteiros.MarcacaoRoteiroProdutoGetDto": {
            "type": "object",
            "properties": {
                "codigo": {
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.Marcacao.Http.Dto.Model.MarcacaoPostCancelarDto": {
            "type": "object",
            "properties": {
                "motivoCancelamentoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "usuarioUltimaAlteracao": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.Marcacao.Http.Dto.Model.Pedido.MarcacaoRegiaoGetDto": {
            "type": "object",
            "properties": {
                "marcacaoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "regiaoId": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.Marcacao.Http.Dto.Model.Regiao.MarcacaoAssocRegiaoPostDto": {
            "type": "object",
            "properties": {
                "regioesId": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            }
        },
        "Integration.Domain.Marcacao.Command.Associar.Model.Regiao.MarcacaoAssociarRegiaoCommModel": {
            "type": "object",
            "properties": {
                "coD_UNIDADE": {
                    "type": "string"
                },
                "cpf": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "operacao": {
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.Marcacao.Http.Dto.Model.Pedido.MarcacaoPedidoGetDto": {
            "type": "object",
            "properties": {
                "marcacaoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "pedidoId": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.Marcacao.Http.Dto.Model.Item.MarcacaoItemGetDto": {
            "type": "object",
            "properties": {
                "numPedido": {
                    "type": "string"
                },
                "codProduto": {
                    "type": "string"
                },
                "unidadeMedida": {
                    "type": "string"
                },
                "peso": {
                    "format": "double",
                    "type": "number"
                },
                "qtd": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "Application.Interfaces.v2.Marcacoes.Dto.MarcacaoCancelamentoAppDto": {
            "type": "object",
            "properties": {
                "motivoCancelamento": {
                    "type": "string"
                },
                "incrementarContagemDesistencia": {
                    "type": "boolean"
                }
            }
        },
        "Application.Interfaces.v2.Marcacoes.Dto.RessincronizacaoStatusSAPRequestDTO": {
            "description": "Payload de requisição de ressincronização de status HUB / SAP",
            "type": "object",
            "properties": {
                "dataInicio": {
                    "format": "date-time",
                    "description": "Data de início do período onde as marcações serão ressincronizadas",
                    "type": "string"
                },
                "dataTermino": {
                    "format": "date-time",
                    "description": "Data de término do período onde as marcações serão ressincronizadas",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.Marcacao.Http.Dto.Model.MarcacaoGetListDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "numero": {
                    "format": "int32",
                    "type": "integer"
                },
                "portaria": {
                    "type": "string"
                },
                "motoristaId": {
                    "format": "uuid",
                    "type": "string"
                },
                "motoristaNome": {
                    "type": "string"
                },
                "unidadeNegogioId": {
                    "format": "uuid",
                    "type": "string"
                },
                "unidadeNegocioDescricao": {
                    "type": "string"
                },
                "tipoCarregamentoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "tipoCarregamentoDescricao": {
                    "type": "string"
                },
                "status": {
                    "format": "int32",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10
                    ],
                    "type": "integer"
                },
                "mensagem": {
                    "type": "string"
                },
                "veiculosPlacas": {
                    "type": "string"
                },
                "veiculosCategorias": {
                    "type": "string"
                },
                "transportadoraDescricao": {
                    "type": "string"
                },
                "preReserva": {
                    "type": "boolean"
                },
                "origemApp": {
                    "type": "boolean"
                }
            }
        },
        "Domain.MetaTransferencia.Model.ViewMetaTransferencia": {
            "type": "object",
            "properties": {
                "metaTransferenciaId": {
                    "format": "uuid",
                    "type": "string"
                },
                "unidadeNegocioOrigemId": {
                    "format": "uuid",
                    "type": "string"
                },
                "unidadeNegocioDestinoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "transportadoraId": {
                    "format": "uuid",
                    "type": "string"
                },
                "produtoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "produtoTipo": {
                    "type": "string"
                },
                "codigoProduto": {
                    "type": "string"
                },
                "dataReferencia": {
                    "format": "date-time",
                    "type": "string"
                },
                "prioridade": {
                    "format": "int32",
                    "type": "integer"
                },
                "qtdProdutoMeta": {
                    "format": "double",
                    "type": "number"
                },
                "qtdProdutoReservada": {
                    "format": "double",
                    "type": "number"
                },
                "qtdProdutoFaturada": {
                    "format": "double",
                    "type": "number"
                },
                "qtdRealizadoDMenosUm": {
                    "format": "double",
                    "type": "number"
                },
                "qtdAntecipadoDMaisUm": {
                    "format": "double",
                    "type": "number"
                },
                "delta": {
                    "format": "double",
                    "type": "number"
                },
                "excluida": {
                    "type": "boolean"
                },
                "qtdProdutoFaturadaD0": {
                    "format": "double",
                    "type": "number"
                },
                "grupo": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "Domain.MetaTransferencia.Model.ViewMetaTransferenciaHistorico": {
            "type": "object",
            "properties": {
                "metaTransferenciaId": {
                    "format": "uuid",
                    "type": "string"
                },
                "numeroMeta": {
                    "format": "int32",
                    "type": "integer"
                },
                "dataReferencia": {
                    "format": "date-time",
                    "type": "string"
                },
                "prioridade": {
                    "format": "int32",
                    "type": "integer"
                },
                "unidadeNegocioOrigemId": {
                    "format": "uuid",
                    "type": "string"
                },
                "transportadoraId": {
                    "format": "uuid",
                    "type": "string"
                },
                "produtoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "codigoProduto": {
                    "type": "string"
                },
                "unidadeNegocioDestinoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "marcacaoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "numeroMarcacao": {
                    "format": "int32",
                    "type": "integer"
                },
                "numeroPortaria": {
                    "type": "string"
                },
                "metaReservadaId": {
                    "format": "uuid",
                    "type": "string"
                },
                "metaAdiantamentoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "metaFaturamentoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "data": {
                    "format": "date-time",
                    "type": "string"
                },
                "sequencia": {
                    "format": "int64",
                    "type": "integer"
                },
                "operacao": {
                    "type": "string"
                },
                "origem": {
                    "type": "string"
                },
                "motivo": {
                    "type": "string"
                },
                "quantidade": {
                    "format": "double",
                    "type": "number"
                },
                "ordemTipoOperacao": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "System.IO.Stream": {
            "type": "object",
            "properties": {
                "canRead": {
                    "type": "boolean",
                    "readOnly": true
                },
                "canSeek": {
                    "type": "boolean",
                    "readOnly": true
                },
                "canTimeout": {
                    "type": "boolean",
                    "readOnly": true
                },
                "canWrite": {
                    "type": "boolean",
                    "readOnly": true
                },
                "length": {
                    "format": "int64",
                    "type": "integer",
                    "readOnly": true
                },
                "position": {
                    "format": "int64",
                    "type": "integer"
                },
                "readTimeout": {
                    "format": "int32",
                    "type": "integer"
                },
                "writeTimeout": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "Application.Interfaces.Marcacao.Http.Dto.Model.MarcacaoTotemGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "numero": {
                    "format": "int32",
                    "type": "integer"
                },
                "portaria": {
                    "type": "string"
                },
                "motoristaId": {
                    "format": "uuid",
                    "type": "string"
                },
                "unidadeNegogioId": {
                    "format": "uuid",
                    "type": "string"
                },
                "cpf": {
                    "type": "string"
                },
                "tipoCarregamentoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "qtdPalets": {
                    "format": "int32",
                    "type": "integer"
                },
                "transportadoraId": {
                    "format": "uuid",
                    "type": "string"
                },
                "unidadeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "pedido": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.Pedido.Http.Dto.PedidoGetDto"
                    }
                },
                "regiaoIds": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "destinosIds": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "tipoGrade": {
                    "format": "int32",
                    "enum": [
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "status": {
                    "format": "int32",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10
                    ],
                    "type": "integer"
                },
                "flgHabilitado": {
                    "type": "boolean"
                },
                "repom": {
                    "type": "string"
                },
                "celular": {
                    "type": "string"
                },
                "tipoTransporte": {
                    "format": "int32",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7
                    ],
                    "type": "integer"
                },
                "tipoOperacao": {
                    "format": "int32",
                    "enum": [
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "flgChapa": {
                    "type": "boolean"
                },
                "flgDescargaFumaca": {
                    "type": "boolean"
                },
                "dataCadastro": {
                    "format": "date-time",
                    "type": "string"
                },
                "mensagemRetornoSAP": {
                    "type": "string"
                },
                "dataEntrouPortaria": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataCargaAssociada": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataInicioCarregamento": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataFimCarregamento": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataSaiuUnidade": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataChamado": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataCancelamento": {
                    "format": "date-time",
                    "type": "string"
                },
                "usuarioUltimaAlteracao": {
                    "format": "uuid",
                    "type": "string"
                },
                "dataUltimaAlteracaoStatus": {
                    "format": "date-time",
                    "type": "string"
                },
                "ultimaAcao": {
                    "format": "int32",
                    "enum": [
                        1,
                        2,
                        3
                    ],
                    "type": "integer"
                },
                "preReserva": {
                    "type": "boolean"
                },
                "remessaBloqueadaUsuarioId": {
                    "format": "uuid",
                    "type": "string"
                },
                "nfes": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pedidos": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lacres": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "motivoCancelamentoBloqueio": {
                    "type": "string"
                },
                "unidadeDestinoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "dataAceiteFrete": {
                    "format": "date-time",
                    "type": "string"
                },
                "origemApp": {
                    "type": "boolean"
                }
            }
        },
        "Domain.TipoCarregamento.Model.TipoCarregamento": {
            "type": "object",
            "properties": {
                "codigo": {
                    "format": "int32",
                    "type": "integer",
                    "readOnly": true
                },
                "descricao": {
                    "type": "string",
                    "readOnly": true
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.TrsNet.Http.Dto.PaletesOkGetDto": {
            "type": "object",
            "properties": {
                "qtdPaletesOk": {
                    "format": "int32",
                    "type": "integer"
                },
                "mensagem": {
                    "type": "string"
                },
                "code": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "Application.Interfaces.Drp.Http.Dto.MotoristaParceiro.DestinoMotoristaParceiroGetDto": {
            "type": "object",
            "properties": {
                "unidadeNegocioDestinoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "unidadeNegocioDestinoCodigo": {
                    "type": "string"
                },
                "unidadeNegocioDestinoDescricao": {
                    "type": "string"
                },
                "possuiMeta": {
                    "type": "boolean"
                }
            }
        },
        "Domain.MetaTransferencia.Model.MetaTransferencia": {
            "required": [
                "unidadeNegocioOrigemId",
                "unidadeNegocioDestinoId",
                "produtoId",
                "qtdProdutoMeta",
                "prioridade"
            ],
            "type": "object",
            "properties": {
                "numero": {
                    "format": "int32",
                    "type": "integer"
                },
                "unidadeNegocioOrigemId": {
                    "format": "uuid",
                    "type": "string"
                },
                "unidadeNegocioDestinoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "produtoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "produtoTipo": {
                    "type": "string"
                },
                "codigoProduto": {
                    "type": "string"
                },
                "qtdProdutoMeta": {
                    "format": "double",
                    "type": "number"
                },
                "qtdProdutoReservada": {
                    "format": "double",
                    "type": "number"
                },
                "prioridade": {
                    "format": "int32",
                    "type": "integer"
                },
                "transportadoraId": {
                    "format": "uuid",
                    "type": "string"
                },
                "dataReferencia": {
                    "format": "date-time",
                    "maxLength": 10,
                    "type": "string"
                },
                "sequencia": {
                    "format": "int64",
                    "type": "integer"
                },
                "excluida": {
                    "type": "boolean"
                },
                "grupo": {
                    "type": "string",
                    "readOnly": true
                },
                "metasFaturamento": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Domain.MetaTransferencia.Model.MetaFaturamento"
                    }
                },
                "marcacaoItensMetaTransferencia": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Domain.Marcacao.Model.Item.MetaTransferencia.MarcacaoItemMetaTransferencia"
                    }
                },
                "historico": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Domain.MetaTransferencia.Model.MetaTransferenciaHistorico"
                    }
                },
                "quantidadeMetaCarga": {
                    "format": "double",
                    "type": "number"
                },
                "quantidadeAdiantada": {
                    "format": "double",
                    "type": "number"
                },
                "possuiCarga": {
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Domain.MetaTransferencia.Model.MetaFaturamento": {
            "required": [
                "origemFaturamento",
                "dataFaturamento",
                "qtdFaturamento"
            ],
            "type": "object",
            "properties": {
                "origemFaturamento": {
                    "format": "int32",
                    "type": "integer"
                },
                "dataFaturamento": {
                    "format": "date-time",
                    "type": "string"
                },
                "qtdFaturamento": {
                    "format": "double",
                    "type": "number"
                },
                "metaTransferenciaId": {
                    "format": "uuid",
                    "type": "string"
                },
                "nrPortaria": {
                    "type": "string"
                },
                "metaTransferencia": {
                    "$ref": "#/definitions/Domain.MetaTransferencia.Model.MetaTransferencia"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Domain.Marcacao.Model.Item.MetaTransferencia.MarcacaoItemMetaTransferencia": {
            "required": [
                "marcacaoId",
                "marcacaoItemId",
                "metaTransferenciaId"
            ],
            "type": "object",
            "properties": {
                "marcacaoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "marcacao": {
                    "$ref": "#/definitions/Domain.Marcacao.Model.Marcacao"
                },
                "marcacaoItemId": {
                    "format": "uuid",
                    "type": "string"
                },
                "marcacaoItem": {
                    "$ref": "#/definitions/Domain.Marcacao.Model.Item.MarcacaoItem"
                },
                "metaTransferenciaId": {
                    "format": "uuid",
                    "type": "string"
                },
                "codProduto": {
                    "type": "string"
                },
                "qtdProduto": {
                    "format": "double",
                    "type": "number"
                },
                "cancelado": {
                    "type": "boolean"
                },
                "dataCancelamento": {
                    "format": "date-time",
                    "type": "string"
                },
                "metaTransfereciaModel": {
                    "$ref": "#/definitions/Domain.MetaTransferencia.Model.MetaTransferencia"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Domain.MetaTransferencia.Model.MetaTransferenciaHistorico": {
            "type": "object",
            "properties": {
                "metaTransferenciaId": {
                    "format": "uuid",
                    "type": "string"
                },
                "motivo": {
                    "format": "int32",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                    ],
                    "type": "integer"
                },
                "valor": {
                    "format": "double",
                    "type": "number"
                },
                "sequencia": {
                    "format": "int32",
                    "type": "integer"
                },
                "data": {
                    "format": "date-time",
                    "type": "string"
                },
                "metaTransferencia": {
                    "$ref": "#/definitions/Domain.MetaTransferencia.Model.MetaTransferencia"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Domain.Marcacao.Model.Marcacao": {
            "required": [
                "motoristaId",
                "tipoCarregamentoId",
                "qtdPalets",
                "transportadoraId",
                "unidadeId",
                "tipoGrade",
                "status",
                "flgHabilitado",
                "dataCadastro"
            ],
            "type": "object",
            "properties": {
                "numero": {
                    "format": "int32",
                    "type": "integer"
                },
                "portaria": {
                    "type": "string"
                },
                "mensagemRetornoSAP": {
                    "type": "string"
                },
                "motoristaId": {
                    "format": "uuid",
                    "type": "string"
                },
                "cpf": {
                    "type": "string"
                },
                "tipoCarregamentoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "qtdPalets": {
                    "format": "int32",
                    "type": "integer"
                },
                "transportadoraId": {
                    "format": "uuid",
                    "type": "string"
                },
                "unidadeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "tipoGrade": {
                    "format": "int32",
                    "enum": [
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "status": {
                    "format": "int32",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10
                    ],
                    "type": "integer"
                },
                "flgHabilitado": {
                    "type": "boolean"
                },
                "repom": {
                    "type": "string"
                },
                "celular": {
                    "type": "string"
                },
                "tipoTransporte": {
                    "format": "int32",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7
                    ],
                    "type": "integer"
                },
                "tipoOperacao": {
                    "format": "int32",
                    "enum": [
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "flgChapa": {
                    "type": "boolean"
                },
                "flgDescargaFumaca": {
                    "type": "boolean"
                },
                "cte": {
                    "type": "string"
                },
                "dataCadastro": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataUltimaAlteracaoStatus": {
                    "format": "date-time",
                    "type": "string"
                },
                "usuarioUltimaAlteracao": {
                    "format": "uuid",
                    "type": "string"
                },
                "ultimaAcao": {
                    "format": "int32",
                    "enum": [
                        1,
                        2,
                        3
                    ],
                    "type": "integer"
                },
                "motivoCancelamentoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "unidadeDestinoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "valCapacidadeCargaMaxima": {
                    "format": "double",
                    "type": "number"
                },
                "preReserva": {
                    "type": "boolean"
                },
                "dataEntrouPortaria": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataCancelamento": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataCargaAssociada": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataInicioCarregamento": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataFimCarregamento": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataSaiuUnidade": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataChamado": {
                    "format": "date-time",
                    "type": "string"
                },
                "remessaBloqueadaUsuarioId": {
                    "format": "uuid",
                    "type": "string"
                },
                "remessaBloqueadaUsuarioDataHora": {
                    "format": "date-time",
                    "type": "string"
                },
                "codigoTrsnet": {
                    "type": "string"
                },
                "origemApp": {
                    "type": "boolean"
                },
                "dataAceiteFrete": {
                    "format": "date-time",
                    "type": "string"
                },
                "vlrTotalFrete": {
                    "format": "double",
                    "type": "number"
                },
                "vlrLiquidoFrete": {
                    "format": "double",
                    "type": "number"
                },
                "kmTotal": {
                    "type": "string"
                },
                "motivoCancelamentoAPP": {
                    "type": "string"
                },
                "dataCheckin": {
                    "format": "date-time",
                    "type": "string"
                },
                "marcacaoDestinos": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Domain.Marcacao.Model.Destino.MarcacaoDestino"
                    }
                },
                "marcacaoVeiculos": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Domain.MarcacaoVeiculo.Model.MarcacaoVeiculo"
                    }
                },
                "marcacaoNfes": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Domain.Marcacao.Model.NotaFiscal.MarcacaoNotaFiscal"
                    }
                },
                "regioes": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Domain.MarcacaoRegiao.Model.MarcacaoRegiao"
                    }
                },
                "itinerarios": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Domain.MarcacaoItinerario.Model.MarcacaoItinerario"
                    }
                },
                "itens": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Domain.Marcacao.Model.Item.MarcacaoItem"
                    }
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Domain.Marcacao.Model.Item.MarcacaoItem": {
            "required": [
                "marcacaoId",
                "codProduto",
                "unidadeMedida"
            ],
            "type": "object",
            "properties": {
                "marcacaoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "numPedido": {
                    "maxLength": 20,
                    "type": "string",
                    "readOnly": true
                },
                "codProduto": {
                    "maxLength": 50,
                    "type": "string"
                },
                "qtdProduto": {
                    "format": "double",
                    "type": "number"
                },
                "unidadeMedida": {
                    "maxLength": 3,
                    "type": "string"
                },
                "vlrPesoItem": {
                    "format": "double",
                    "type": "number"
                },
                "cidadeDestino": {
                    "type": "string"
                },
                "nomeCliente": {
                    "type": "string"
                },
                "logradouro": {
                    "type": "string"
                },
                "numero": {
                    "type": "string"
                },
                "complemento": {
                    "type": "string"
                },
                "bairro": {
                    "type": "string"
                },
                "cep": {
                    "type": "string"
                },
                "kmTotal": {
                    "type": "string"
                },
                "uf": {
                    "type": "string"
                },
                "latitude": {
                    "type": "string"
                },
                "longitude": {
                    "type": "string"
                },
                "descricaoProduto": {
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Domain.Marcacao.Model.Destino.MarcacaoDestino": {
            "required": [
                "marcacaoId",
                "unidadeNegocioDestinoId"
            ],
            "type": "object",
            "properties": {
                "marcacaoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "unidadeNegocioDestinoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Domain.MarcacaoVeiculo.Model.MarcacaoVeiculo": {
            "required": [
                "marcacaoId",
                "veiculoId"
            ],
            "type": "object",
            "properties": {
                "marcacaoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "veiculoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "veiculo": {
                    "$ref": "#/definitions/Domain.MarcacaoVeiculo.Model.Veiculo"
                },
                "tipo": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        3
                    ],
                    "type": "integer"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Domain.Marcacao.Model.NotaFiscal.MarcacaoNotaFiscal": {
            "required": [
                "marcacaoId"
            ],
            "type": "object",
            "properties": {
                "marcacaoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "nrNotaFiscal": {
                    "maxLength": 60,
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Domain.MarcacaoRegiao.Model.MarcacaoRegiao": {
            "required": [
                "marcacaoId",
                "regiaoId"
            ],
            "type": "object",
            "properties": {
                "marcacaoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "regiaoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Domain.MarcacaoItinerario.Model.MarcacaoItinerario": {
            "required": [
                "marcacaoId",
                "itinerarioId"
            ],
            "type": "object",
            "properties": {
                "marcacaoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "marcacao": {
                    "$ref": "#/definitions/Domain.Marcacao.Model.Marcacao"
                },
                "itinerarioId": {
                    "format": "uuid",
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Domain.MarcacaoVeiculo.Model.Veiculo": {
            "type": "object",
            "properties": {
                "empresa": {
                    "type": "string"
                },
                "placa": {
                    "type": "string"
                },
                "veiculoCategoriaId": {
                    "format": "uuid",
                    "type": "string"
                },
                "veiculoTipoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.Pedido.Http.Dto.PedidoMotoristaParceiroGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "unidadeNegocioId": {
                    "format": "uuid",
                    "type": "string"
                },
                "numPedido": {
                    "type": "string"
                },
                "numAgrupamento": {
                    "type": "string"
                },
                "codPedidoXml": {
                    "type": "string"
                },
                "incoterms": {
                    "format": "int32",
                    "enum": [
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "tipoCarregamento": {
                    "format": "int32",
                    "enum": [
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "dataPedido": {
                    "format": "date-time",
                    "type": "string"
                },
                "codCliente": {
                    "type": "string"
                },
                "nomeCliente": {
                    "type": "string"
                },
                "cidadeDestino": {
                    "type": "string"
                },
                "ufDestino": {
                    "type": "string"
                },
                "flgCargaFechada": {
                    "type": "boolean"
                },
                "flgDescargaFumaca": {
                    "type": "boolean"
                },
                "flgDescargaCliente": {
                    "type": "boolean"
                },
                "flgPedidoCombo": {
                    "type": "boolean"
                },
                "flgPedidoBalao": {
                    "type": "boolean"
                },
                "itens": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.Pedido.Http.Dto.Item.MotoristaParceiro.PedidoItemMotoristaParceiroGetDto"
                    }
                }
            }
        },
        "Application.Interfaces.Pedido.Http.Dto.Item.MotoristaParceiro.PedidoItemMotoristaParceiroGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "pedidoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "codProduto": {
                    "type": "string"
                },
                "descProduto": {
                    "type": "string"
                },
                "qtdProduto": {
                    "format": "double",
                    "type": "number"
                },
                "unidadeMedida": {
                    "type": "string"
                },
                "vlrPesoItem": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "Application.Interfaces.v2.Anexos.Dto.AnexoPostJsonRequestDto": {
            "description": "Dados para armazenamento de um arquivo no storage",
            "type": "object",
            "properties": {
                "nome": {
                    "description": "Nome original do arquivo, contendo a extensão. Não enviar o caminho completo, apenas o nome do arquivo.",
                    "type": "string"
                },
                "conteudo": {
                    "description": "Conteúdo do arquivo, encodificado em Base 64",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.v2.Anexos.Dto.AnexoPostResponseDto": {
            "description": "Dados sobre o carregamento de um arquivo no storage",
            "type": "object",
            "properties": {
                "originalFileName": {
                    "description": "Nome de arquivo original",
                    "type": "string"
                },
                "publicURL": {
                    "description": "URL pública gerada para o arquivo. Esta URL é relativa, e deve ser complementada com a URL Base do serviço utilizado para a requisição.",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.Common.Dto.ValidationErrorDto": {
            "description": "Dados referentes a um erro de validação em algum endpoint",
            "type": "object",
            "properties": {
                "resourceErrors": {
                    "description": "Mensagem detalhando o erro de validação",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "Microsoft.AspNetCore.Http.IFormFile": {
            "type": "object",
            "properties": {
                "contentType": {
                    "type": "string",
                    "readOnly": true
                },
                "contentDisposition": {
                    "type": "string",
                    "readOnly": true
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "uniqueItems": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "readOnly": true
                },
                "length": {
                    "format": "int64",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "readOnly": true
                },
                "fileName": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "Domain.Banco.Model.Banco": {
            "type": "object",
            "properties": {
                "numero": {
                    "format": "int32",
                    "type": "integer"
                },
                "digito": {
                    "format": "int32",
                    "type": "integer"
                },
                "descricao": {
                    "type": "string"
                },
                "maisImportante": {
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.Common.Dto.ResourceNotFoundErrorDto": {
            "description": "Indica que um recurso solicitado não foi encontrado",
            "type": "object",
            "properties": {
                "error": {
                    "description": "Mensagem detalhando o erro",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.Veiculo.Http.Dto.Categoria.VeiculoCategoriaGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                },
                "imagem": {
                    "type": "string"
                },
                "ativo": {
                    "type": "boolean"
                },
                "veiculoCaracteristicaId": {
                    "format": "uuid",
                    "type": "string"
                },
                "veiculoCaracteristica": {
                    "$ref": "#/definitions/Application.Interfaces.Veiculo.Http.Dto.Caracteristica.VeiculoCaracteristicaGetDto"
                }
            }
        },
        "Application.Interfaces.Veiculo.Http.Dto.Caracteristica.VeiculoCaracteristicaGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                }
            }
        },
        "Domain.CifRetiraPermanente.Model.CifRetiraPermanente": {
            "required": [
                "codEmpresa",
                "unidadeNegocioId",
                "codCliente"
            ],
            "type": "object",
            "properties": {
                "codEmpresa": {
                    "maxLength": 10,
                    "type": "string"
                },
                "unidadeNegocioId": {
                    "format": "uuid",
                    "type": "string"
                },
                "unidadeNegocio": {
                    "$ref": "#/definitions/Domain.UnidadeNegocio.Model.UnidadeNegocio"
                },
                "codCliente": {
                    "maxLength": 20,
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Domain.UnidadeNegocio.Model.UnidadeNegocio": {
            "required": [
                "codigo",
                "descricao",
                "ativo",
                "trsnetAtivo",
                "preReservaAtiva",
                "preReservaRequerCheckin",
                "tempoToleranciaCheckin",
                "centralPaletesOnline",
                "flgCifAuto"
            ],
            "type": "object",
            "properties": {
                "codigo": {
                    "maxLength": 10,
                    "type": "string"
                },
                "descricao": {
                    "maxLength": 30,
                    "type": "string"
                },
                "ativo": {
                    "type": "boolean"
                },
                "tempoToleranciaChamado": {
                    "format": "int32",
                    "type": "integer"
                },
                "trsnetAtivo": {
                    "type": "boolean"
                },
                "preReservaAtiva": {
                    "type": "boolean"
                },
                "preReservaRequerCheckin": {
                    "type": "boolean"
                },
                "tempoToleranciaCheckin": {
                    "format": "int32",
                    "type": "integer"
                },
                "centralPaletesOnline": {
                    "type": "boolean"
                },
                "urlCentralPaletes": {
                    "maxLength": 150,
                    "type": "string"
                },
                "horaLimiteTifEx": {
                    "type": "string"
                },
                "porcentagemTif": {
                    "format": "double",
                    "type": "number"
                },
                "porcentagemTifEx": {
                    "format": "double",
                    "type": "number"
                },
                "flgCifAuto": {
                    "type": "boolean"
                },
                "minutosPainel": {
                    "format": "int32",
                    "type": "integer"
                },
                "porcentagemMinimoCarregamento": {
                    "format": "double",
                    "type": "number"
                },
                "desvioPadraoChamado": {
                    "type": "string"
                },
                "qntPlacaHabilitadaCarregamento": {
                    "format": "int32",
                    "type": "integer"
                },
                "flgValidaTreinamentoSiloRodoviario": {
                    "type": "boolean"
                },
                "flgValidaTreinamentoDirecaoDefensiva": {
                    "type": "boolean"
                },
                "flgValidaTreinamentoOperacionalCargaSeca": {
                    "type": "boolean"
                },
                "flgValidaTreinamentoOperacionalCacamba": {
                    "type": "boolean"
                },
                "flgValidaTreinamentoOperacionalTanque": {
                    "type": "boolean"
                },
                "flgValidaLaudoCondicaoCaminhaoCargaSeca": {
                    "type": "boolean"
                },
                "flgValidaLaudoManutencaoCargaSecaCacamba": {
                    "type": "boolean"
                },
                "flgValidaLaudoSistemaHidraulicoCacamba": {
                    "type": "boolean"
                },
                "flgValidaLaudoEspessuraEstanqueidadeTanque": {
                    "type": "boolean"
                },
                "flgValidaCaracteristicaVeiculo": {
                    "type": "boolean"
                },
                "flgValidaIntegracaoSeguranca": {
                    "type": "boolean"
                },
                "flgValidaLaudoVistoria": {
                    "type": "boolean"
                },
                "flgValidaLaudoCaminhaoSilo": {
                    "type": "boolean"
                },
                "codEmpresa": {
                    "type": "string"
                },
                "utc": {
                    "format": "int32",
                    "type": "integer"
                },
                "flgListRoteirizador": {
                    "type": "string"
                },
                "transportadoraMovcId": {
                    "format": "uuid",
                    "type": "string"
                },
                "tempoToleranciaAtribuicaoCargaManual": {
                    "format": "int32",
                    "type": "integer"
                },
                "cadastroVeiculoIndividualizadoAtivo": {
                    "type": "boolean"
                },
                "tipoAutenticacaoTotem": {
                    "format": "int32",
                    "enum": [
                        1,
                        2,
                        3,
                        4
                    ],
                    "type": "integer"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Domain.CifRetira.Model.CifRetira": {
            "required": [
                "codEmpresa",
                "unidadeNegocioId",
                "codCliente"
            ],
            "type": "object",
            "properties": {
                "codEmpresa": {
                    "maxLength": 10,
                    "type": "string"
                },
                "unidadeNegocioId": {
                    "format": "uuid",
                    "type": "string"
                },
                "unidadeNegocio": {
                    "$ref": "#/definitions/Domain.UnidadeNegocio.Model.UnidadeNegocio"
                },
                "codCliente": {
                    "maxLength": 20,
                    "type": "string"
                },
                "transportadoraId": {
                    "format": "uuid",
                    "type": "string"
                },
                "transportadora": {
                    "$ref": "#/definitions/Domain.Transportadora.Model.Transportadora"
                },
                "placaCavalo": {
                    "maxLength": 10,
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Domain.Transportadora.Model.Transportadora": {
            "required": [
                "codigo"
            ],
            "type": "object",
            "properties": {
                "codigo": {
                    "maxLength": 10,
                    "type": "string"
                },
                "nome": {
                    "maxLength": 70,
                    "type": "string"
                },
                "cnpj": {
                    "maxLength": 16,
                    "type": "string"
                },
                "cpf": {
                    "maxLength": 14,
                    "type": "string"
                },
                "eventoSincronizado": {
                    "type": "boolean"
                },
                "tipoPessoa": {
                    "maxLength": 10,
                    "type": "string"
                },
                "modalidade": {
                    "maxLength": 10,
                    "type": "string"
                },
                "dataNascimento": {
                    "format": "date-time",
                    "type": "string"
                },
                "nitPis": {
                    "maxLength": 20,
                    "type": "string"
                },
                "inscricaoMunicipalRg": {
                    "maxLength": 20,
                    "type": "string"
                },
                "inscricaoEstadual": {
                    "maxLength": 20,
                    "type": "string"
                },
                "enderecoCep": {
                    "maxLength": 10,
                    "type": "string"
                },
                "enderecoRua": {
                    "maxLength": 250,
                    "type": "string"
                },
                "enderecoNumero": {
                    "maxLength": 20,
                    "type": "string"
                },
                "enderecoComplemento": {
                    "maxLength": 250,
                    "type": "string"
                },
                "enderecoBairro": {
                    "maxLength": 250,
                    "type": "string"
                },
                "enderecoCidade": {
                    "maxLength": 250,
                    "type": "string"
                },
                "enderecoPais": {
                    "maxLength": 50,
                    "type": "string"
                },
                "enderecoUf": {
                    "maxLength": 2,
                    "type": "string"
                },
                "dependentes": {
                    "format": "int32",
                    "type": "integer"
                },
                "numeroTelefoneCelular": {
                    "maxLength": 20,
                    "type": "string"
                },
                "numeroTelefoneFixo": {
                    "maxLength": 20,
                    "type": "string"
                },
                "numeroTelefoneFax": {
                    "maxLength": 20,
                    "type": "string"
                },
                "email": {
                    "maxLength": 250,
                    "type": "string"
                },
                "flgAdiantamento": {
                    "type": "boolean"
                },
                "contaBancariaNomeBanco": {
                    "maxLength": 50,
                    "type": "string"
                },
                "contaBancariaNumeroBanco": {
                    "maxLength": 20,
                    "type": "string"
                },
                "contaBancariaDigitoBanco": {
                    "maxLength": 5,
                    "type": "string"
                },
                "contaBancariaNumeroAgencia": {
                    "maxLength": 20,
                    "type": "string"
                },
                "contaBancariaDigitoAgencia": {
                    "maxLength": 5,
                    "type": "string"
                },
                "contaBancariaNumeroConta": {
                    "maxLength": 20,
                    "type": "string"
                },
                "contaBancariaDigitoConta": {
                    "maxLength": 5,
                    "type": "string"
                },
                "urlDocumentoComprovanteBancario": {
                    "maxLength": 250,
                    "type": "string"
                },
                "urlAutorizacaoAdiantamentoFrete": {
                    "maxLength": 250,
                    "type": "string"
                },
                "numeroANTT": {
                    "maxLength": 20,
                    "type": "string"
                },
                "dataVencANTT": {
                    "format": "date-time",
                    "type": "string"
                },
                "favorita": {
                    "type": "boolean"
                },
                "veiculoTransportadora": {
                    "$ref": "#/definitions/Domain.VeiculoTransportadora.Model.VeiculoTransportadora"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Domain.VeiculoTransportadora.Model.VeiculoTransportadora": {
            "type": "object",
            "properties": {
                "veiculoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "veiculo": {
                    "$ref": "#/definitions/Domain.Veiculo.Model.Veiculo"
                },
                "transportadoraId": {
                    "format": "uuid",
                    "type": "string"
                },
                "transportadora": {
                    "$ref": "#/definitions/Domain.Transportadora.Model.Transportadora"
                },
                "eventoSincronizado": {
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Domain.Veiculo.Model.Veiculo": {
            "required": [
                "empresa",
                "placa",
                "tipoVeiculoId"
            ],
            "type": "object",
            "properties": {
                "empresa": {
                    "maxLength": 10,
                    "type": "string"
                },
                "placa": {
                    "maxLength": 20,
                    "type": "string"
                },
                "descricao": {
                    "maxLength": 60,
                    "type": "string"
                },
                "tipoVeiculoId": {
                    "format": "uuid",
                    "maxLength": 36,
                    "type": "string"
                },
                "tipoVeiculo": {
                    "$ref": "#/definitions/Domain.Veiculo.Model.Tipo.VeiculoTipo"
                },
                "categoriaVeiculo": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        3
                    ],
                    "type": "integer"
                },
                "qtdEixos": {
                    "format": "int32",
                    "type": "integer"
                },
                "qtdEixoRetorno": {
                    "format": "int32",
                    "type": "integer"
                },
                "anoModelo": {
                    "format": "int32",
                    "type": "integer"
                },
                "pesoTara": {
                    "format": "double",
                    "type": "number"
                },
                "flgRastreamento": {
                    "type": "boolean"
                },
                "tipoRastreabilidade": {
                    "maxLength": 30,
                    "type": "string"
                },
                "flgCompressor": {
                    "type": "boolean"
                },
                "flgDescargaMecanizada": {
                    "type": "boolean"
                },
                "flgLicenciado": {
                    "type": "boolean"
                },
                "dataLicenciamento": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataValidadeLicenciamento": {
                    "format": "date-time",
                    "type": "string"
                },
                "flgAtivo": {
                    "type": "boolean"
                },
                "descMotivo": {
                    "maxLength": 255,
                    "type": "string"
                },
                "renavam": {
                    "maxLength": 12,
                    "type": "string"
                },
                "placaUf": {
                    "maxLength": 2,
                    "type": "string"
                },
                "eventoSincronizado": {
                    "type": "boolean"
                },
                "caracteristica": {
                    "type": "string"
                },
                "urlART": {
                    "type": "string"
                },
                "urlBoletoART": {
                    "type": "string"
                },
                "urlComprovantePagamentoART": {
                    "type": "string"
                },
                "chassi": {
                    "type": "string"
                },
                "urlCRLV": {
                    "type": "string"
                },
                "numEixos": {
                    "format": "int32",
                    "type": "integer"
                },
                "numEixosRetorno": {
                    "format": "int32",
                    "type": "integer"
                },
                "placaAlumTara": {
                    "format": "double",
                    "type": "number"
                },
                "placaAlumLotacao": {
                    "format": "double",
                    "type": "number"
                },
                "placaAlumPBTC": {
                    "format": "double",
                    "type": "number"
                },
                "dataUltAuditoria": {
                    "format": "date-time",
                    "type": "string"
                },
                "codDNIT": {
                    "type": "string"
                },
                "urlImgFrontal": {
                    "type": "string"
                },
                "urlImgLateral": {
                    "type": "string"
                },
                "urlImgTraseira": {
                    "type": "string"
                },
                "urlImgDiagonal": {
                    "type": "string"
                },
                "urlImgPlacaAlum": {
                    "type": "string"
                },
                "veiculosTransportadora": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Domain.VeiculoTransportadora.Model.VeiculoTransportadora"
                    }
                },
                "veiculoLaudos": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Domain.Veiculo.Model.Laudo.VeiculoLaudo"
                    }
                },
                "semaforo": {
                    "format": "int32",
                    "type": "integer"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Domain.Veiculo.Model.Tipo.VeiculoTipo": {
            "required": [
                "codigo"
            ],
            "type": "object",
            "properties": {
                "codigo": {
                    "maxLength": 20,
                    "type": "string"
                },
                "descricao": {
                    "maxLength": 40,
                    "type": "string"
                },
                "valCapacidadeCargaMinima": {
                    "format": "double",
                    "type": "number"
                },
                "valCapacidadeCargaMaxima": {
                    "format": "double",
                    "type": "number"
                },
                "unCapacidadeCarga": {
                    "maxLength": 3,
                    "type": "string"
                },
                "valToleranciaPeso": {
                    "format": "double",
                    "type": "number"
                },
                "numEixos": {
                    "format": "int32",
                    "type": "integer"
                },
                "valQtdCarretas": {
                    "format": "int32",
                    "type": "integer"
                },
                "qtdPlacas": {
                    "format": "int32",
                    "type": "integer"
                },
                "veiculoCategoriaId": {
                    "format": "uuid",
                    "type": "string"
                },
                "veiculoCategoria": {
                    "$ref": "#/definitions/Domain.Veiculo.Model.Categoria.VeiculoCategoria"
                },
                "qtdPaletes": {
                    "format": "int32",
                    "type": "integer"
                },
                "ativo": {
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Domain.Veiculo.Model.Laudo.VeiculoLaudo": {
            "required": [
                "veiculoId",
                "identificadorExterno",
                "nome"
            ],
            "type": "object",
            "properties": {
                "veiculoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "identificadorExterno": {
                    "format": "uuid",
                    "type": "string"
                },
                "nome": {
                    "maxLength": 60,
                    "type": "string"
                },
                "descricao": {
                    "maxLength": 255,
                    "type": "string"
                },
                "dataEmissao": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataValidade": {
                    "format": "date-time",
                    "type": "string"
                },
                "urlDocumento": {
                    "type": "string"
                },
                "eventoSincronizado": {
                    "type": "boolean"
                },
                "chave": {
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Domain.Veiculo.Model.Categoria.VeiculoCategoria": {
            "required": [
                "descricao",
                "imagem"
            ],
            "type": "object",
            "properties": {
                "descricao": {
                    "maxLength": 100,
                    "type": "string"
                },
                "imagem": {
                    "maxLength": 32,
                    "type": "string"
                },
                "ativo": {
                    "type": "boolean"
                },
                "veiculoCaracteristicaId": {
                    "format": "uuid",
                    "type": "string"
                },
                "veiculoCaracteristica": {
                    "$ref": "#/definitions/Domain.Veiculo.Model.Caracteristica.VeiculoCaracteristica"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Domain.Veiculo.Model.Caracteristica.VeiculoCaracteristica": {
            "required": [
                "descricao"
            ],
            "type": "object",
            "properties": {
                "descricao": {
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.v2.CodigosAcesso.Dto.CodigoAcessoPostRequestDto": {
            "description": "Dados da requisição para criação de código de acesso",
            "type": "object",
            "properties": {
                "codigoPaisNumeroCelular": {
                    "description": "Código de País do número do celular para envio do código de acesso",
                    "type": "string"
                },
                "codigoAreaNumeroCelular": {
                    "description": "Código de Área do número do celular para envio do código de acesso",
                    "type": "string"
                },
                "numeroCelular": {
                    "description": "Número do celular para envio do código de acesso",
                    "type": "string"
                },
                "enderecoEmail": {
                    "description": "Endereço do e-mail para envio do código de acesso",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.v2.CodigosAcesso.Dto.CodigoAcessoPostResponseDto": {
            "description": "Dados da resposta da requisição para criação de código de acesso",
            "type": "object",
            "properties": {
                "codigoAcessoId": {
                    "format": "uuid",
                    "description": "Id do código de acesso gerado. Este Id deverá ser utilizado em validações posteriores",
                    "type": "string"
                },
                "dataValidade": {
                    "format": "date-time",
                    "description": "Data de validade do código de acesso gerado.",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.v2.CodigosAcesso.Dto.CodigoAcessoValidacaoPostRequestDto": {
            "description": "Dados de requisição de validação de código de acesso",
            "required": [
                "codigoAcessoId",
                "codigoAcesso"
            ],
            "type": "object",
            "properties": {
                "codigoAcessoId": {
                    "format": "uuid",
                    "description": "Id do Código de acesso",
                    "type": "string"
                },
                "codigoAcesso": {
                    "description": "Código do acesso à ser validado contra o Id fornecido",
                    "maxLength": 6,
                    "minLength": 6,
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.v2.CodigosAcesso.Dto.CodigoAcessoValidacaoPostResponseDto": {
            "description": "Dados de retorno da requisição de validação de código de acesso",
            "type": "object",
            "properties": {
                "valido": {
                    "description": "Indica se o código de acesso fornecido é válido",
                    "type": "boolean"
                },
                "motivoInvalido": {
                    "description": "Caso o código de acesso seja inválido, indica o motivo",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.v2.Enderecos.Dto.EnderecoDto": {
            "type": "object",
            "properties": {
                "cep": {
                    "type": "string"
                },
                "logradouro": {
                    "type": "string"
                },
                "complemento": {
                    "type": "string"
                },
                "bairro": {
                    "type": "string"
                },
                "localidade": {
                    "type": "string"
                },
                "uf": {
                    "type": "string"
                },
                "erro": {
                    "type": "boolean"
                }
            }
        },
        "Application.Interfaces.IntegracaoMotoristaTreinamento.Http.Dto.TreinamentoRealizadoDto": {
            "description": "Treinamento do motorista realizado",
            "type": "object",
            "properties": {
                "cpf": {
                    "description": "CPF do motorista",
                    "type": "string"
                },
                "codUnidadeNegocio": {
                    "description": "Código da unidade de negócio",
                    "type": "string"
                },
                "idCursoSAP": {
                    "description": "ID do curso SAP",
                    "type": "string"
                },
                "status": {
                    "description": "Status do treinamento",
                    "type": "string"
                },
                "k": {
                    "description": "Chave de validação",
                    "type": "string"
                },
                "descrUnidadeNegocio": {
                    "description": "Descrição da unidade de negócio",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.MotoristaTreinamento.Http.Dto.MotoristaTreinamentoGetDto": {
            "description": "Dados dos treinamentos de um motorista no Hub de Serviços",
            "type": "object",
            "properties": {
                "motoristaId": {
                    "format": "uuid",
                    "description": "ID do motorista no banco de dados do Hub de Serviços",
                    "type": "string"
                },
                "nomeTreinamento": {
                    "description": "Nome do treinamento no SAP",
                    "type": "string"
                },
                "flgPossuiTreinamento": {
                    "description": "Flag indicando que o motorista possui este o treinamento no SAP",
                    "type": "boolean"
                },
                "observacoesTreinamento": {
                    "description": "Observações sobre a realização deste treinamento no SAP",
                    "type": "string"
                },
                "datIntegracao": {
                    "format": "date-time",
                    "description": "Data da Realização da Integração no SAP",
                    "type": "string"
                },
                "dataValidadeTreinamento": {
                    "format": "date-time",
                    "description": "Data da Validade do Treinamento no SAP",
                    "type": "string"
                },
                "chave": {
                    "description": "Chave de correlação do treinamento no SAP",
                    "type": "string"
                },
                "tipo": {
                    "format": "int32",
                    "description": "Laudos tipos \"laudoInmetro\", \"laudoSemestralManutencaoCargaCacamba\",\"laudoSistHidraulico\"\r\n\"laudoCondicaoCaminhaoAnual\",\"laudoTrimestral\",\"laudoSiloTrimestral\",\"laudoEspessura\"",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13
                    ],
                    "type": "integer"
                },
                "originalFileName": {
                    "description": "Nome original",
                    "type": "string"
                },
                "publicURL": {
                    "description": "URL do documento",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.Common.Dto.ResourceCountDto": {
            "type": "object",
            "properties": {
                "count": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "Application.Interfaces.Motorista.Http.Dto.MotoristaPinDto": {
            "description": "Objeto PIN do motorista",
            "type": "object",
            "properties": {
                "CPF": {
                    "description": "CPF do motorista",
                    "type": "string"
                },
                "PIN": {
                    "description": "PIN do motorista",
                    "type": "string"
                },
                "codUnidadeNegocio": {
                    "description": "Código da unidade de negócio",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.v2.Motoristas.Dto.OcorrenciasDto": {
            "description": "Dados de uma ocorrência específica",
            "type": "object",
            "properties": {
                "cpf": {
                    "description": "CPF do motorista",
                    "type": "string"
                },
                "descricao": {
                    "description": "Descrição da Ocorrência",
                    "type": "string"
                },
                "data": {
                    "format": "date-time",
                    "description": "Data da ocorrência",
                    "type": "string"
                },
                "diasBloqueio": {
                    "format": "int32",
                    "description": "Dias de Bloqueio devido a Ocorrência",
                    "type": "integer"
                },
                "dataDesbloqueio": {
                    "format": "date-time",
                    "description": "Data da ocorrência",
                    "type": "string"
                },
                "unidade": {
                    "description": "Descrição da Ocorrência",
                    "type": "string"
                }
            }
        },
        "Domain.ComposicaoVeiculoMotorista.Model.ComposicaoVeiculoMotorista": {
            "required": [
                "motoristaCpf",
                "composicaoVeiculoId"
            ],
            "type": "object",
            "properties": {
                "motoristaCpf": {
                    "type": "string"
                },
                "composicaoVeiculoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "favorito": {
                    "type": "boolean"
                },
                "composicaoVeiculo": {
                    "$ref": "#/definitions/Domain.ComposicaoVeiculo.Model.ComposicaoVeiculo"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Domain.ComposicaoVeiculo.Model.ComposicaoVeiculo": {
            "required": [
                "cavaloPlaca"
            ],
            "type": "object",
            "properties": {
                "cavaloPlaca": {
                    "type": "string"
                },
                "carreta1Placa": {
                    "type": "string"
                },
                "carreta2Placa": {
                    "type": "string"
                },
                "carreta3Placa": {
                    "type": "string"
                },
                "urlImgPlacaPreta": {
                    "type": "string"
                },
                "cavalo": {
                    "$ref": "#/definitions/Domain.Veiculo.Model.Veiculo"
                },
                "carreta1": {
                    "$ref": "#/definitions/Domain.Veiculo.Model.Veiculo"
                },
                "carreta2": {
                    "$ref": "#/definitions/Domain.Veiculo.Model.Veiculo"
                },
                "carreta3": {
                    "$ref": "#/definitions/Domain.Veiculo.Model.Veiculo"
                },
                "semaforo": {
                    "format": "int32",
                    "type": "integer"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.v2.Motoristas.Dto.ComposicaoVeiculoMotoristaFavorita": {
            "description": "Dados para favoritar ou desfavoritar uma composicao de veiculo",
            "type": "object",
            "properties": {
                "motoristaCpf": {
                    "description": "CPF do motorista",
                    "type": "string"
                },
                "cavaloPlaca": {
                    "description": "Placa do cavalo da composicao",
                    "type": "string"
                },
                "favorita": {
                    "description": "favorita ou desfavorita uma composicao",
                    "type": "boolean"
                }
            }
        },
        "Application.Interfaces.v2.Motoristas.Dto.VinculoMotoristaVeiculoPostDto": {
            "type": "object",
            "properties": {
                "motoristaCpf": {
                    "description": "CPF/CNPJ da transportadora",
                    "type": "string"
                },
                "cavaloPlaca": {
                    "description": "Placa do veículo",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.v2.Motoristas.Dto.MotoristaVeiculoFavoritoPostDto": {
            "description": "Dados da atualização de histórico de ocorrência para um motorista",
            "type": "object",
            "properties": {
                "cpf": {
                    "description": "Cpf do motorista",
                    "type": "string"
                },
                "placa": {
                    "description": "Placa  do veiculo",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.v2.Motoristas.Dto.SituacaoCadastralGeralDto": {
            "type": "object",
            "properties": {
                "situacao": {
                    "format": "int32",
                    "description": "Situacao geral do motorista",
                    "type": "integer"
                },
                "motorista": {
                    "format": "int32",
                    "description": "Situacao do motorista",
                    "type": "integer"
                },
                "motoristas": {
                    "format": "int32",
                    "description": "Situacao do motorista",
                    "type": "integer"
                },
                "veiculo": {
                    "format": "int32",
                    "description": "Situacao do veiculo do motorista",
                    "type": "integer"
                },
                "transportadora": {
                    "format": "int32",
                    "description": "Situacao da transportadora",
                    "type": "integer"
                },
                "transportadoras": {
                    "format": "int32",
                    "description": "Situacao da transportadora",
                    "type": "integer"
                }
            }
        },
        "Domain.Motorista.Model.SituacaoCadastral.SituacaoCadastralDto": {
            "type": "object",
            "properties": {
                "tipo": {
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                },
                "semaforo": {
                    "format": "int32",
                    "type": "integer"
                },
                "dataVencimento": {
                    "format": "date-time",
                    "type": "string"
                },
                "motoristaCpf": {
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.MotoristaTransportadora.Http.Dto.TotemMotoristaTransportadoraGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "transportadoraId": {
                    "format": "uuid",
                    "type": "string"
                },
                "motoristaId": {
                    "format": "uuid",
                    "type": "string"
                },
                "transportadora": {
                    "$ref": "#/definitions/Application.Interfaces.Transportadora.Http.Dto.TransportadoraGetDto"
                }
            }
        },
        "Application.Interfaces.Transportadora.Http.Dto.TransportadoraGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "codigo": {
                    "type": "string"
                },
                "nome": {
                    "type": "string"
                },
                "cnpj": {
                    "type": "string"
                },
                "cpf": {
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.Motorista.Http.Dto.MotoristaGetDto": {
            "description": "Representa os dados completos de um motorista",
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "ID do Motorista no Hub de Serviços",
                    "type": "string"
                },
                "codEmpresa": {
                    "description": "Código da empresa no SAP em que este motorista está cadastrado",
                    "type": "string"
                },
                "cpf": {
                    "description": "CPF do Motorista",
                    "type": "string"
                },
                "nome": {
                    "description": "Nome do motorista",
                    "type": "string"
                },
                "cnh": {
                    "description": "Número da CNH do motorista",
                    "type": "string"
                },
                "dataNascimento": {
                    "format": "date-time",
                    "description": "Data de nascimento",
                    "type": "string"
                },
                "motoristaEstrangeiro": {
                    "description": "Motorista estrangeiro",
                    "type": "boolean"
                },
                "motoristaAutonomo": {
                    "description": "Motorista autônomo",
                    "type": "boolean"
                },
                "dataValidadeCNH": {
                    "format": "date-time",
                    "description": "Data de validade da CNH do motorista",
                    "type": "string"
                },
                "categoriaCNH": {
                    "description": "Categoria da CNH do motorista",
                    "type": "string"
                },
                "dataValidadeCadastro": {
                    "format": "date-time",
                    "description": "Data de validade do cadastro do motorista no SAP",
                    "type": "string"
                },
                "flgPossuiProblema": {
                    "description": "Flag indicando se o cadastro do motorista possui algum problema no SAP",
                    "type": "boolean"
                },
                "rua": {
                    "description": "Rua do endereço do motorista",
                    "type": "string"
                },
                "numero": {
                    "description": "Número do endereço do motorista",
                    "type": "string"
                },
                "complemento": {
                    "description": "Complemento do endereço",
                    "type": "string"
                },
                "bairro": {
                    "description": "Bairro do endereço do motorista",
                    "type": "string"
                },
                "cep": {
                    "description": "CEP do endereço do motorista",
                    "type": "string"
                },
                "cidade": {
                    "description": "Cidade do endereço do motorista",
                    "type": "string"
                },
                "uf": {
                    "description": "UF do endereço do motorista",
                    "type": "string"
                },
                "pais": {
                    "description": "País",
                    "type": "string"
                },
                "numeroTelefoneFixo": {
                    "description": "Número de telefone fixo do motorista",
                    "type": "string"
                },
                "numeroTelefoneCelular": {
                    "description": "Número de telefone celular pessoal do motorista",
                    "type": "string"
                },
                "numeroCelularTransportadora": {
                    "description": "Número de telefone celular comercial do motorista",
                    "type": "string"
                },
                "email": {
                    "description": "Email",
                    "type": "string"
                },
                "flgBiometriaApto": {
                    "description": "Flag indicando se o motorista está apto a cadastrar a biometria no totem. Caso possua valor 'true', então o motorista deverá cadastrar sua biometria no próximo acesso ao Totem do Gestão de Pátio",
                    "type": "boolean"
                },
                "flgPINApto": {
                    "description": "Flag indicando se o motorista está apto a cadastrar o PIN no totem. Caso possua valor 'true', então o motorista deverá cadastrar seu PIN no próximo acesso ao Totem do Gestão de Pátio",
                    "type": "boolean"
                },
                "flgUsaPIN": {
                    "description": "Flag indicando se o motorista utiliza o PIN para acesso ao totem do Gestão de Pátio",
                    "type": "boolean"
                },
                "flgUsaBiometria": {
                    "description": "Flag indicando se o motorista utiliza a biometria para acesso ao totem do Gestão de Pátio",
                    "type": "boolean"
                },
                "treinamentos": {
                    "description": "Lista dos treinamentos do motorista",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.MotoristaTreinamento.Http.Dto.MotoristaTreinamentoGetDto"
                    }
                },
                "bloqueios": {
                    "description": "Bloqueios atribuídos ao motorista no SAP",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.MotoristaBloqueio.Http.Dto.MotoristaBloqueioGetDto"
                    }
                },
                "biometrias": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.MotoristaBiometria.Http.Dto.MotoristaBiometriaGetDto"
                    }
                },
                "unidadeNegocios": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.UnidadeNegocio.Http.Dto.UnidadeNegocioGetDto"
                    }
                },
                "regiaoItinerarios": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.Regiao.Http.Dto.Itinerario.RegiaoItinerarioGetDto"
                    }
                },
                "transportadoras": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.Transportadora.Http.Dto.TransportadoraGetDto"
                    }
                },
                "anexos": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.AnexoDto"
                    }
                },
                "tokenCelular": {
                    "type": "string"
                },
                "contadorDesistenciaApp": {
                    "format": "int32",
                    "type": "integer"
                },
                "flgBloqueadoApp": {
                    "type": "boolean"
                },
                "dataDesbloqueioApp": {
                    "format": "date-time",
                    "type": "string"
                },
                "motivoBloqueioApp": {
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.MotoristaBloqueio.Http.Dto.MotoristaBloqueioGetDto": {
            "type": "object",
            "properties": {
                "motoristaId": {
                    "format": "uuid",
                    "type": "string"
                },
                "descMotivoBloqueio": {
                    "type": "string"
                },
                "flgPossuiBloqueio": {
                    "type": "boolean"
                },
                "motivoBloqueio": {
                    "type": "string"
                },
                "dataBloqueio": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataLiberacao": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.MotoristaBiometria.Http.Dto.MotoristaBiometriaGetDto": {
            "type": "object",
            "properties": {
                "motoristaId": {
                    "format": "uuid",
                    "type": "string"
                },
                "codigo": {
                    "format": "int32",
                    "type": "integer"
                },
                "biometria": {
                    "type": "string"
                },
                "hashBiometria": {
                    "type": "string"
                },
                "dataCadastro": {
                    "format": "date-time",
                    "type": "string"
                },
                "tipoOrigemBiometrica": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "Application.Interfaces.UnidadeNegocio.Http.Dto.UnidadeNegocioGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "codigo": {
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                },
                "ativo": {
                    "type": "boolean"
                },
                "toleranciaChamado": {
                    "format": "int32",
                    "type": "integer"
                },
                "horariosAtendimento": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.UnidadeNegocio.Http.Dto.HorarioAtendimento.HorarioAtendimentoGetDto"
                    }
                },
                "cadastroAutomatico": {
                    "$ref": "#/definitions/Application.Interfaces.UnidadeNegocio.Http.Dto.ControleAutomaticoMarcacoes.ControleAutomaticoMarcacoesGetDto"
                },
                "cancelamentoAutomatico": {
                    "$ref": "#/definitions/Application.Interfaces.UnidadeNegocio.Http.Dto.ControleAutomaticoMarcacoes.ControleAutomaticoMarcacoesGetDto"
                },
                "bloqueioPreMarcacao": {
                    "$ref": "#/definitions/Application.Interfaces.UnidadeNegocio.Http.Dto.ControleAutomaticoMarcacoes.ControleAutomaticoMarcacoesGetDto"
                },
                "trsnetAtivo": {
                    "type": "boolean"
                },
                "preReservaAtiva": {
                    "type": "boolean"
                },
                "centralPaletesOnline": {
                    "type": "boolean"
                },
                "urlCentralPaletes": {
                    "type": "string"
                },
                "horarioCorteCIFRetira": {
                    "type": "string"
                },
                "minutosPainel": {
                    "format": "int32",
                    "type": "integer"
                },
                "percentualMinimoCarregamento": {
                    "format": "double",
                    "type": "number"
                },
                "desvioPadraoChamado": {
                    "type": "string"
                },
                "qntPlacaHabilitadaCarregamento": {
                    "format": "int32",
                    "type": "integer"
                },
                "flgColetorAtivo": {
                    "type": "boolean"
                },
                "transportadoraMovcId": {
                    "format": "uuid",
                    "type": "string"
                },
                "preReservaRequerCheckin": {
                    "type": "boolean"
                },
                "tempoToleranciaCheckin": {
                    "format": "int32",
                    "type": "integer"
                },
                "tempoToleranciaAtribuicaoCargaManual": {
                    "format": "int32",
                    "type": "integer"
                },
                "transportadoraMovc": {
                    "$ref": "#/definitions/Domain.Transportadora.Model.Transportadora"
                },
                "listRoterizador": {
                    "type": "string"
                },
                "horariosAtendimentoApp": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.UnidadeNegocio.Http.Dto.HorarioAtendimento.HorarioAtendimentoAppGetDto"
                    }
                },
                "tipoAutenticacaoTotem": {
                    "format": "int32",
                    "enum": [
                        1,
                        2,
                        3,
                        4
                    ],
                    "type": "integer"
                }
            }
        },
        "Application.Interfaces.Regiao.Http.Dto.Itinerario.RegiaoItinerarioGetDto": {
            "type": "object",
            "properties": {
                "regiao": {
                    "$ref": "#/definitions/Application.Interfaces.Regiao.Http.Dto.RegiaoGetDto"
                },
                "itinerarios": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.Motorista.Http.Dto.ItinerarioGetDto"
                    }
                }
            }
        },
        "Application.Interfaces.v2.Tickets.Dto.AnexoDto": {
            "type": "object",
            "properties": {
                "tipo": {
                    "format": "int32",
                    "description": "Tipo do Anexo",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8
                    ],
                    "type": "integer"
                },
                "originalFileName": {
                    "description": "Nome original",
                    "type": "string"
                },
                "publicURL": {
                    "description": "URL do documento",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.UnidadeNegocio.Http.Dto.HorarioAtendimento.HorarioAtendimentoGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "inicial": {
                    "type": "string"
                },
                "final": {
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.UnidadeNegocio.Http.Dto.ControleAutomaticoMarcacoes.ControleAutomaticoMarcacoesGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "tipoControle": {
                    "format": "int32",
                    "enum": [
                        1,
                        2,
                        3
                    ],
                    "type": "integer"
                },
                "cif": {
                    "type": "boolean"
                },
                "cifHora": {
                    "type": "string"
                },
                "cifToleranciaChegada": {
                    "format": "int32",
                    "type": "integer"
                },
                "cifRetira": {
                    "type": "boolean"
                },
                "cifRetiraHora": {
                    "type": "string"
                },
                "cifRetiraToleranciaChegada": {
                    "format": "int32",
                    "type": "integer"
                },
                "fob": {
                    "type": "boolean"
                },
                "fobHora": {
                    "type": "string"
                },
                "fobToleranciaChegada": {
                    "format": "int32",
                    "type": "integer"
                },
                "transferencia": {
                    "type": "boolean"
                },
                "transferenciaHora": {
                    "type": "string"
                },
                "transferenciaToleranciaChegada": {
                    "format": "int32",
                    "type": "integer"
                },
                "descarga": {
                    "type": "boolean"
                },
                "descargaHora": {
                    "type": "string"
                },
                "descargaToleranciaChegada": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "Application.Interfaces.UnidadeNegocio.Http.Dto.HorarioAtendimento.HorarioAtendimentoAppGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "inicial": {
                    "type": "string"
                },
                "final": {
                    "type": "string"
                },
                "diaSemana": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "Application.Interfaces.Regiao.Http.Dto.RegiaoGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "codigo": {
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                },
                "unidadeNegocio": {
                    "$ref": "#/definitions/Application.Interfaces.UnidadeNegocio.Http.Dto.UnidadeNegocioGetDto"
                }
            }
        },
        "Application.Interfaces.Motorista.Http.Dto.ItinerarioGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "unidadeNegocio": {
                    "$ref": "#/definitions/Application.Interfaces.UnidadeNegocio.Http.Dto.UnidadeNegocioGetDto"
                },
                "regiao": {
                    "$ref": "#/definitions/Application.Interfaces.Regiao.Http.Dto.RegiaoGetDto"
                },
                "codigo": {
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                },
                "distancia": {
                    "format": "double",
                    "type": "number"
                },
                "zona": {
                    "$ref": "#/definitions/Application.Interfaces.Zona.Http.Dto.ZonaGetDto"
                },
                "pais": {
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.Zona.Http.Dto.ZonaGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.RegiaoMotorista.Http.Dto.RegiaoMotoristaTotemGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "motoristaId": {
                    "format": "uuid",
                    "type": "string"
                },
                "regiaoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "regiao": {
                    "$ref": "#/definitions/Application.Interfaces.Regiao.Http.Dto.RegiaoTotemGetDto"
                }
            }
        },
        "Application.Interfaces.Regiao.Http.Dto.RegiaoTotemGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "codigo": {
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                },
                "unidadeNegocioId": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.Regiao.Http.Dto.RegiaoCodigoEDescricaoGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.v2.Motoristas.Dto.BloqueiosMarcacaoAppMotoristaDto": {
            "type": "object",
            "properties": {
                "bloqueado": {
                    "type": "boolean"
                },
                "motivo": {
                    "type": "string"
                },
                "dataDesbloqueio": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.v2.Motoristas.Dto.UnidadeNegocioMotoristaFavoritaDto": {
            "description": "Dados para favoritar ou desfavoritar uma unidade de negócio do motorista",
            "type": "object",
            "properties": {
                "motoristaCpf": {
                    "description": "CPF do motorista",
                    "type": "string"
                },
                "unidadeNegocioId": {
                    "format": "uuid",
                    "description": "Id da unidade de negócio",
                    "type": "string"
                },
                "favorita": {
                    "description": "status da unidade de negócio favorita do motorista",
                    "type": "boolean"
                }
            }
        },
        "Domain.MovCContratoRepom.Model.MovCContratoRepom": {
            "required": [
                "cpfMotorista",
                "numeroContratoRepom",
                "numeroContratoKMM",
                "branchIdRepom",
                "dataContrato",
                "cnpjEmissor",
                "statusContrato"
            ],
            "type": "object",
            "properties": {
                "cpfMotorista": {
                    "type": "string"
                },
                "numeroContratoRepom": {
                    "type": "string"
                },
                "numeroContratoKMM": {
                    "type": "string"
                },
                "branchIdRepom": {
                    "type": "string"
                },
                "dataContrato": {
                    "format": "date-time",
                    "type": "string"
                },
                "cnpjEmissor": {
                    "type": "string"
                },
                "statusContrato": {
                    "format": "int32",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                    ],
                    "type": "integer"
                },
                "meioQuitacao": {
                    "format": "int32",
                    "enum": [
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "mensagem": {
                    "type": "string"
                },
                "valorTotal": {
                    "format": "double",
                    "type": "number"
                },
                "valorAdiantado": {
                    "format": "double",
                    "type": "number"
                },
                "valorPendente": {
                    "format": "double",
                    "type": "number"
                },
                "notasFiscais": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Domain.MovCContratoRepom.Model.NotaFiscal.MovCNotaFiscal"
                    }
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Domain.MovCContratoRepom.Model.NotaFiscal.MovCNotaFiscal": {
            "required": [
                "numeroNF",
                "serieNF",
                "dataEmissaoNF",
                "codigoAcessoNF",
                "cpfMotorista",
                "statusEntrega"
            ],
            "type": "object",
            "properties": {
                "movCContratoRepomId": {
                    "format": "uuid",
                    "type": "string"
                },
                "numeroNF": {
                    "type": "string"
                },
                "serieNF": {
                    "type": "string"
                },
                "dataEmissaoNF": {
                    "format": "date-time",
                    "type": "string"
                },
                "codigoAcessoNF": {
                    "type": "string"
                },
                "cpfMotorista": {
                    "type": "string"
                },
                "statusEntrega": {
                    "format": "int32",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                    ],
                    "type": "integer"
                },
                "qtdTentativasValidacao": {
                    "format": "int32",
                    "type": "integer"
                },
                "qtdTentativasValidacaoRestantes": {
                    "format": "int32",
                    "type": "integer"
                },
                "contratoRepom": {
                    "$ref": "#/definitions/Domain.MovCContratoRepom.Model.MovCContratoRepom"
                },
                "canhotos": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Domain.MovCContratoRepom.Model.NotaFiscalCanhoto.MovCNotaFiscalCanhoto"
                    }
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Domain.MovCContratoRepom.Model.NotaFiscalCanhoto.MovCNotaFiscalCanhoto": {
            "type": "object",
            "properties": {
                "dataCriacao": {
                    "format": "date-time",
                    "type": "string"
                },
                "urlCanhoto": {
                    "type": "string"
                },
                "urlCanhotoDataHora": {
                    "type": "string"
                },
                "percentualConfiancaDataHora": {
                    "format": "double",
                    "type": "number"
                },
                "reconhecimentoDataHoraOK": {
                    "type": "boolean"
                },
                "motivoAuditoriaDataHora": {
                    "format": "int32",
                    "enum": [
                        1,
                        2,
                        4,
                        8,
                        16,
                        32,
                        64,
                        128
                    ],
                    "type": "integer"
                },
                "urlCanhotoAssinatura": {
                    "type": "string"
                },
                "percentualConfiancaAssinatura": {
                    "format": "double",
                    "type": "number"
                },
                "reconhecimentoAssinaturaOK": {
                    "type": "boolean"
                },
                "motivoAuditoriaAssinatura": {
                    "format": "int32",
                    "enum": [
                        1,
                        2,
                        4,
                        8,
                        16,
                        32,
                        64,
                        128
                    ],
                    "type": "integer"
                },
                "urlCanhotoQRCode": {
                    "type": "string"
                },
                "qrCodeOK": {
                    "type": "boolean"
                },
                "motivoAuditoriaQRCode": {
                    "format": "int32",
                    "enum": [
                        1,
                        2,
                        4,
                        8,
                        16,
                        32,
                        64,
                        128
                    ],
                    "type": "integer"
                },
                "auditar": {
                    "type": "boolean"
                },
                "movCNotaFiscalId": {
                    "format": "uuid",
                    "type": "string"
                },
                "notaFiscal": {
                    "$ref": "#/definitions/Domain.MovCContratoRepom.Model.NotaFiscal.MovCNotaFiscal"
                },
                "resultadoAuditoriaDataHoraValido": {
                    "type": "boolean"
                },
                "resultadoAuditoriaAssinaturaValido": {
                    "type": "boolean"
                },
                "treinoRealizado": {
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.v2.MovCContratoRepom.Dto.ValidacaoCanhotoNfPostDto": {
            "type": "object",
            "properties": {
                "notaFiscalId": {
                    "format": "uuid",
                    "type": "string"
                },
                "urlCanhoto": {
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.v2.MovCContratoRepom.Dto.GetCanhotoAuditoriaAleatorioResultModel": {
            "type": "object",
            "properties": {
                "canhoto": {
                    "$ref": "#/definitions/Domain.MovCContratoRepom.Model.NotaFiscalCanhoto.MovCNotaFiscalCanhoto"
                },
                "qtdRestanteDeCanhotosAuditoria": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "Application.Interfaces.v2.MovCContratoRepom.Dto.CanhotoValidacaoStatusPutDto": {
            "type": "object",
            "properties": {
                "isCanhoto": {
                    "type": "boolean"
                },
                "dataHoraPreenchido": {
                    "type": "boolean"
                },
                "assinaturaPreenchido": {
                    "type": "boolean"
                },
                "descartarAuditoria": {
                    "type": "boolean"
                }
            }
        },
        "Application.Interfaces.v2.MovCNotaFiscal.Dto.FindNotasFiscaisDto": {
            "type": "object",
            "properties": {
                "cpfMotorista": {
                    "type": "string"
                },
                "numeroNF": {
                    "type": "string"
                },
                "serieNF": {
                    "type": "string"
                },
                "dataNFInicio": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataNFFim": {
                    "format": "date-time",
                    "type": "string"
                },
                "numeroContrato": {
                    "type": "string"
                },
                "dataContratoInicio": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataContratoFim": {
                    "format": "date-time",
                    "type": "string"
                },
                "statusContrato": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                        ],
                        "type": "integer"
                    }
                },
                "dataCanhotoInicio": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataCanhotoFim": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "VC.GestaoPatio.Common.Storage.Schemas.Tables.Parametro": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                },
                "tipo": {
                    "type": "string"
                },
                "valor": {
                    "type": "string"
                },
                "valoresPossiveis": {
                    "type": "string"
                },
                "partitionKey": {
                    "type": "string"
                },
                "rowKey": {
                    "type": "string"
                },
                "timestamp": {
                    "format": "date-time",
                    "type": "string"
                },
                "eTag": {
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.Pergunta.Http.Dto.PerguntaGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                },
                "tipo": {
                    "format": "int32",
                    "enum": [
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "pesquisaId": {
                    "format": "uuid",
                    "type": "string"
                },
                "dataCadastro": {
                    "format": "date-time",
                    "type": "string"
                },
                "respostas": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.Resposta.Http.Dto.RespostaGetDto"
                    }
                }
            }
        },
        "Application.Interfaces.Resposta.Http.Dto.RespostaGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                },
                "perguntaId": {
                    "format": "uuid",
                    "type": "string"
                },
                "dataCadastro": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.Pesquisa.Http.Dto.PesquisaGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                },
                "periodoInicio": {
                    "format": "date-time",
                    "type": "string"
                },
                "periodoFim": {
                    "format": "date-time",
                    "type": "string"
                },
                "unidadesNegocio": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.UnidadeNegocio.Http.Dto.UnidadeNegocioGetDto"
                    }
                }
            }
        },
        "Application.Interfaces.v2.Tickets.Dto.Motorista.TicketMotoristaPostDto": {
            "type": "object",
            "properties": {
                "ticketStatus": {
                    "description": "Status do ticket",
                    "type": "string"
                },
                "transportadoraCpfCnpj": {
                    "description": "Documento Cpf ou CNPJ da transportadora que cadastrou",
                    "type": "string"
                },
                "nomeCompleto": {
                    "description": "Nome do Motorista",
                    "type": "string"
                },
                "motoristaAutonomo": {
                    "description": "Motorista autônomo",
                    "type": "boolean"
                },
                "dataNascimento": {
                    "format": "date-time",
                    "description": "Data de nascimento",
                    "type": "string"
                },
                "celular": {
                    "description": "Celular do Motorista",
                    "type": "string"
                },
                "cpf": {
                    "description": "CPF do motorista",
                    "type": "string"
                },
                "cnh": {
                    "description": "CNH do motorista",
                    "type": "string"
                },
                "cep": {
                    "description": "CEP do Motorista",
                    "type": "string"
                },
                "logradouro": {
                    "description": "Logradouro do motorista",
                    "type": "string"
                },
                "bairro": {
                    "description": "Logradouro do motorista",
                    "type": "string"
                },
                "cidade": {
                    "description": "Cidade",
                    "type": "string"
                },
                "uf": {
                    "description": "UF",
                    "type": "string"
                },
                "pais": {
                    "description": "País",
                    "type": "string"
                },
                "numero": {
                    "description": "Número endereço",
                    "type": "string"
                },
                "complemento": {
                    "description": "Complemento do endereço",
                    "type": "string"
                },
                "veiculoPlaca": {
                    "description": "Placa do veículo ao qual deseja-se vincular",
                    "type": "string"
                },
                "treinamentos": {
                    "description": "Treinamentos do motorista",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.AnexoComData.AnexoComDataDto"
                    }
                },
                "anexos": {
                    "description": "Anexos do cadastro",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.AnexoDto"
                    }
                },
                "ticketRetorno": {
                    "description": "json de um ticke que será gerado quando o ticket principal for aprovado",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.TicketRetornoPostDto"
                    }
                }
            }
        },
        "Application.Interfaces.v2.Tickets.Dto.AnexoComData.AnexoComDataDto": {
            "type": "object",
            "properties": {
                "tipo": {
                    "format": "int32",
                    "description": "Laudos tipos \"laudoInmetro\", \"laudoSemestralManutencaoCargaCacamba\",\"laudoSistHidraulico\"\r\n\"laudoCondicaoCaminhaoAnual\",\"laudoTrimestral\",\"laudoSiloTrimestral\",\"laudoEspessura\"",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13
                    ],
                    "type": "integer"
                },
                "dataRealizacao": {
                    "format": "date-time",
                    "description": "Data que o laudo foi realizado",
                    "type": "string"
                },
                "originalFileName": {
                    "description": "Nome original",
                    "type": "string"
                },
                "publicURL": {
                    "description": "URL do documento",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.v2.Tickets.Dto.TicketRetornoPostDto": {
            "type": "object",
            "properties": {
                "tipo": {
                    "format": "int32",
                    "description": "tipo ticket retorno",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                    ],
                    "type": "integer"
                },
                "conteudo": {
                    "description": "json de um ticke que será gerado quando o ticket principal for aprovado",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.v2.Tickets.Dto.Transportadora.TicketTransportadoraPostDto": {
            "type": "object",
            "properties": {
                "ticketStatus": {
                    "description": "Status do ticket",
                    "type": "string"
                },
                "transportadoraCpfCnpj": {
                    "description": "Documento Cpf ou CNPJ",
                    "type": "string"
                },
                "tipoPessoa": {
                    "description": "Tipo de pessoa: PF ou PJ",
                    "type": "string"
                },
                "modalidade": {
                    "description": "Modalidade: CIF ou FOB",
                    "type": "string"
                },
                "nome": {
                    "description": "Nome ou razão social da transportadora",
                    "type": "string"
                },
                "inscricaoEstadual": {
                    "description": "Inscrição estadual",
                    "type": "string"
                },
                "inscricaoMunicipalOuRg": {
                    "description": "Inscrição municipal ou RG do motorista",
                    "type": "string"
                },
                "nitPis": {
                    "description": "NIT/PIS",
                    "type": "string"
                },
                "antt": {
                    "description": "Número registro ANTT",
                    "type": "string"
                },
                "dataRegistroAntt": {
                    "format": "date-time",
                    "description": "Data de registro ANTT",
                    "type": "string"
                },
                "observacoes": {
                    "description": "Observações adicionais",
                    "type": "string"
                },
                "telefoneFixo": {
                    "description": "Número de telefone fixo da transportadora",
                    "type": "string"
                },
                "celular": {
                    "description": "Número de celular da transportadora",
                    "type": "string"
                },
                "fax": {
                    "description": "Número de fax da transportadora",
                    "type": "string"
                },
                "email": {
                    "description": "Endereço de e-mail da transportadora",
                    "type": "string"
                },
                "dependentes": {
                    "description": "Nome ou razão social da transportadora",
                    "type": "string"
                },
                "dataNascimento": {
                    "format": "date-time",
                    "description": "Data de nascimento",
                    "type": "string"
                },
                "cep": {
                    "description": "CEP do Motorista",
                    "type": "string"
                },
                "logradouro": {
                    "description": "Logradouro do motorista",
                    "type": "string"
                },
                "bairro": {
                    "description": "Logradouro do motorista",
                    "type": "string"
                },
                "cidade": {
                    "description": "Cidade",
                    "type": "string"
                },
                "uf": {
                    "description": "UF",
                    "type": "string"
                },
                "pais": {
                    "description": "País",
                    "type": "string"
                },
                "numero": {
                    "description": "Número endereço",
                    "type": "string"
                },
                "complemento": {
                    "description": "Complemento do endereço",
                    "type": "string"
                },
                "banco": {
                    "description": "Descricao do Banco",
                    "type": "string"
                },
                "codigoBanco": {
                    "description": "Código do banco",
                    "type": "string"
                },
                "digitoBanco": {
                    "description": "Documento Cpf ou CNPJ",
                    "type": "string"
                },
                "agencia": {
                    "description": "Código da agência bancária com dígito",
                    "type": "string"
                },
                "digitoAgencia": {
                    "description": "Digito da agencia",
                    "type": "string"
                },
                "conta": {
                    "description": "Número da conta bancária",
                    "type": "string"
                },
                "digitoConta": {
                    "description": "Digito da conta bancária",
                    "type": "string"
                },
                "adiantamento": {
                    "description": "Autorizar o Adiamento",
                    "type": "boolean"
                },
                "veiculoPlaca": {
                    "description": "Placa do veículo ao qual deseja-se vincular",
                    "type": "string"
                },
                "anexos": {
                    "description": "Anexos do cadastro",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.AnexoDto"
                    }
                },
                "ticketRetorno": {
                    "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.TicketRetornoPostDto",
                    "description": "json de um ticke que será gerado quando o ticket principal for aprovado"
                }
            }
        },
        "Application.Interfaces.v2.Tickets.Dto.Veiculo.TicketVeiculoPostDto": {
            "type": "object",
            "properties": {
                "ticketStatus": {
                    "description": "Status do ticket",
                    "type": "string"
                },
                "transportadoraCpfCnpj": {
                    "description": "Documento Cpf ou CNPJ da transportadora que cadastrou",
                    "type": "string"
                },
                "motoristaCpf": {
                    "description": "Documento Cpf motoristas que cadastrou",
                    "type": "string"
                },
                "caracteristica": {
                    "description": "Caracteristica do veiculo",
                    "type": "string"
                },
                "tipoVeiculo": {
                    "description": "tipo de veículo:  \"Carga Seca\";  \"Caçamba\";  \"Silo\";  \"Tanque\",  \"Vagão\"",
                    "type": "string"
                },
                "categoria": {
                    "description": "Categoria do veiculo",
                    "type": "string"
                },
                "numEixos": {
                    "format": "int32",
                    "description": "Número de eixos",
                    "type": "integer"
                },
                "capacidadeCargaMax": {
                    "format": "double",
                    "description": "Capacidade de carga máxima do veiculo",
                    "type": "number"
                },
                "caracteristicaId": {
                    "format": "uuid",
                    "description": "Id da caracteristica do veículo",
                    "type": "string"
                },
                "categoriaId": {
                    "format": "uuid",
                    "description": "Id da categoria do veículo",
                    "type": "string"
                },
                "cavalo": {
                    "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.Veiculo.Veiculo",
                    "description": "Cavalo"
                },
                "carretas": {
                    "description": "Cavalo",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.Veiculo.Veiculo"
                    }
                },
                "anexos": {
                    "description": "Anexos do cadastro  \"art\", \"boletoArt\", \"comprovantePagamentoArt\",\"crlv\"",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.AnexoDto"
                    }
                },
                "dataLaudoCondicaoCaminhao": {
                    "format": "date-time",
                    "description": "data Laudo Condicao Caminhao",
                    "type": "string"
                },
                "datalaudoHidraulico": {
                    "format": "date-time",
                    "description": "data laudo Hidraulico",
                    "type": "string"
                },
                "datalaudoManutencao": {
                    "format": "date-time",
                    "description": "data laudo Manutencao",
                    "type": "string"
                },
                "datalaudoEstanqueidade": {
                    "format": "date-time",
                    "description": "data laudo Estanqueidade",
                    "type": "string"
                },
                "datalaudoTrimestral": {
                    "format": "date-time",
                    "description": "data laudo Trimestral",
                    "type": "string"
                },
                "datalaudoAnualInmetro": {
                    "format": "date-time",
                    "description": "data laudo Anual Inmetro",
                    "type": "string"
                },
                "dataUltimaInspecao": {
                    "format": "date-time",
                    "description": "data última inspeção",
                    "type": "string"
                },
                "anexoPlacaPreta": {
                    "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.Veiculo.AnexoDoc",
                    "description": "imagem da placa preta"
                },
                "anexoLaudoManutencao": {
                    "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.Veiculo.AnexoDoc",
                    "description": "imagem do laudo de manutenção"
                },
                "anexoLaudoSistemaHidraulico": {
                    "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.Veiculo.AnexoDoc",
                    "description": "imagem do laudo sistema hidráulico"
                },
                "anexoLaudoCondicaoCaminhao": {
                    "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.Veiculo.AnexoDoc",
                    "description": "imagem do laudo condição de caminhão"
                },
                "anexoLaudoEspessuraEstanqueidade": {
                    "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.Veiculo.AnexoDoc",
                    "description": "imagem do laudo espessura e estanqueidade"
                },
                "ticketRetorno": {
                    "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.TicketRetornoPostDto",
                    "description": "json de um ticke que será gerado quando o ticket principal for aprovado"
                },
                "valQtdCarretas": {
                    "format": "int32",
                    "description": "string contendo a quantidade de carretas da composição",
                    "type": "integer"
                }
            }
        },
        "Application.Interfaces.v2.Tickets.Dto.Veiculo.Veiculo": {
            "type": "object",
            "properties": {
                "placa": {
                    "description": "Placa do veículo",
                    "type": "string"
                },
                "codDnit": {
                    "description": "Codigo do Dnit",
                    "type": "string"
                },
                "renavam": {
                    "description": "Renavam",
                    "type": "string"
                },
                "chassi": {
                    "description": "Renavam",
                    "type": "string"
                },
                "anexoCrlv": {
                    "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.Veiculo.AnexoDoc",
                    "description": "imagem do crlv"
                },
                "anexoLaudoAnualInmetro": {
                    "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.Veiculo.AnexoDoc",
                    "description": "imagem do crlv"
                },
                "anexoLaudoTrimestral": {
                    "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.Veiculo.AnexoDoc",
                    "description": "imagem do crlv"
                },
                "placaAlumTara": {
                    "format": "double",
                    "description": "Tara da placa de aluminio",
                    "type": "number"
                },
                "placaAlumLotacao": {
                    "format": "double",
                    "description": "Lotacao da placa de aluminio",
                    "type": "number"
                },
                "placaAlumPbtc": {
                    "format": "double",
                    "description": "Pbtc da placa de aluminio",
                    "type": "number"
                },
                "anexoPlacaAlum": {
                    "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.Veiculo.AnexoDoc",
                    "description": "imagem da placa de aluminio"
                },
                "numEixos": {
                    "format": "int32",
                    "description": "Número de eixos",
                    "type": "integer"
                },
                "tipoVeiculoCaracteristica": {
                    "description": "Tipo Veiculo Caracteristica",
                    "type": "string"
                },
                "anexoImgDiagonal": {
                    "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.Veiculo.AnexoDoc",
                    "description": "imagem do veiculo diagonal"
                },
                "anexoImgLateral": {
                    "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.Veiculo.AnexoDoc",
                    "description": "imagem do veiculo lateral"
                },
                "anexoImgTraseira": {
                    "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.Veiculo.AnexoDoc",
                    "description": "imagem do veiculo traseira"
                },
                "anexoImgFrontal": {
                    "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.Veiculo.AnexoDoc",
                    "description": "imagem do veiculo frontal"
                }
            }
        },
        "Application.Interfaces.v2.Tickets.Dto.Veiculo.AnexoDoc": {
            "type": "object",
            "properties": {
                "originalFileName": {
                    "description": "Nome original",
                    "type": "string"
                },
                "publicURL": {
                    "description": "URL do documento",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.v2.Tickets.Dto.TransportadoraVinculo.VinculoMotorista.TicketVinculoMotoristaTransportadoraPostDto": {
            "type": "object",
            "properties": {
                "cpf": {
                    "description": "CPF do motorista",
                    "type": "string"
                },
                "transportadoraCpfCnpj": {
                    "description": "CPF/CNPJ da transportadora",
                    "type": "string"
                },
                "ticketRetorno": {
                    "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.TicketRetornoPostDto",
                    "description": "json de um ticke que será gerado quando o ticket principal for aprovado"
                }
            }
        },
        "Application.Interfaces.v2.Tickets.Dto.AtualizarStatusTicketDto": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Status",
                    "type": "string",
                    "example": "A"
                },
                "retorno": {
                    "description": "Detalhado do status",
                    "type": "string",
                    "example": "Razão x"
                }
            }
        },
        "Application.Interfaces.v2.Tickets.Dto.TicketGetDto": {
            "type": "object",
            "properties": {
                "numeroTicket": {
                    "format": "int32",
                    "description": "Número do ticket",
                    "type": "integer"
                },
                "numeroServiceNow": {
                    "description": "Número do ticket gerado pelo Service Now",
                    "type": "string"
                },
                "ticketTipo": {
                    "description": "Tipo do ticket",
                    "type": "string"
                },
                "ticketStatus": {
                    "description": "Status do ticket",
                    "type": "string"
                },
                "motoristaCpf": {
                    "description": "CPF do Motorista",
                    "type": "string"
                },
                "motoristaNome": {
                    "description": "Nome do Motorista",
                    "type": "string"
                },
                "transportadoraCpfCnpj": {
                    "description": "CPF ou CNPJ da transportadora",
                    "type": "string"
                },
                "transportadoraNome": {
                    "description": "Nome do Motorista",
                    "type": "string"
                },
                "veiculoPlaca": {
                    "description": "Placa do veículo",
                    "type": "string"
                },
                "dataCriacao": {
                    "format": "date-time",
                    "description": "Data de criação do ticket",
                    "type": "string"
                },
                "dataUltimaAlteracao": {
                    "format": "date-time",
                    "description": "Data da última alteração do ticket",
                    "type": "string"
                },
                "corpoTicket": {
                    "description": "Corpo do ticket enviado ao Service Now",
                    "type": "string"
                },
                "ativo": {
                    "description": "Utilizado para remoção lógica do registro",
                    "type": "boolean"
                },
                "observacao": {
                    "description": "Feedback do status do ticket",
                    "type": "string"
                },
                "slaTipoTicket": {
                    "format": "int32",
                    "description": "Sla de acordo com o tipo de ticket",
                    "type": "integer"
                }
            }
        },
        "Application.Interfaces.VeiculoTipo.Http.Dto.VeiculoTipoGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "codigo": {
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                },
                "valCapacidadeCargaMinima": {
                    "format": "double",
                    "type": "number"
                },
                "valCapacidadeCargaMaxima": {
                    "format": "double",
                    "type": "number"
                },
                "unCapacidadeCarga": {
                    "type": "string"
                },
                "valToleranciaPeso": {
                    "format": "double",
                    "type": "number"
                },
                "numEixos": {
                    "format": "int32",
                    "type": "integer"
                },
                "valQtdCarretas": {
                    "format": "int32",
                    "type": "integer"
                },
                "qtdPlacas": {
                    "format": "int32",
                    "type": "integer"
                },
                "qtdPaletes": {
                    "format": "int32",
                    "type": "integer"
                },
                "veiculoCategoriaId": {
                    "format": "uuid",
                    "type": "string"
                },
                "veiculoCategoria": {
                    "$ref": "#/definitions/Application.Interfaces.Veiculo.Http.Dto.Categoria.VeiculoCategoriaGetDto"
                }
            }
        },
        "Microsoft.AspNetCore.Mvc.NotFoundResult": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "format": "int32",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "Microsoft.AspNetCore.Mvc.FileStreamResult": {
            "type": "object",
            "properties": {
                "fileStream": {
                    "$ref": "#/definitions/System.IO.Stream"
                },
                "contentType": {
                    "type": "string",
                    "readOnly": true
                },
                "fileDownloadName": {
                    "type": "string"
                },
                "lastModified": {
                    "format": "date-time",
                    "type": "string"
                },
                "entityTag": {
                    "$ref": "#/definitions/Microsoft.Net.Http.Headers.EntityTagHeaderValue"
                },
                "enableRangeProcessing": {
                    "type": "boolean"
                }
            }
        },
        "Microsoft.Net.Http.Headers.EntityTagHeaderValue": {
            "type": "object",
            "properties": {
                "tag": {
                    "$ref": "#/definitions/Microsoft.Extensions.Primitives.StringSegment",
                    "readOnly": true
                },
                "isWeak": {
                    "type": "boolean",
                    "readOnly": true
                }
            }
        },
        "Microsoft.Extensions.Primitives.StringSegment": {
            "type": "object",
            "properties": {
                "buffer": {
                    "type": "string",
                    "readOnly": true
                },
                "offset": {
                    "format": "int32",
                    "type": "integer",
                    "readOnly": true
                },
                "length": {
                    "format": "int32",
                    "type": "integer",
                    "readOnly": true
                },
                "value": {
                    "type": "string",
                    "readOnly": true
                },
                "hasValue": {
                    "type": "boolean",
                    "readOnly": true
                }
            }
        },
        "System.Nullable": {
            "type": "object",
            "properties": {}
        },
        "Application.Interfaces.Sync.Dto.Agenda.AgendaSyncAssetsStatusDto": {
            "description": "Status do agendamento de sincronização do Totem",
            "type": "object",
            "properties": {
                "IdAgendaSyncAssets": {
                    "format": "uuid",
                    "description": "ID do status da agenda",
                    "type": "string"
                },
                "IdUnidadeNegocio": {
                    "format": "uuid",
                    "description": "ID da unidade de negócio",
                    "type": "string"
                },
                "CodigoVCTotem": {
                    "description": "Código VC do Totem",
                    "type": "string"
                },
                "DataHoraUTCStatus": {
                    "format": "date-time",
                    "description": "Data/hora do status em formato UTC",
                    "type": "string"
                },
                "Status": {
                    "description": "Status do agendamento (Sucesso ou Erro)",
                    "type": "string"
                },
                "Mensagem": {
                    "description": "Mensagem descrevendo o status (somente se Erro)",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.ParametrizacaoTotem.Http.Dto.TotemGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "unidadeNegocio": {
                    "$ref": "#/definitions/Application.Interfaces.UnidadeNegocio.Http.Dto.UnidadeNegocioGetDto"
                },
                "descricao": {
                    "type": "string"
                },
                "flgPreencherPaleteManualmente": {
                    "type": "boolean"
                },
                "flgPreencherNFManualmente": {
                    "type": "boolean"
                },
                "flgPreencherLacreManualmente": {
                    "type": "boolean"
                },
                "flgPreencherRepomManualmente": {
                    "type": "boolean"
                },
                "flgLeitorDanificado": {
                    "type": "boolean"
                },
                "ativo": {
                    "type": "boolean"
                },
                "valQtdDigitosLacre": {
                    "format": "int32",
                    "type": "integer"
                },
                "tipoCarregamentoIds": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "flgIntegracaoMotorista": {
                    "type": "boolean"
                }
            }
        },
        "Application.Interfaces.Transportadora.Http.Dto.TransportadoraGetPagedDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "codigo": {
                    "type": "string"
                },
                "nome": {
                    "type": "string"
                },
                "cnpj": {
                    "type": "string"
                },
                "cpf": {
                    "type": "string"
                },
                "tipoPessoa": {
                    "type": "string"
                },
                "modalidade": {
                    "type": "string"
                },
                "dataNascimento": {
                    "format": "date-time",
                    "type": "string"
                },
                "nitPis": {
                    "type": "string"
                },
                "inscricaoMunicipalRg": {
                    "type": "string"
                },
                "inscricaoEstadual": {
                    "type": "string"
                },
                "enderecoCep": {
                    "type": "string"
                },
                "enderecoRua": {
                    "type": "string"
                },
                "enderecoNumero": {
                    "type": "string"
                },
                "enderecoComplemento": {
                    "type": "string"
                },
                "enderecoBairro": {
                    "type": "string"
                },
                "enderecoCidade": {
                    "type": "string"
                },
                "enderecoPais": {
                    "type": "string"
                },
                "enderecoUf": {
                    "type": "string"
                },
                "dependentes": {
                    "format": "int32",
                    "type": "integer"
                },
                "numeroTelefoneCelular": {
                    "type": "string"
                },
                "numeroTelefoneFixo": {
                    "type": "string"
                },
                "numeroTelefoneFax": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "flgAdiantamento": {
                    "type": "boolean"
                },
                "contaBancariaNomeBanco": {
                    "type": "string"
                },
                "contaBancariaNumeroBanco": {
                    "type": "string"
                },
                "contaBancariaDigitoBanco": {
                    "type": "string"
                },
                "contaBancariaNumeroAgencia": {
                    "type": "string"
                },
                "contaBancariaDigitoAgencia": {
                    "type": "string"
                },
                "contaBancariaNumeroConta": {
                    "type": "string"
                },
                "contaBancariaDigitoConta": {
                    "type": "string"
                },
                "numeroANTT": {
                    "type": "string"
                },
                "dataVencANTT": {
                    "format": "date-time",
                    "type": "string"
                },
                "favorita": {
                    "type": "boolean"
                },
                "motoristas": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.Motorista.Http.Dto.MotoristaGetDto"
                    }
                },
                "veiculos": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.Veiculo.Http.Dto.VeiculoGetDto"
                    }
                },
                "anexos": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.v2.Tickets.Dto.AnexoDto"
                    }
                }
            }
        },
        "Application.Interfaces.Veiculo.Http.Dto.VeiculoGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "empresa": {
                    "type": "string"
                },
                "placa": {
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                },
                "tipoVeiculoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "qtdEixos": {
                    "format": "int32",
                    "type": "integer"
                },
                "qtdEixoRetorno": {
                    "format": "int32",
                    "type": "integer"
                },
                "anoModelo": {
                    "format": "int32",
                    "type": "integer"
                },
                "pesoTara": {
                    "format": "double",
                    "type": "number"
                },
                "flgRastreamento": {
                    "type": "boolean"
                },
                "tipoRastreabilidade": {
                    "type": "string"
                },
                "flgCompressor": {
                    "type": "boolean"
                },
                "flgDescargaMecanizada": {
                    "type": "boolean"
                },
                "flgLicenciado": {
                    "type": "boolean"
                },
                "dataLicenciamento": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataValidadeLicenciamento": {
                    "format": "date-time",
                    "type": "string"
                },
                "flgAtivo": {
                    "type": "boolean"
                },
                "descMotivo": {
                    "type": "string"
                },
                "renavam": {
                    "type": "string"
                },
                "chassi": {
                    "type": "string"
                },
                "placaUf": {
                    "type": "string"
                },
                "numEixos": {
                    "format": "int32",
                    "type": "integer"
                },
                "numEixosRetorno": {
                    "format": "int32",
                    "type": "integer"
                },
                "placaAlumTara": {
                    "format": "double",
                    "type": "number"
                },
                "placaAlumLotacao": {
                    "format": "double",
                    "type": "number"
                },
                "placaAlumPBTC": {
                    "format": "double",
                    "type": "number"
                },
                "dataUltAuditoria": {
                    "format": "date-time",
                    "type": "string"
                },
                "codDNIT": {
                    "type": "string"
                },
                "urlImgFrontal": {
                    "type": "string"
                },
                "urlImgLateral": {
                    "type": "string"
                },
                "urlImgTraseira": {
                    "type": "string"
                },
                "urlImgDiagonal": {
                    "type": "string"
                },
                "urlImgPlacaAlum": {
                    "type": "string"
                },
                "tipo": {
                    "$ref": "#/definitions/Application.Interfaces.VeiculoTipo.Http.Dto.VeiculoTipoGetDto"
                },
                "veiculoCategoria": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        3
                    ],
                    "type": "integer"
                },
                "laudos": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.VeiculoLaudo.Http.Dto.VeiculoLaudoGetDto"
                    }
                },
                "transportadoras": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Application.Interfaces.Transportadora.Http.Dto.TransportadoraGetPagedDto"
                    }
                }
            }
        },
        "Application.Interfaces.VeiculoLaudo.Http.Dto.VeiculoLaudoGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "veiculoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "nome": {
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                },
                "dataEmissao": {
                    "format": "date-time",
                    "type": "string"
                },
                "dataValidade": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "Domain.Transportadora.Model.TransportadoraMotoristaDto": {
            "type": "object",
            "properties": {
                "cpf": {
                    "type": "string"
                },
                "nome": {
                    "type": "string"
                },
                "semaforo": {
                    "format": "int32",
                    "type": "integer"
                },
                "vinculado": {
                    "type": "boolean"
                }
            }
        },
        "Application.Interfaces.v2.Transportadoras.Dto.SituacaoTransportadoraGeralDto": {
            "type": "object",
            "properties": {
                "situacao": {
                    "format": "int32",
                    "description": "Situacao geral do motorista",
                    "type": "integer"
                },
                "motorista": {
                    "format": "int32",
                    "description": "Situacao do motorista",
                    "type": "integer"
                },
                "motoristas": {
                    "format": "int32",
                    "description": "Situacao do motorista",
                    "type": "integer"
                },
                "veiculo": {
                    "format": "int32",
                    "description": "Situacao do veiculo do motorista",
                    "type": "integer"
                },
                "transportadora": {
                    "format": "int32",
                    "description": "Situacao da transportadora",
                    "type": "integer"
                },
                "transportadoras": {
                    "format": "int32",
                    "description": "Situacao da transportadora",
                    "type": "integer"
                }
            }
        },
        "Domain.ComposicaoVeiculoTransportadora.Model.ComposicaoVeiculoTransportadora": {
            "required": [
                "transportadoraCpfCnpj",
                "composicaoVeiculoId"
            ],
            "type": "object",
            "properties": {
                "transportadoraCpfCnpj": {
                    "type": "string"
                },
                "composicaoVeiculoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "favorito": {
                    "type": "boolean"
                },
                "composicaoVeiculo": {
                    "$ref": "#/definitions/Domain.ComposicaoVeiculo.Model.ComposicaoVeiculo"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.Veiculo.Http.Dto.MotoristaParceiro.VeiculoMotoristaParceiroGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                },
                "placa": {
                    "type": "string"
                },
                "flgAtivo": {
                    "type": "boolean"
                },
                "tipoValCapacidadeMaxima": {
                    "format": "double",
                    "type": "number"
                },
                "tipoId": {
                    "format": "int32",
                    "type": "integer"
                },
                "tipoDescricao": {
                    "type": "string"
                },
                "qtdPlacas": {
                    "format": "int32",
                    "type": "integer"
                },
                "categoriaDescricao": {
                    "type": "string"
                },
                "categoriaId": {
                    "format": "uuid",
                    "type": "string"
                },
                "dataValidadeLicenciamento": {
                    "format": "date-time",
                    "type": "string"
                },
                "semaforo": {
                    "format": "int32",
                    "type": "integer"
                },
                "valQtdCarretas": {
                    "format": "int32",
                    "type": "integer"
                },
                "codDnit": {
                    "type": "string"
                },
                "pbtc": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "Application.Interfaces.Transportadora.Http.Dto.VeiculoTransportadoraGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "transportadoraCnpj": {
                    "type": "string"
                },
                "transportadoraCpf": {
                    "type": "string"
                },
                "transportadoraNome": {
                    "type": "string"
                },
                "transportadoraCodigo": {
                    "type": "string"
                },
                "veiculoPlaca": {
                    "type": "string"
                },
                "veiculoUf": {
                    "type": "string"
                },
                "veiculoDescricao": {
                    "type": "string"
                },
                "veiculoEmpresa": {
                    "type": "string"
                },
                "veiculoAtivo": {
                    "type": "boolean"
                },
                "veiculoRenavam": {
                    "type": "string"
                },
                "veiculoTipoDescricao": {
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.v2.Transportadoras.Dto.ComposicaoVeiculoTransportadoraFavorita": {
            "description": "Dados para favoritar ou desfavoritar uma composicao de veiculo",
            "type": "object",
            "properties": {
                "transportadorasCpfCpj": {
                    "description": "CPF do motorista",
                    "type": "string"
                },
                "cavaloPlaca": {
                    "description": "Placa do cavalo da composicao",
                    "type": "string"
                },
                "favorita": {
                    "description": "favorita ou desfavorita uma composicao",
                    "type": "boolean"
                }
            }
        },
        "Application.Interfaces.v2.Transportadoras.Dto.VinculoVeiculo.VinculoTransportadoraVeiculoPostDto": {
            "type": "object",
            "properties": {
                "transportadoraCpfCnpj": {
                    "description": "CPF/CNPJ da transportadora",
                    "type": "string"
                },
                "cavaloPlaca": {
                    "description": "Placa do veículo",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.v2.Transportadoras.Dto.VinculoMotorista.VinculoTransportadoraMotoristaPostDto": {
            "type": "object",
            "properties": {
                "transportadoraCpfCnpj": {
                    "description": "CPF/CNPJ da transportadora",
                    "type": "string"
                },
                "motoristaCpf": {
                    "description": "Placa do veículo",
                    "type": "string"
                }
            }
        },
        "Domain.UnidadeNegocio.Model.HorarioAtendimentoApp.HorarioAtendimentoAppGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "unidadeNegocioId": {
                    "format": "uuid",
                    "type": "string"
                },
                "unidadeNegocio": {
                    "$ref": "#/definitions/Domain.UnidadeNegocio.Model.UnidadeNegocio"
                },
                "diaSemana": {
                    "format": "int32",
                    "type": "integer"
                },
                "horaInicial": {
                    "type": "string"
                },
                "horaFinal": {
                    "type": "string"
                }
            }
        },
        "Microsoft.AspNetCore.Mvc.OkResult": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "format": "int32",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "Application.Interfaces.UnidadeNegocio.Http.Dto.UnidadeNegocioSimplifiedGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "codigo": {
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.ParametrizacaoTotem.Http.Dto.ParametrizacaoTotemTipoCarregamentoGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "parametrizacaoTotemId": {
                    "format": "uuid",
                    "type": "string"
                },
                "tipoCarregamentoId": {
                    "format": "uuid",
                    "type": "string"
                },
                "tipoCarregamento": {
                    "$ref": "#/definitions/Application.Interfaces.ParametrizacaoTotem.Http.Dto.TipoCarregamentoGetDto"
                }
            }
        },
        "Application.Interfaces.ParametrizacaoTotem.Http.Dto.TipoCarregamentoGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "descricao": {
                    "type": "string"
                },
                "categoria": {
                    "format": "int32",
                    "enum": [
                        0,
                        1
                    ],
                    "type": "integer"
                },
                "flgPossuiLacre": {
                    "type": "boolean"
                },
                "flgSolicitaChapaTotem": {
                    "type": "boolean"
                },
                "flgPossuiGradeAlta": {
                    "type": "boolean"
                },
                "flgDescargaFumaca": {
                    "type": "boolean"
                }
            }
        },
        "Domain.UnidadeNegocio.Model.HorarioAtendimento.HorarioAtendimentoUnidadeDto": {
            "type": "object",
            "properties": {
                "horaInicial": {
                    "type": "string"
                },
                "horaFinal": {
                    "type": "string"
                },
                "estaDentroDoHorarioDeFucionamento": {
                    "type": "boolean"
                }
            }
        },
        "Application.Interfaces.v2.UnidadesNegocio.Dto.MarkupValorTotalFreteDto": {
            "type": "object",
            "properties": {
                "UnidadeNegocioId": {
                    "format": "uuid",
                    "type": "string"
                },
                "PercentualMarkup": {
                    "format": "double",
                    "type": "number"
                },
                "IdUsuarioUltimaAlteracao": {
                    "format": "uuid",
                    "type": "string"
                },
                "NomeUsuarioUltimaAlteracao": {
                    "type": "string"
                },
                "DataUTCUltimaAlteracao": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "Domain.UnidadeNegocio.Model.MarkupValorTotalFrete.MarkupValorTotalFrete": {
            "required": [
                "percentualMarkup",
                "idUsuarioUltimaAlteracao",
                "nomeUsuarioUltimaAlteracao",
                "dataUTCUltimaAlteracao"
            ],
            "type": "object",
            "properties": {
                "unidadeNegocioId": {
                    "format": "uuid",
                    "type": "string"
                },
                "percentualMarkup": {
                    "format": "double",
                    "type": "number"
                },
                "idUsuarioUltimaAlteracao": {
                    "format": "uuid",
                    "type": "string"
                },
                "nomeUsuarioUltimaAlteracao": {
                    "type": "string"
                },
                "dataUTCUltimaAlteracao": {
                    "format": "date-time",
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.v2.Usuarios.Dto.UsuariosLoginPostDto": {
            "type": "object",
            "properties": {
                "cpfCnpj": {
                    "description": "CPF ou CNPJ do usuário",
                    "type": "string"
                },
                "senha": {
                    "description": "Senha do usuário",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.v2.Usuarios.Dto.UsuariosGetExisteDto": {
            "type": "object",
            "properties": {
                "existeUsuario": {
                    "type": "boolean"
                }
            }
        },
        "Application.Interfaces.v2.Usuarios.Dto.UsuariosAddPostDto": {
            "type": "object",
            "properties": {
                "cpfCnpj": {
                    "description": "CPF ou CNPJ do usuário",
                    "type": "string"
                },
                "senha": {
                    "description": "Senha do usuário",
                    "type": "string"
                },
                "unidadedeNegocioid": {
                    "format": "uuid",
                    "type": "string"
                },
                "nome": {
                    "description": "Nome completo do usuário",
                    "type": "string"
                },
                "sobrenome": {
                    "description": "Sobrenome do usuário",
                    "type": "string"
                },
                "numeroCelularCompleto": {
                    "description": "Nome de telefone celular com DDD do usuário",
                    "type": "string"
                },
                "email": {
                    "description": "E-mail do usuário",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.v2.Usuarios.Dto.UsuariosGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "nome": {
                    "type": "string"
                },
                "sobrenome": {
                    "type": "string"
                },
                "telefone": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "rg": {
                    "type": "string"
                },
                "cpfCnpj": {
                    "type": "string"
                },
                "idExternal": {
                    "format": "uuid",
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "Integration.Domain.AppMotorista.Model.Integration.UserResetPasswordModel": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                },
                "novaSenha": {
                    "type": "string"
                }
            }
        },
        "Domain.DNIT.Model.VeiculoDNIT.DNITVeiculo": {
            "required": [
                "codigoDnit",
                "tipoVeiculo",
                "numeroEixos"
            ],
            "type": "object",
            "properties": {
                "codigoDnit": {
                    "type": "string"
                },
                "tipoVeiculo": {
                    "type": "string"
                },
                "numeroEixos": {
                    "format": "int32",
                    "type": "integer"
                },
                "descVeiculo": {
                    "type": "string"
                },
                "distanciaEixos": {
                    "format": "int32",
                    "type": "integer"
                },
                "pbtc": {
                    "format": "double",
                    "type": "number"
                },
                "tara": {
                    "format": "double",
                    "type": "number"
                },
                "lotacao": {
                    "format": "double",
                    "type": "number"
                },
                "fotoDNIT": {
                    "type": "string"
                },
                "ativo": {
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.v2.VeiculoDNIT.Dto.ComposicaoVeiculoDNITGetDto": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Id",
                    "type": "string"
                },
                "codigoDnit": {
                    "description": "Código DNIT",
                    "type": "string"
                },
                "tipoVeiculo": {
                    "description": "Tipo Veículo",
                    "type": "string"
                },
                "numeroEixos": {
                    "description": "Número Eixos",
                    "type": "string"
                },
                "distanciaEixos": {
                    "description": "Distância Eixos",
                    "type": "string"
                },
                "pbtc": {
                    "description": "PBTC",
                    "type": "string"
                },
                "fotoDnit": {
                    "description": "Foto DNIT",
                    "type": "string"
                },
                "tara": {
                    "description": "Tara",
                    "type": "string"
                },
                "lotacao": {
                    "description": "Lotação",
                    "type": "string"
                },
                "descVeiculo": {
                    "description": "Desc Veículo",
                    "type": "string"
                }
            }
        },
        "Application.Interfaces.v2.VeiculoDNIT.Dto.ComposicaoVeiculoPendenciasDto": {
            "type": "object",
            "properties": {
                "placa": {
                    "description": "Placa do veículo",
                    "type": "string"
                },
                "pendencias": {
                    "description": "Pendências do veículo",
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "Domain.SemaforoSituacaoCadastral.Model.SemaforoVeiculoDto": {
            "type": "object",
            "properties": {
                "veiculoPlaca": {
                    "type": "string"
                },
                "tipo": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17
                    ],
                    "type": "integer"
                },
                "descricao": {
                    "type": "string"
                },
                "semaforo": {
                    "format": "int32",
                    "type": "integer"
                },
                "dataVencimento": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "MarcacaoDto": {
            "type": "object",
            "properties": {
                "motorista": {
                    "$ref": "#/definitions/MotoristaDto"
                },
                "veiculos": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VeiculoDto"
                    }
                }
            }
        },
        "MotoristaDto": {
            "type": "object",
            "properties": {
                "cpf": {
                    "type": "string"
                },
                "nome": {
                    "type": "string"
                },
                "cep": {
                    "type": "string"
                },
                "endereco": {
                    "type": "string"
                },
                "numero": {
                    "type": "string"
                },
                "complemento": {
                    "type": "string"
                },
                "bairro": {
                    "type": "string"
                },
                "uf": {
                    "type": "string"
                },
                "municipio": {
                    "type": "string"
                },
                "sexo": {
                    "type": "string"
                },
                "celular": {
                    "type": "string"
                },
                "telefone": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "cartao_repom": {
                    "type": "string"
                },
                "cartao_repom_movc": {
                    "type": "string"
                },
                "pis": {
                    "type": "string"
                },
                "data_nascimento": {
                    "format": "date-time",
                    "type": "string"
                },
                "cnh": {
                    "type": "string"
                },
                "categoria": {
                    "type": "string"
                },
                "data_validade_cnh": {
                    "format": "date-time",
                    "type": "string"
                },
                "rg": {
                    "type": "string"
                },
                "orgao_emissor_rg": {
                    "type": "string"
                },
                "orgao_emissor_rg_uf": {
                    "type": "string"
                },
                "primeira_habilitacao": {
                    "format": "date-time",
                    "type": "string"
                },
                "data_emissao_cnh": {
                    "format": "date-time",
                    "type": "string"
                },
                "uf_cnh": {
                    "type": "string"
                }
            }
        },
        "VeiculoDto": {
            "type": "object",
            "properties": {
                "placa": {
                    "type": "string"
                },
                "renavam": {
                    "type": "string"
                },
                "chassi": {
                    "type": "string"
                },
                "ano": {
                    "format": "int32",
                    "type": "integer"
                },
                "eixos": {
                    "format": "int32",
                    "type": "integer"
                },
                "municipio": {
                    "type": "string"
                },
                "uf_placa": {
                    "type": "string"
                },
                "capacidade": {
                    "format": "int32",
                    "type": "integer"
                },
                "documento": {
                    "type": "string"
                },
                "ordem": {
                    "format": "int32",
                    "type": "integer"
                },
                "tracao": {
                    "type": "string"
                },
                "tipo_carroceria": {
                    "type": "string"
                },
                "tipo_carreta": {
                    "type": "string"
                },
                "proprietario": {
                    "$ref": "#/definitions/ProprietarioDto"
                }
            }
        },
        "ProprietarioDto": {
            "type": "object",
            "properties": {
                "sexo": {
                    "type": "string"
                },
                "nome": {
                    "type": "string"
                },
                "data_nascimento": {
                    "format": "date-time",
                    "type": "string"
                },
                "cep": {
                    "type": "string"
                },
                "endereco": {
                    "type": "string"
                },
                "numero": {
                    "type": "string"
                },
                "complemento": {
                    "type": "string"
                },
                "bairro": {
                    "type": "string"
                },
                "uf": {
                    "type": "string"
                },
                "cidade": {
                    "type": "string"
                },
                "proprietario_residencia": {
                    "type": "string"
                },
                "proprietario_uf": {
                    "type": "string"
                },
                "celular": {
                    "type": "string"
                },
                "telefone": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "pis": {
                    "type": "string"
                },
                "atividade_fiscal": {
                    "type": "string"
                },
                "cnae": {
                    "type": "string"
                },
                "inscricao_estadual": {
                    "type": "string"
                },
                "regime_tributario": {
                    "type": "string"
                },
                "tipo_lucro": {
                    "type": "string"
                },
                "antt": {
                    "$ref": "#/definitions/AnttDto"
                }
            }
        },
        "AnttDto": {
            "type": "object",
            "properties": {
                "cpf_cnpj": {
                    "type": "string"
                },
                "responsavel": {
                    "type": "string"
                },
                "rntrc": {
                    "type": "string"
                },
                "valido_ate": {
                    "format": "date-time",
                    "type": "string"
                },
                "cadastro_desde": {
                    "format": "date-time",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "MarcacaoApisulDTO": {
            "type": "object",
            "properties": {
                "dataInicioViagem": {
                    "type": "string"
                },
                "idTipoOperacao": {
                    "format": "int32",
                    "type": "integer"
                },
                "cnpjEmbarcador": {
                    "type": "string"
                },
                "cnpjTransportadora": {
                    "type": "string"
                },
                "documentoControle": {
                    "type": "string"
                },
                "veiculos": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Veiculo"
                    }
                },
                "motoristas": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Motorista"
                    }
                },
                "pontos": {
                    "uniqueItems": false,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Ponto"
                    }
                }
            }
        },
        "Veiculo": {
            "type": "object",
            "properties": {
                "placa": {
                    "type": "string"
                }
            }
        },
        "Motorista": {
            "type": "object",
            "properties": {
                "numeroDocumento": {
                    "type": "string"
                }
            }
        },
        "Ponto": {
            "type": "object",
            "properties": {
                "identificador": {
                    "type": "string"
                },
                "tempoPermanencia": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "MarcacaoRetornoApisulDTO": {
            "type": "object",
            "properties": {
                "numeroPortaria": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "mensagemErro": {
                    "type": "string"
                }
            }
        }
    },
    "tags": [
        {
            "name": "SMS",
            "description": "Endpoint para envio de SMS"
        },
        {
            "name": "IntegracoesTmsHub",
            "description": "Endpoints para sincronização TMS > Hub de Serviços"
        },
        {
            "name": "IntegracoesServiceNow",
            "description": "Endpoints para sincronização Service Now > Hub de Serviços"
        },
        {
            "name": "IntegracoesSapHub",
            "description": "Endpoints para sincronização SAP > Hub de Serviços"
        },
        {
            "name": "IntegracoesPortalMotoristaHub",
            "description": "Endpoints para sincronização do Portal de Motorista > Hub de Serviços"
        },
        {
            "name": "IntegracoesHubSap",
            "description": "Endpoints para sincronização Hub de Serviços > SAP"
        },
        {
            "name": "IntegracoesAppMotoristaHub",
            "description": "Endpoints para sincronização AppMotorista > Hub"
        },
        {
            "name": "Email",
            "description": "Endpoint para envio de Email"
        },
        {
            "name": "Carregamentos",
            "description": "Endpoints para dados de carregamento"
        },
        {
            "name": "UnidadesNegocio",
            "description": "Endpoints para dados e operações relacionadas a Unidades de Negócio"
        },
        {
            "name": "TrsNet",
            "description": "Endpoints para dados e operações relacionadas ao TRS-NET"
        },
        {
            "name": "TiposCarregamento",
            "description": "Endpoints para dados e operações relacionadas ao tipo de carregamento"
        },
        {
            "name": "Pedidos",
            "description": "Endpoints para dados e operações relacionadas aos Pedidos"
        },
        {
            "name": "Motoristas",
            "description": "Endpoints para dados e operações relacionadas a Motoristas"
        },
        {
            "name": "MetasTransferencia",
            "description": "Endpoints para dados de meta de transferência"
        },
        {
            "name": "Marcacoes",
            "description": "Endpoints para dados e operações relacionadas as Marcações"
        },
        {
            "name": "MarcacaoMotivosCancelamento",
            "description": "Endpoints para motivos de cancelamento da marcação"
        },
        {
            "name": "Veiculos",
            "description": "Endpoints para dados e operações relacionadas aos veículos"
        },
        {
            "name": "VeiculoDNIT",
            "description": "Endpoints para dados e operações relacionadas ao cadastro do veículo no dnit"
        },
        {
            "name": "Usuarios",
            "description": "Endpoints para autenticacao de usuarios no cadastro do motorista"
        },
        {
            "name": "Transportadoras",
            "description": "Endpoints para dados e operações relacionadas transportadoras"
        },
        {
            "name": "Totens",
            "description": "Endpoints para dados e operações relacionadas ao Totem"
        },
        {
            "name": "TiposVeiculo",
            "description": "Endpoints para dados e operações relacionadas aos tipos de veículo"
        },
        {
            "name": "TiposGrade",
            "description": "Endpoints para dados e operações relacionadas aos tipos de grade"
        },
        {
            "name": "Tickets",
            "description": "Endpoints para dados e operações relacionadas aos cadastros de tickets para o Service Now"
        },
        {
            "name": "Regioes",
            "description": "Endpoints para dados e operações relacionadas as regiões"
        },
        {
            "name": "UnidadeNegocioHorarioApp",
            "description": "Endpoints para dados e operações relacionadas aos horários da unidade para o APP"
        },
        {
            "name": "Pesquisas",
            "description": "Endpoints para dados e operações relacionadas a pesquisas"
        },
        {
            "name": "Parametros",
            "description": "Endpoints para dados e operação relacionados aos Parâmetros"
        },
        {
            "name": "MovCNotaFiscal",
            "description": "Endpoints para dados e operações relacionadas as notas fiscais dos contratos repom "
        },
        {
            "name": "MovCContratoRepom",
            "description": "Endpoints para dados e operações relacionadas aos cadastros de contrato repom e as notas fiscais"
        },
        {
            "name": "Enderecos",
            "description": "Endpoints para dados e operações relacionadas a Endereços"
        },
        {
            "name": "Clientes",
            "description": "Endpoints para dados e operações relacionadas aos Clientes"
        },
        {
            "name": "CategoriasVeiculo",
            "description": "Endpoints para dados e operações relacionadas a categorias de veículo"
        },
        {
            "name": "CodigosAcesso",
            "description": "Gerencia os códigos de acesso de autenticação"
        },
        {
            "name": "Banco",
            "description": "Endpoints para dados e operações relacionadas as bancos"
        },
        {
            "name": "Anexos",
            "description": "Gerencia o upload de anexos para consumo pelo Hub de Serviços"
        },
        {
            "name": "IntegracaoMotoristaTms",
            "description": "Endpoints para dados e operações relacionadas a integração motorista / TMS"
        },
        {
            "name": "IntegracoesApisulHub",
            "description": "Endpoints para sincronização APISUL > Hub de Serviços"
        }
    ]
}